<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liecol&#39;s Blog</title>
  <subtitle>技术，源于对生活的分享，所谓迷茫，就是才华配不上梦想！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bin.bloggao.cn/"/>
  <updated>2017-01-10T09:04:51.127Z</updated>
  <id>http://bin.bloggao.cn/</id>
  
  <author>
    <name>Liecol Gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo 添加百度谷歌收录sitemap</title>
    <link href="http://bin.bloggao.cn/2017/01/10/hexo_sitemap/"/>
    <id>http://bin.bloggao.cn/2017/01/10/hexo_sitemap/</id>
    <published>2017-01-10T08:51:52.000Z</published>
    <updated>2017-01-10T09:04:51.127Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现百度没收录blog子页，然后就研究了一番。<br>之前在theme里添加了一段百度自动推送的js：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</div><div class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</div><div class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</div><div class="line">    s.parentNode.insertBefore(bp, s);</div><div class="line">&#125;)();</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>感觉没啥人点，自己也懒得点，算了，再补一个sitemap。<br>hexo 站点地图的插件安装方式如下：<br>google：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure></p>
<p>百度：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure></p>
<p>之后编译Blog<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure></p>
<p><a href="http://bin.bloggao.cn/sitemap.xml">http://bin.bloggao.cn/sitemap.xml</a><br><a href="http://bin.bloggao.cn/baidusitemap.xml">http://bin.bloggao.cn/baidusitemap.xml</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发现百度没收录blog子页，然后就研究了一番。&lt;br&gt;之前在theme里添加了一段百度自动推送的js：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bp = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; curProtocol = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.protocol.split(&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (curProtocol === &lt;span class=&quot;string&quot;&gt;&#39;https&#39;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bp.src = &lt;span class=&quot;string&quot;&gt;&#39;https://zz.bdstatic.com/linksubmit/push.js&#39;&lt;/span&gt;;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bp.src = &lt;span class=&quot;string&quot;&gt;&#39;http://push.zhanzhang.baidu.com/push.js&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;script&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    s.parentNode.insertBefore(bp, s);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://bin.bloggao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bin.bloggao.cn//tags/hexo/"/>
    
      <category term="Blog" scheme="http://bin.bloggao.cn//tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>hexo LF will be replaced by CRLF 错误</title>
    <link href="http://bin.bloggao.cn/2017/01/10/hexo_lf_will_be_replaced_by_crlf/"/>
    <id>http://bin.bloggao.cn/2017/01/10/hexo_lf_will_be_replaced_by_crlf/</id>
    <published>2017-01-10T08:32:52.000Z</published>
    <updated>2017-01-10T08:39:41.112Z</updated>
    
    <content type="html"><![CDATA[<p>今天用hexo deploy 到github和coding，发现如下错误。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">warning: LF will be replaced by CRLF in tags/wechat/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div></pre></td></tr></table></figure></p>
<p>看到网上资源很少，这边做个记录。<br>解决方式为：</p>
<ul>
<li>删除.deploy_git 目录</li>
<li>git config –global core.autocrlf false</li>
<li>hexo clean</li>
<li>hexo g</li>
<li>hexo d</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天用hexo deploy 到github和coding，发现如下错误。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div
    
    </summary>
    
      <category term="hexo" scheme="http://bin.bloggao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bin.bloggao.cn//tags/hexo/"/>
    
      <category term="Blog" scheme="http://bin.bloggao.cn//tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>关于开发wechat小程序</title>
    <link href="http://bin.bloggao.cn/2017/01/09/wechat_min_app/"/>
    <id>http://bin.bloggao.cn/2017/01/09/wechat_min_app/</id>
    <published>2017-01-09T15:54:50.000Z</published>
    <updated>2017-01-10T02:54:32.480Z</updated>
    
    <content type="html"><![CDATA[<p>小程序今日上线致敬乔布斯，朋友圈一堆言论刷屏以及一片卧槽声起伏不定。<br>博主也不能免俗的研究了一番，注册了一个小程序，写了个demo。<br>首先发表点个人对该产品的观点：</p>
<ul>
<li>用完即走，目前看来第一批试用者倒是实实在在的没有玩坏，不过根据文档来看，玩坏是早晚的事儿。</li>
<li>与其他应用共用UnionID，这种事儿就能看出腾讯心很大。</li>
<li>优势在于开发上速度会更快，用户量以及用户推广也会方便不少。<br><strong>说说技术坑点：</strong></li>
<li>https,博主不想说脏话。</li>
<li>rpx,博主再次不想说脏话。</li>
<li>自己杜撰程序脚本，博主还是不想说脏话。<a id="more"></a>
</li>
</ul>
<p><strong>说一下它的技术优势:</strong></p>
<ul>
<li>微信api调用方便。</li>
<li>h5处理方便。</li>
<li>少了公众号授权步骤，加载上有微提升。</li>
</ul>
<p>接下来说说对开发文档的理解，个人觉得其有仿js框架的嫌疑，属于野路子里杜撰的一个脚本规则：<br>其实小程序的文档写的还是蛮清楚的：</p>
<ul>
<li>app.json 配置</li>
<li>app.js 脚本</li>
<li>app.wxss 样式</li>
<li>test.wxml 类似html的标签脚本</li>
</ul>
<p><em>小程序页面由以上4部分组成，当然这4个需要放置在同一个目录以及配置同一个文件名称。</em></p>
<hr>
<ul>
<li>wx.api 微信原生API</li>
</ul>
<p>app.json<br>结构与json一致：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">"a"</span>:a, <span class="string">"b"</span>:b, <span class="string">"c"</span>:c&#125;</div></pre></td></tr></table></figure></p>
<p>从他们官方的demo里我摘出了一部分初始配置：</p>
<ul>
<li>pages指显示需要用到的一些page路径;</li>
<li>window指对该窗口的一些配置;</li>
<li>tabBar指的是tab菜单;</li>
<li>networkTimeout指窗口超时配置。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"pages"</span>: [</div><div class="line">    <span class="string">"page/component/index"</span>,</div><div class="line">    <span class="string">"page/API/storage/storage"</span></div><div class="line">  ],</div><div class="line">  <span class="string">"window"</span>: &#123;</div><div class="line">    <span class="string">"navigationBarTextStyle"</span>: <span class="string">"black"</span>,</div><div class="line">    <span class="string">"navigationBarTitleText"</span>: <span class="string">"演示"</span>,</div><div class="line">    <span class="string">"navigationBarBackgroundColor"</span>: <span class="string">"#fbf9fe"</span>,</div><div class="line">    <span class="string">"backgroundColor"</span>: <span class="string">"#fbf9fe"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"tabBar"</span>: &#123;</div><div class="line">    <span class="string">"color"</span>: <span class="string">"#dddddd"</span>,</div><div class="line">    <span class="string">"selectedColor"</span>: <span class="string">"#3cc51f"</span>,</div><div class="line">    <span class="string">"borderStyle"</span>: <span class="string">"black"</span>,</div><div class="line">    <span class="string">"backgroundColor"</span>: <span class="string">"#ffffff"</span>,</div><div class="line">    <span class="string">"list"</span>: [&#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/component/index"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_component.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_component_HL.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"组件"</span></div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/API/index/index"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_API.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_API_HL.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"接口"</span></div><div class="line">    &#125;]</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"networkTimeout"</span>: &#123;</div><div class="line">    <span class="string">"request"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"connectSocket"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"uploadFile"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"downloadFile"</span>: <span class="number">10000</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"debug"</span>: <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>app.js<br>结构(obj参数)：<br>注册程序：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">App(&#123;</div><div class="line">  <span class="attr">onLaunch</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'App Launch'</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">myfunction</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>注册页面：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Page(&#123;</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">texts</span>: [</div><div class="line">      <span class="string">'第1个'</span>,</div><div class="line">      <span class="string">'第2个'</span>,</div><div class="line">      <span class="string">'第3个'</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">tabchange</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'第 '</span> + e.detail.current + <span class="string">' 个t'</span>)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>结构基本如上显示，后面可根据自己的需要来增加对应代码，当然在脚本app.js也依然可以申明js变量。</p>
<p>app.wxss<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>rpx = <span class="number">0.5</span>px</div></pre></td></tr></table></figure></p>
<p>这里面除了rpx比较搞，其他的都还好。</p>
<p>test.wxml<br>这里test是我自己写的。<br>类似于html的标签脚本<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">view</span>/&gt;</span>、<span class="tag">&lt;<span class="name">image</span>/&gt;</span>、<span class="tag">&lt;<span class="name">text</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"liecol_input_自动对焦"</span> <span class="attr">auto-focus</span>/&gt;</span></div></pre></td></tr></table></figure></p>
<p>这玩意儿刚开始不对应对应，还真有可能会乱掉。</p>
<p>标签数据绑定<br>这就是绝对的js框架搬过来了<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; message &#125;&#125;</div><div class="line">Page(&#123;</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">message</span>: <span class="string">'Hello LIECOL!'</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>这里的事件还是蛮有意思的，写起来也很轻松。<br>例如：</p>
<ul>
<li>longtap 手指触摸后，超过350ms再离开</li>
<li>touchcancel 手指触摸动作被打断，如来电提醒，弹窗<br>等等…<br>这个官方文档写的很清楚，我在这里就不再赘述。</li>
</ul>
<p>wx.api<br>微信原生api.<br>如果大家都开发过公众号的话，相信很清楚，根据对应的微信原生api调用方式调用即可。<br>在小程序这边都是以wx.作为前缀。<br>这些原生的微信api接口还是非常实用的，文档也很清楚，在这仅举一例即可：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">App(&#123;</div><div class="line">  <span class="attr">onLaunch</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    wx.login(&#123;</div><div class="line">      <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (res.code) &#123;</div><div class="line">          <span class="comment">//发起网络请求</span></div><div class="line">          wx.request(&#123;</div><div class="line">            <span class="attr">url</span>: <span class="string">'https://test.com/onLogin'</span>,</div><div class="line">            <span class="attr">data</span>: &#123;</div><div class="line">              <span class="attr">code</span>: res.code</div><div class="line">            &#125;</div><div class="line">          &#125;)</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">          <span class="built_in">console</span>.log(<span class="string">'获取用户登录态失败！'</span> + res.errMsg)</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<ul>
<li>APP:界面程序里</li>
<li>onLaunch为：生命周期函数–监听小程序初始化</li>
<li>wx.login 为微信的原生api接口</li>
<li>wx.request 为发起的 HTTPS 请求。</li>
<li>url为地址</li>
<li>data为参数</li>
</ul>
<p>关于小程序基本的结构介绍差不多就是这些.<br>还有一些关于继承A-继承-&gt;B-继承-&gt;C 但是A-/继承-&gt;C<br>一类的就让大家在开发过程中自己去探索吧。<br>Create By<br>liecol-晓斌<br>2017-01-09</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小程序今日上线致敬乔布斯，朋友圈一堆言论刷屏以及一片卧槽声起伏不定。&lt;br&gt;博主也不能免俗的研究了一番，注册了一个小程序，写了个demo。&lt;br&gt;首先发表点个人对该产品的观点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用完即走，目前看来第一批试用者倒是实实在在的没有玩坏，不过根据文档来看，玩坏是早晚的事儿。&lt;/li&gt;
&lt;li&gt;与其他应用共用UnionID，这种事儿就能看出腾讯心很大。&lt;/li&gt;
&lt;li&gt;优势在于开发上速度会更快，用户量以及用户推广也会方便不少。&lt;br&gt;&lt;strong&gt;说说技术坑点：&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;https,博主不想说脏话。&lt;/li&gt;
&lt;li&gt;rpx,博主再次不想说脏话。&lt;/li&gt;
&lt;li&gt;自己杜撰程序脚本，博主还是不想说脏话。
    
    </summary>
    
      <category term="wechat" scheme="http://bin.bloggao.cn/categories/wechat/"/>
    
    
      <category term="wechat" scheme="http://bin.bloggao.cn//tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>Apache2.4与2.2版本访问配置对比</title>
    <link href="http://bin.bloggao.cn/2016/12/25/Apache_Directory/"/>
    <id>http://bin.bloggao.cn/2016/12/25/Apache_Directory/</id>
    <published>2016-12-25T11:02:25.000Z</published>
    <updated>2017-01-03T07:27:23.704Z</updated>
    
    <content type="html"><![CDATA[<p>之前折腾服务器，从<code>Apache2.2</code>-&gt;<code>Nginx1.10</code>-&gt;<code>Apache2.4</code><br>在指定挂载目录的时候出现这么一个问题,log显示为：<br>403错误<br><strong>You don’t have permission to access / on this server.</strong><br><a id="more"></a><br>当时想着Directory更改为如下方式：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;Directory /&gt;</span></div><div class="line"><span class="attribute"><span class="nomarkup">Options</span></span> FollowSymLinks</div><div class="line"><span class="attribute">AllowOverride</span> None</div><div class="line"><span class="attribute"><span class="nomarkup">Order</span></span> deny,allow</div><div class="line"><span class="attribute"><span class="nomarkup">Deny</span></span> from <span class="literal">all</span></div><div class="line"><span class="section">&lt;/Directory&gt;</span></div></pre></td></tr></table></figure></p>
<p>发现依然不好使，后来发现2.2版本与2.4版本配置是不一致的。<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;Directory /&gt;</span></div><div class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> Indexes FollowSymLinks</div><div class="line">    <span class="attribute">AllowOverride</span> None </div><div class="line">    <span class="attribute">Require</span> <span class="literal">all</span> granted</div><div class="line"><span class="section">&lt;/Directory&gt;</span></div></pre></td></tr></table></figure></p>
<p>Apache2.2 的配置:<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute"><span class="nomarkup">Order</span></span> deny,allow\ #排序，先拒绝后允许</div><div class="line"><span class="attribute"><span class="nomarkup">Deny</span></span> from <span class="literal">all</span> #拒绝所有</div></pre></td></tr></table></figure></p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute"><span class="nomarkup">Order</span></span> allow,deny #排序，先允许后拒绝</div><div class="line"><span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span> #允许所有</div></pre></td></tr></table></figure>
<p>Apache2.4 的配置:<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Require</span> <span class="literal">all</span> denied #拒绝所有</div></pre></td></tr></table></figure></p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Require</span> <span class="literal">all</span> granted #允许所有</div></pre></td></tr></table></figure>
<p>根据2.4版本修改后，Apache成功启动。</p>
<p>Ps:后来发现又报404错误，发现在程序中写的.htacess未生效：<br>便再次更改:<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">AllowOverride</span> <span class="literal">All</span>    //若不设置为<span class="literal">All</span>，则所有的.htacess文件的规则都不生效</div></pre></td></tr></table></figure></p>
<p>之后站点就成功跑通了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前折腾服务器，从&lt;code&gt;Apache2.2&lt;/code&gt;-&amp;gt;&lt;code&gt;Nginx1.10&lt;/code&gt;-&amp;gt;&lt;code&gt;Apache2.4&lt;/code&gt;&lt;br&gt;在指定挂载目录的时候出现这么一个问题,log显示为：&lt;br&gt;403错误&lt;br&gt;&lt;strong&gt;You don’t have permission to access / on this server.&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="Apache" scheme="http://bin.bloggao.cn//tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>挂载磁盘和永久挂载</title>
    <link href="http://bin.bloggao.cn/2016/12/23/linux_fdisk/"/>
    <id>http://bin.bloggao.cn/2016/12/23/linux_fdisk/</id>
    <published>2016-12-23T10:02:15.000Z</published>
    <updated>2017-01-04T03:32:54.281Z</updated>
    
    <content type="html"><![CDATA[<p>最近折腾，给磁盘扩容，阿里云得从新挂载，顺道儿这边做个记录。</p>
<p>df -hl(看看有没有挂载成功)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">root@iZ25xadwwi4Z:~# df -hl</div><div class="line">Filesystem      Size  Used Avail Use% Mounted on</div><div class="line">/dev/xvda1       20G  3.4G   16G  18% /</div><div class="line">udev            489M  4.0K  489M   1% /dev</div><div class="line">tmpfs           199M  268K  199M   1% /run</div><div class="line">none            5.0M     0  5.0M   0% /run/lock</div><div class="line">none            498M     0  498M   0% /run/shm</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>fdisk -l (看看挂载分区，下面是我的)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Disk /dev/xvdb: 42.9 GB, 42949672960 bytes</div><div class="line">255 heads, 63 sectors/track, 5221 cylinders, total 83886080 sectors</div><div class="line">Units = sectors of 1 * 512 = 512 bytes</div><div class="line">Sector size (logical/physical): 512 bytes / 512 bytes</div><div class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</div><div class="line">Disk identifier: 0xb5efb014</div><div class="line"></div><div class="line">Device Boot          Start         End      Blocks   Id  System</div><div class="line">/dev/xvdb1            2048    40000000    19998976+  83  Linux</div><div class="line">/dev/xvdb2        40000001    83886079    21943039+  83  Linux</div></pre></td></tr></table></figure></p>
<p>fdisk /dev/path(磁盘路径)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Command (m for help): m</div><div class="line">Command action</div><div class="line">   a   toggle a bootable flag</div><div class="line">   b   edit bsd disklabel</div><div class="line">   c   toggle the dos compatibility flag</div><div class="line">   d   delete a partition</div><div class="line">   l   list known partition types</div><div class="line">   m   print this menu</div><div class="line">   n   add a new partition</div><div class="line">   o   create a new empty DOS partition table</div><div class="line">   p   print the partition table</div><div class="line">   q   quit without saving changes</div><div class="line">   s   create a new empty Sun disklabel</div><div class="line">   t   change a partition&apos;s system id</div><div class="line">   u   change display/entry units</div><div class="line">   v   verify the partition table</div><div class="line">   w   write table to disk and exit</div><div class="line">   x   extra functionality (experts only)</div></pre></td></tr></table></figure></p>
<p>顺序：<br>m<br>|<br>n<br>|<br>p<br>分配和设置大小</p>
<p>分配完成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Command (m for help): wq</div><div class="line">The partition table has been altered!</div><div class="line"></div><div class="line">Calling ioctl() to re-read partition table.</div><div class="line">Syncing disks.</div></pre></td></tr></table></figure></p>
<p>mkfs.ext3 /dev/xvdb1 创建文件系统(需要为其指定一种文件系统才能用来存储数据，这边ext3，可以-t查看)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">root@iZ25xadwwi4Z:~# mkfs.ext3 /dev/xvdb1</div><div class="line">mke2fs 1.42 (29-Nov-2011)</div><div class="line">Filesystem label=</div><div class="line">OS type: Linux</div><div class="line">Block size=4096 (log=2)</div><div class="line">Fragment size=4096 (log=2)</div><div class="line">Stride=0 blocks, Stripe width=0 blocks</div><div class="line">1250928 inodes, 4999744 blocks</div><div class="line">249987 blocks (5.00%) reserved for the super user</div><div class="line">First data block=0</div><div class="line">Maximum filesystem blocks=4294967296</div><div class="line">153 block groups</div><div class="line">32768 blocks per group, 32768 fragments per group</div><div class="line">8176 inodes per group</div><div class="line">Superblock backups stored on blocks: </div><div class="line">	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </div><div class="line">	4096000</div><div class="line"></div><div class="line">Allocating group tables: done                            </div><div class="line">Writing inode tables: done                            </div><div class="line">Creating journal (32768 blocks): done</div><div class="line">Writing superblocks and filesystem accounting information: done</div></pre></td></tr></table></figure></p>
<p>挂载文件系统<br>这边不能选择已有文件，否则会被覆盖掉。<br>mount(临时挂载，好久没挂，我之前忘了重启就没了，到这就结束了。)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /liecol</div><div class="line">mount /dev/xvdb1 /liecol/</div></pre></td></tr></table></figure></p>
<p>查看一下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@iZ25xadwwi4Z:~# ls -l /liecol/</div><div class="line">total 16</div><div class="line">drwx------ 2 root root 16384 Dec 23 20:42 lost+found</div></pre></td></tr></table></figure></p>
<p>这一步，别忘了(永久挂载)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &quot;/dev/xvdb1 /liecol ext3 defaults 1 2&quot; &gt;&gt; /etc/fstab</div></pre></td></tr></table></figure></p>
<p>别和我一样糟糕了。</p>
<p>df -hl 查看一下，再重启试试看就差不多了。</p>
<p>create By liecol<br>2016/12/23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近折腾，给磁盘扩容，阿里云得从新挂载，顺道儿这边做个记录。&lt;/p&gt;
&lt;p&gt;df -hl(看看有没有挂载成功)&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;root@iZ25xadwwi4Z:~# df -hl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Filesystem      Size  Used Avail Use% Mounted on&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/dev/xvda1       20G  3.4G   16G  18% /&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;udev            489M  4.0K  489M   1% /dev&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tmpfs           199M  268K  199M   1% /run&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;none            5.0M     0  5.0M   0% /run/lock&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;none            498M     0  498M   0% /run/shm&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>PHPExcel的使用</title>
    <link href="http://bin.bloggao.cn/2016/12/20/PHPExcel/"/>
    <id>http://bin.bloggao.cn/2016/12/20/PHPExcel/</id>
    <published>2016-12-20T12:50:00.000Z</published>
    <updated>2017-01-04T03:31:15.905Z</updated>
    
    <content type="html"><![CDATA[<p>下载文件<br><strong>PHPExcel.php(file)</strong><br><strong>PHPExcel(dir)</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">include</span> <span class="string">'PHPExcel.php'</span>;</div><div class="line"><span class="keyword">include</span> <span class="string">'PHPExcel/Writer/Excel2007.php'</span>;</div></pre></td></tr></table></figure></p>
<p>以thinkphp为例贴上一个可抄作业的代码(非tp可删减对应代码即可)：<br>其他单元格细节请自行搜索，没什么太大难度。<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">//导出excel核心代码</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exportExcel</span><span class="params">($fileName,$expTitle,$expCellName,$expTableData)</span></span>&#123;</div><div class="line">        <span class="comment">// vendor('PHPExcel.PHPExcel'); /-----Start</span></div><div class="line">        vendor(<span class="string">"PHPExcel.PHPExcel"</span>);</div><div class="line">        vendor(<span class="string">"PHPExcel.PHPExcel.Writer.Excel5"</span>);</div><div class="line">        vendor(<span class="string">"PHPExcel.PHPExcel.IOFactory.php"</span>);</div><div class="line">        $PHPExcel = <span class="keyword">new</span> \PHPExcel();    <span class="comment">//-----End(这一块可以自行更改)</span></div><div class="line">        $xlsTitle = iconv(<span class="string">'utf-8'</span>, <span class="string">'gb2312'</span>, $expTitle);<span class="comment">//文件名称</span></div><div class="line"><span class="comment">//      $fileName = $_SESSION['loginAccount'].date('_YmdHis');//or $xlsTitle 文件名称可根据自己情况设定</span></div><div class="line"></div><div class="line">        $cellNum = count($expCellName);</div><div class="line">        $dataNum = count($expTableData);</div><div class="line">        </div><div class="line">        $objPHPExcel = $PHPExcel;</div><div class="line">        $cellName = <span class="keyword">array</span>(<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,<span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>,<span class="string">'AA'</span>,<span class="string">'AB'</span>,<span class="string">'AC'</span>,<span class="string">'AD'</span>,<span class="string">'AE'</span>,<span class="string">'AF'</span>,<span class="string">'AG'</span>,<span class="string">'AH'</span>,<span class="string">'AI'</span>,<span class="string">'AJ'</span>,<span class="string">'AK'</span>,<span class="string">'AL'</span>,<span class="string">'AM'</span>,<span class="string">'AN'</span>,<span class="string">'AO'</span>,<span class="string">'AP'</span>,<span class="string">'AQ'</span>,<span class="string">'AR'</span>,<span class="string">'AS'</span>,<span class="string">'AT'</span>,<span class="string">'AU'</span>,<span class="string">'AV'</span>,<span class="string">'AW'</span>,<span class="string">'AX'</span>,<span class="string">'AY'</span>,<span class="string">'AZ'</span>);</div><div class="line">    </div><div class="line">        <span class="keyword">if</span>($cellNum &gt;<span class="number">0</span>)&#123;</div><div class="line">            $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;mergeCells(<span class="string">'A1:'</span>.$cellName[$cellNum<span class="number">-1</span>].<span class="string">'1'</span>);<span class="comment">//合并单元格</span></div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;mergeCells(<span class="string">'A1:'</span>.$cellName[<span class="number">10</span>].<span class="string">'1'</span>);<span class="comment">//合并单元格</span></div><div class="line">        &#125;</div><div class="line">        $objPHPExcel-&gt;setActiveSheetIndex(<span class="number">0</span>)-&gt;setCellValue(<span class="string">'A1'</span>, $expTitle.<span class="string">'  Export time:'</span>.date(<span class="string">'Y-m-d H:i:s'</span>));</div><div class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$cellNum;$i++)&#123;</div><div class="line">            $objPHPExcel-&gt;setActiveSheetIndex(<span class="number">0</span>)-&gt;setCellValue($cellName[$i].<span class="string">'2'</span>, $expCellName[$i][<span class="number">1</span>]);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// Miscellaneous glyphs, UTF-8</span></div><div class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$dataNum;$i++)&#123;</div><div class="line">            <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;$cellNum;$j++)&#123;</div><div class="line">                $XS_SJ = $expTableData[$i][$expCellName[$j][<span class="number">0</span>]];</div><div class="line">                $bar_code = (string)$expTableData[$i][$expCellName[<span class="number">0</span>][<span class="number">0</span>]];</div><div class="line">                <span class="keyword">if</span>((int)($cellNum<span class="number">-1</span>)==$j &amp;&amp; $bar_code)&#123;</div><div class="line">                    $objDrawing = <span class="keyword">new</span> \PHPExcel_Worksheet_Drawing();</div><div class="line">                    $bar_path = <span class="string">"./Public/Bar_code/"</span>.$bar_code.<span class="string">".png"</span>;</div><div class="line">                    $objDrawing-&gt;setPath($bar_path);</div><div class="line">                    $objDrawing-&gt;setHeight(<span class="number">30</span>);</div><div class="line">                    $objDrawing-&gt;setCoordinates($cellName[$j].($i+<span class="number">3</span>), <span class="string">' '</span>.$XS_SJ);</div><div class="line">                    $objDrawing-&gt;setOffsetX(<span class="number">20</span>);</div><div class="line">                    $objDrawing-&gt;setRotation(<span class="number">12</span>);</div><div class="line">                    $objDrawing-&gt;getShadow()-&gt;setVisible(<span class="keyword">true</span>);</div><div class="line">                    $objDrawing-&gt;getShadow()-&gt;setDirection(<span class="number">45</span>);</div><div class="line">                    $objDrawing-&gt;setWorksheet($objPHPExcel-&gt;getActiveSheet());</div><div class="line">                &#125;</div><div class="line">                <span class="comment">//用' ' 处理数字为文本,以免excel中数字太大时科学计数法导致错误</span></div><div class="line">                $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;setCellValue($cellName[$j].($i+<span class="number">3</span>), <span class="string">' '</span>.$XS_SJ);<span class="comment">//控制不能显示科学计数数字。</span></div><div class="line">                $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;getColumnDimension($cellName[$j])-&gt;setWidth(<span class="number">20</span>);</div><div class="line">                $objPHPExcel-&gt;getActiveSheet()-&gt;getDefaultRowDimension($i)-&gt;setRowHeight(<span class="number">22</span>);</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    </div><div class="line">        header(<span class="string">'pragma:public'</span>);</div><div class="line">        header(<span class="string">"Expires: 0"</span>);</div><div class="line">        header(<span class="string">"Cache-Control:must-revalidate,post-check=0,pre-check=0"</span>);</div><div class="line">        header(<span class="string">"Content-Type:application/force-download"</span>);</div><div class="line">        header(<span class="string">"Content-Type:application/octet-stream"</span>);</div><div class="line">        header(<span class="string">"Content-Type:application/download"</span>);</div><div class="line">        header(<span class="string">'Content-type:application/vnd.ms-excel;charset=utf-8;name="'</span>.$xlsTitle.<span class="string">'.xls"'</span>);</div><div class="line">        header(<span class="string">"Content-Disposition:attachment;filename=$fileName.xls"</span>);<span class="comment">//attachment新窗口打印inline本窗口打印</span></div><div class="line">        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, <span class="string">'Excel5'</span>);</div><div class="line">        $objWriter-&gt;save(<span class="string">'php://output'</span>);</div><div class="line">        <span class="comment">// $objPHPExcel = PHPExcel_IOFactory::load($fileName);</span></div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>调用：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">export_to_excel</span><span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">       $expTitle = <span class="string">'liecol快递'</span> ; <span class="comment">//设置文件名</span></div><div class="line">       $fileName = <span class="string">'liecol快递'</span> . date(<span class="string">'Ymd'</span>); <span class="comment">//设置文件名</span></div><div class="line">       </div><div class="line">       $expCellName  = <span class="keyword">array</span>(</div><div class="line">               <span class="keyword">array</span>(<span class="string">'tracking_number'</span>,<span class="string">'分单号'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_name'</span>,<span class="string">'发件人'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_tel'</span>,<span class="string">'发件人电话'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_address'</span>,<span class="string">'发件人地址'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_country'</span>,<span class="string">'发件人国家'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_name'</span>,<span class="string">'收件人姓名'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_address'</span>,<span class="string">'收件人地址'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_code'</span>,<span class="string">'收件人邮编'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_tel'</span>,<span class="string">'收件人电话'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_id'</span>,<span class="string">'证件号'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'update_time'</span>,<span class="string">'订单日期'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'bar_code'</span>,<span class="string">'条形码'</span>)</div><div class="line">       );</div><div class="line">       </div><div class="line">       $expTableData = D(<span class="string">'Order'</span>)-&gt;field(<span class="string">'tracking_number,sender_name,sender_tel,sender_address,sender_country,recipients_name,recipients_address,recipients_code,recipients_tel,recipients_id,update_time'</span>)-&gt;select();</div><div class="line">       <span class="keyword">$this</span>-&gt;exportExcel($fileName,$expTitle,$expCellName,$expTableData);</div><div class="line"></div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>create By<br>liecol-晓斌<br>2016-12-20</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下载文件&lt;br&gt;&lt;strong&gt;PHPExcel.php(file)&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;PHPExcel(dir)&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;PHPExcel.php&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;PHPExcel/Writer/Excel2007.php&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以thinkphp为例贴上一个可抄作业的代码(非tp可删减对应代码即可)：&lt;br&gt;其他单元格细节请自行搜索，没什么太大难度。&lt;br&gt;
    
    </summary>
    
      <category term="php" scheme="http://bin.bloggao.cn/categories/php/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
      <category term="phpexcel" scheme="http://bin.bloggao.cn//tags/phpexcel/"/>
    
  </entry>
  
  <entry>
    <title>php中关于redis的使用</title>
    <link href="http://bin.bloggao.cn/2016/11/23/php_redis/"/>
    <id>http://bin.bloggao.cn/2016/11/23/php_redis/</id>
    <published>2016-11-23T14:22:00.000Z</published>
    <updated>2017-01-04T03:31:31.553Z</updated>
    
    <content type="html"><![CDATA[<p><em>安装扩展我这边不做过多说明，大家自行搜索一下。</em></p>
<p>php连接到redis服务<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="comment">//连接本地的 Redis 服务</span></div><div class="line">   $redis = <span class="keyword">new</span> Redis();</div><div class="line">   $redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="number">6379</span>);</div><div class="line">   <span class="keyword">echo</span> <span class="string">"Connection to liecol server."</span>;</div><div class="line">         <span class="comment">//查看服务是否运行</span></div><div class="line">   <span class="keyword">echo</span> <span class="string">"Running: "</span>+ $redis-&gt;ping();</div><div class="line"></div><div class="line">   <span class="comment">//Connection to liecol server.</span></div><div class="line">   <span class="comment">//Running: PONG</span></div><div class="line">   <span class="comment">//新建数据</span></div><div class="line">   $redis-&gt;set(<span class="string">"liecol"</span>, <span class="string">"name"</span>);</div><div class="line">   $arList = $redis-&gt;get(<span class="string">"liecol-list"</span>);</div><div class="line"></div><div class="line">   $redis-&gt;lpush(<span class="string">"liecol1"</span>, <span class="string">"Redis"</span>);</div><div class="line">   $redis-&gt;lpush(<span class="string">"liecol1"</span>, <span class="string">"Mongodb"</span>);</div><div class="line">   $redis-&gt;lpush(<span class="string">"liecol1"</span>, <span class="string">"Mysql"</span>);</div><div class="line">   $arList = $redis-&gt;lrange(<span class="string">"liecol1"</span>, <span class="number">0</span> ,<span class="number">5</span>);</div><div class="line"></div><div class="line">   $arList = $redis-&gt;keys(<span class="string">"*"</span>);</div><div class="line">   <span class="comment">//liecol</span></div><div class="line">   <span class="comment">//liecol1</span></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>几个常用的命令：<br>setex 带生存时间的写入值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;setex(<span class="string">'key'</span>, <span class="number">3600</span>, <span class="string">'value'</span>); <span class="comment">// sets key → value, with 1h TTL.</span></div></pre></td></tr></table></figure></p>
<p>setnx 判断是否重复的，写入值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;setnx(<span class="string">'key'</span>, <span class="string">'value'</span>);</div><div class="line">$redis-&gt;setnx(<span class="string">'key'</span>, <span class="string">'value'</span>);</div></pre></td></tr></table></figure></p>
<p>delete  删除指定key的值<br>返回已经删除key的个数（长整数）<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;delete(<span class="string">'key1'</span>, <span class="string">'key2'</span>);</div><div class="line">$redis-&gt;delete(<span class="keyword">array</span>(<span class="string">'key3'</span>, <span class="string">'key4'</span>, <span class="string">'key5'</span>));</div></pre></td></tr></table></figure></p>
<p>ttl<br>得到一个key的生存时间</p>
<p>exists<br>判断key是否存在。存在 true 不在 false</p>
<p>lSize<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;lSize(<span class="string">'key'</span>);</div></pre></td></tr></table></figure></p>
<p>返回名称为key的list有多少个元素</p>
<p>以下为php-redis中文文档(内含命令介绍)<br><a href="http://bbs.redis.cn/forum.php?mod=viewthread&amp;tid=481" target="_blank" rel="external">http://bbs.redis.cn/forum.php?mod=viewthread&amp;tid=481</a></p>
<p>create By<br>liecol-晓斌<br>2016-11-23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;安装扩展我这边不做过多说明，大家自行搜索一下。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;php连接到redis服务&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//连接本地的 Redis 服务&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Redis();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;connect(&lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Connection to liecol server.&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//查看服务是否运行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Running: &quot;&lt;/span&gt;+ $redis-&amp;gt;ping();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Connection to liecol server.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Running: PONG&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//新建数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;set(&lt;span class=&quot;string&quot;&gt;&quot;liecol&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $arList = $redis-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&quot;liecol-list&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;lpush(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Redis&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;lpush(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Mongodb&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;lpush(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Mysql&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $arList = $redis-&amp;gt;lrange(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $arList = $redis-&amp;gt;keys(&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//liecol&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//liecol1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://bin.bloggao.cn/categories/nosql/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
      <category term="redis" scheme="http://bin.bloggao.cn//tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>jQuery上传插件FileUpload浅析</title>
    <link href="http://bin.bloggao.cn/2016/11/23/jQuery_FileUpload/"/>
    <id>http://bin.bloggao.cn/2016/11/23/jQuery_FileUpload/</id>
    <published>2016-11-23T12:22:00.000Z</published>
    <updated>2017-01-04T03:32:39.761Z</updated>
    
    <content type="html"><![CDATA[<p>对比了一下fileupload与其他的一些多图上传插件的对比<br>发现1fileupload1不需要对浏览器插件有支持，而且是一个神似<code>input file</code>的一个插件，因为业务需要，于是做了一下简单研究。<br>jQuery <code>File Upload</code>支持多文件上传、取消、删除，上传前缩略图预览、列表显示图片大小，支持上传进度条显示。</p>
<p>需要的文件：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">jquey<span class="number">-1.8</span><span class="number">.3</span>.min.js</div><div class="line">jquery-ui-widget.js</div><div class="line">jquery.iframe-transport.js</div><div class="line">jquery.fileupload.js</div></pre></td></tr></table></figure></p>
<p>如果跨站点的话，需要一个iframe的文件，也可支持bootstrap样式修改。</p>
<p>需要的表单样式：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"fileupload"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">data-url</span>=<span class="string">"action_url"</span> <span class="attr">name</span>=<span class="string">"file[]"</span> <span class="attr">multiple</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>action可直接放到input上也可自行添加url。<br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#fileupload_input"</span>).fileupload(&#123;</div><div class="line">    <span class="attr">url</span>:<span class="string">"upload"</span>,<span class="comment">//文件上传地址，当然也可以直接写在input的data-url属性内</span></div><div class="line">    autoUpload: <span class="literal">true</span>,<span class="comment">//是否自动上传  </span></div><div class="line">	dataType: <span class="string">'json'</span>,  </div><div class="line">    <span class="attr">formData</span>:&#123;<span class="attr">param1</span>:<span class="string">"p1"</span>,<span class="attr">param2</span>:<span class="string">"p2"</span>&#125;,<span class="comment">//如果需要额外添加参数可以在这里添加</span></div><div class="line">    done:<span class="function"><span class="keyword">function</span>(<span class="params">e,data</span>)</span>&#123;</div><div class="line">        <span class="comment">//返回的数据在result.result中，假设我们服务器返回了一个json对象</span></div><div class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(result.result));</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>回调函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">add: <span class="function"><span class="keyword">function</span> (<span class="params">e, data</span>) </span>&#123;</div><div class="line">            data.context = $(<span class="string">'&lt;p/&gt;'</span>).text(<span class="string">'Uploading...'</span>).appendTo(<span class="built_in">document</span>.body);</div><div class="line">            data.submit();</div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<p>进度条：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bar"</span> <span class="attr">style</span>=<span class="string">"width: 0%;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">progressall: <span class="function"><span class="keyword">function</span> (<span class="params">e, data</span>) </span>&#123;</div><div class="line">       <span class="keyword">var</span> progress = <span class="built_in">parseInt</span>(data.loaded / data.total * <span class="number">100</span>, <span class="number">10</span>);</div><div class="line">       $(<span class="string">'#progress .bar'</span>).css(</div><div class="line">           <span class="string">'width'</span>,</div><div class="line">           progress + <span class="string">'%'</span></div><div class="line">       );</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>获取回调数据:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">done:<span class="function"><span class="keyword">function</span>(<span class="params">e,data</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(result.result));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>create By<br>liecol-晓斌<br>2016-11-23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对比了一下fileupload与其他的一些多图上传插件的对比&lt;br&gt;发现1fileupload1不需要对浏览器插件有支持，而且是一个神似&lt;code&gt;input file&lt;/code&gt;的一个插件，因为业务需要，于是做了一下简单研究。&lt;br&gt;jQuery &lt;code&gt;File Upload&lt;/code&gt;支持多文件上传、取消、删除，上传前缩略图预览、列表显示图片大小，支持上传进度条显示。&lt;/p&gt;
&lt;p&gt;需要的文件：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;jquey&lt;span class=&quot;number&quot;&gt;-1.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;.min.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jquery-ui-widget.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jquery.iframe-transport.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jquery.fileupload.js&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果跨站点的话，需要一个iframe的文件，也可支持bootstrap样式修改。&lt;/p&gt;
&lt;p&gt;需要的表单样式：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fileupload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-url&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;action_url&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;file[]&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;multiple&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;action可直接放到input上也可自行添加url。&lt;br&gt;
    
    </summary>
    
      <category term="javascript" scheme="http://bin.bloggao.cn/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://bin.bloggao.cn//tags/javascript/"/>
    
      <category term="jquery" scheme="http://bin.bloggao.cn//tags/jquery/"/>
    
      <category term="fileupload" scheme="http://bin.bloggao.cn//tags/fileupload/"/>
    
  </entry>
  
  <entry>
    <title>redis操作浅谈</title>
    <link href="http://bin.bloggao.cn/2016/11/23/redis/"/>
    <id>http://bin.bloggao.cn/2016/11/23/redis/</id>
    <published>2016-11-23T11:30:00.000Z</published>
    <updated>2017-01-04T03:31:02.034Z</updated>
    
    <content type="html"><![CDATA[<p><strong>介绍：</strong><br>Redis 开源高性能的<code>key-value</code>数据库，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。<br>读的速度是110000次/s,写的速度是81000次/s。<br><code>redis</code>支持string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)<br>这里不做安装介绍，有需要的可自行搜索教程。<br>Redis 客户端语法：<code>redis-cli</code><br>启动 redis 客户端，打开终端并输入命令 redis-cli.<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$redis-cli</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; PING</div><div class="line">PONG</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>远程服务：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$redis-cli -h host -p port -a password</div><div class="line">eg: $redis-cli -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> -p <span class="number">6379</span> -a <span class="string">"mypass"</span></div></pre></td></tr></table></figure></p>
<p>redis key键<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SET liecol redis</div><div class="line">OK</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; DEL liecol</div><div class="line">(integer) <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>这里说几个常用的，其他的自行搜索redis键的一些命令<br>DEL key 该命令用于在 key 存在是删除 key。<br>DUMP key 序列化给定 key ，并返回被序列化的值。<br>EXISTS key 检查给定 key 是否存在。<br>EXPIRE key seconds 为给定 key 设置过期时间。<br>PERSIST key 移除 key 的过期时间，key 将持久保持。<br>RENAME key newkey 修改 key 的名称</p>
<p>value类型：<br>string（字符串）<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; GET liecol redis</div><div class="line"><span class="string">"redis"</span></div></pre></td></tr></table></figure></p>
<p>这里说几个常用的，其他的自行搜索redis字符串的一些命令<br>SET key value 设置指定 key 的值<br>GET key 获取指定 key 的值。<br>STRLEN key 返回 key 所储存的字符串值的长度。<br>MSET key value [key value …] 同时设置一个或多个 key-value 对。</p>
<p>Redis hash (hash特别适合用于存储对象)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; HMSET liecol name <span class="string">"redis tutorial"</span> description <span class="string">"redis basic commands for caching"</span> likes <span class="number">20</span> visitors <span class="number">23000</span></div><div class="line">OK</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; HGETALL liecol</div><div class="line"> </div><div class="line"><span class="number">1</span>) <span class="string">"name"</span></div><div class="line"><span class="number">2</span>) <span class="string">"redis tutorial"</span></div><div class="line"><span class="number">3</span>) <span class="string">"description"</span></div><div class="line"><span class="number">4</span>) <span class="string">"redis basic commands for caching"</span></div><div class="line"><span class="number">5</span>) <span class="string">"likes"</span></div><div class="line"><span class="number">6</span>) <span class="string">"20"</span></div><div class="line"><span class="number">7</span>) <span class="string">"visitors"</span></div><div class="line"><span class="number">8</span>) <span class="string">"23000"</span></div></pre></td></tr></table></figure></p>
<p>HDEL key field2 [field2] 删除一个或多个哈希表字段<br>HEXISTS key field 查看哈希表 key 中，指定的字段是否存在。<br>HGET key field 获取存储在哈希表中指定字段的值<br>HGETALL key 获取在哈希表中指定 key 的所有字段和值<br>HVALS key 获取哈希表中所有值</p>
<p>Redis列表<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LPUSH liecol name1</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LPUSH liecol name2</div><div class="line">(integer) <span class="number">2</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LPUSH liecol name3</div><div class="line">(integer) <span class="number">3</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LRANGE liecol <span class="number">0</span> <span class="number">10</span></div><div class="line"><span class="number">1</span>) <span class="string">"name1"</span></div><div class="line"><span class="number">2</span>) <span class="string">"name2"</span></div><div class="line"><span class="number">3</span>) <span class="string">"name3"</span></div></pre></td></tr></table></figure></p>
<p>LINDEX key index 通过索引获取列表中的元素<br>LINSERT key BEFORE|AFTER pivot value 在列表的元素前或者后插入元素<br>LLEN key 获取列表长度<br>LPOP key 移出并获取列表的第一个元素<br>LPUSH key value1 [value2] 将一个或多个值插入到列表头部<br>LREM key count value 移除列表元素<br>LRANGE key start stop 获取列表指定范围内的元素</p>
<p>Redis的Set (集合中不能出现重复的数据)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name1</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name2</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name3</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name3</div><div class="line">(integer) <span class="number">0</span>-------------(集合中不能出现重复的数据)</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SMEMBERS liecol</div><div class="line"><span class="number">1</span>) <span class="string">"name1"</span></div><div class="line"><span class="number">2</span>) <span class="string">"name2"</span></div><div class="line"><span class="number">3</span>) <span class="string">"name3"</span></div></pre></td></tr></table></figure></p>
<p>SADD key member1 [member2] 向集合添加一个或多个成员<br>SCARD key 获取集合的成员数<br>SDIFF key1 [key2] 返回给定所有集合的差集<br>SINTER key1 [key2] 返回给定所有集合的交集<br>SISMEMBER key member 判断 member 元素是否是集合 key 的成员<br>SMEMBERS key 返回集合中的所有成员<br>SREM key member1 [member2] 移除集合中一个或多个成员<br>SUNION key1 [key2] 返回所有给定集合的并集</p>
<p>事务：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">MULTI</div><div class="line">SET liecol <span class="string">"test"</span></div><div class="line">GET liecol</div><div class="line">SADD x x</div><div class="line">LPUSH y y</div><div class="line">HGETALL z z</div><div class="line">EXEC</div></pre></td></tr></table></figure></p>
<p>DISCARD 取消事务，放弃执行事务块内的所有命令。<br>EXEC 执行所有事务块内的命令。<br>MULTI 标记一个事务块的开始。</p>
<p>redis 性能测试：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">redis-benchmark [option] [option value]</div><div class="line">eg: redis-benchmark -n <span class="number">100000</span></div></pre></td></tr></table></figure></p>
<p>1    -h    指定服务器主机名    127.0.0.1<br>2    -p    指定服务器端口    6379<br>3    -s    指定服务器 socket<br>4    -c    指定并发连接数    50<br>5    -n    指定请求数    10000<br>6    -d    以字节的形式指定 SET/GET 值的数据大小    2<br>7    -k    1=keep alive 0=reconnect    1<br>8    -r    SET/GET/INCR 使用随机 key, SADD 使用随机值<br>9    -P    通过管道传输 <numreq> 请求    1<br>10    -q    强制退出 redis。仅显示 query/sec 值<br>11    –csv    以 CSV 格式输出<br>12    -l    生成循环，永久执行测试<br>13    -t    仅运行以逗号分隔的测试命令列表。<br>14    -I    Idle 模式。仅打开 N 个 idle 连接并等待。</numreq></p>
<p>Eg:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">redis-benchmark -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> -p <span class="number">6379</span> -t set,lpush -n <span class="number">100000</span> -q</div><div class="line">SET: <span class="number">146198.83</span> requests per second</div><div class="line">LPUSH: <span class="number">145560.41</span> requests per second</div></pre></td></tr></table></figure></p>
<p>以上实例中主机为 127.0.0.1，端口号为 6379，执行的命令为 set,lpush，请求数为 10000，通过 -q 参数让结果只显示每秒执行的请求数。</p>
<p>无序在这里就不做介绍了。大家自行搜索一下，以下为整理好的redis命令地址：<br><a href="http://doc.redisfans.com/" target="_blank" rel="external">http://doc.redisfans.com/</a><br><a href="http://www.redis.cn/commands.html" target="_blank" rel="external">http://www.redis.cn/commands.html</a></p>
<p>create By<br>liecol-晓斌<br>2016-11-23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;介绍：&lt;/strong&gt;&lt;br&gt;Redis 开源高性能的&lt;code&gt;key-value&lt;/code&gt;数据库，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。&lt;br&gt;读的速度是110000次/s,写的速度是81000次/s。&lt;br&gt;&lt;code&gt;redis&lt;/code&gt;支持string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)&lt;br&gt;这里不做安装介绍，有需要的可自行搜索教程。&lt;br&gt;Redis 客户端语法：&lt;code&gt;redis-cli&lt;/code&gt;&lt;br&gt;启动 redis 客户端，打开终端并输入命令 redis-cli.&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$redis-cli&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;redis &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;redis &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;&amp;gt; PING&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PONG&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://bin.bloggao.cn/categories/nosql/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="nosql" scheme="http://bin.bloggao.cn//tags/nosql/"/>
    
      <category term="redis" scheme="http://bin.bloggao.cn//tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>php对libcurl库的支持cURL</title>
    <link href="http://bin.bloggao.cn/2016/11/20/php_libcurl_curl/"/>
    <id>http://bin.bloggao.cn/2016/11/20/php_libcurl_curl/</id>
    <published>2016-11-20T09:22:00.000Z</published>
    <updated>2017-01-04T03:31:49.290Z</updated>
    
    <content type="html"><![CDATA[<p>首先介绍一下curl，php支持扩展库<code>libcurl</code>，curl模拟浏览器来传输数据。<br>因为是模拟浏览器，所以支持很多传输协议：<br>FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE 以及 LDAP<br>HTTP基于表单的上传，代理，cookies，和用户名+密码的认证<br>用处很多，也可以用来做python爬虫类似的功能，比什么file和file_get_contents要强很多。</p>
<p><strong>简单点说curl分四步：</strong><br>初始化，新建curl资源<br>设置url选项 //curl_setopt()  最重要，最有意思的一步。<br>抓取url，传递到浏览器<br>关闭curl，释放资源<br>curl_setopt($ch, option, value)函数将为一个CURL会话设置选项。option参数是你想要的设置，value是这个选项给定的值。<br>eg:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$ch = curl_init() <span class="comment">//url可以这里写，也可以在后面写。</span></div><div class="line"><span class="comment">//CURLOPT_URL 需要获取的URL地址</span></div><div class="line">curl_setopt($ch, CURLOPT_URL, $url); <span class="comment">//url可以这里写，也可以在init写。</span></div><div class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</div><div class="line"><span class="comment">//执行并获取HTML文档内容</span></div><div class="line">$output = curl_exec($ch);</div><div class="line"><span class="comment">//释放资源</span></div><div class="line">curl_close($ch);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>eg: 如果我们只想把获取到的内容输入到文件，而不是直接输出给浏览器，我们就可以使用CURLOPT_RETURNTRANSFER选项！<br>这一点也是比较常用到的。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$ch = curl_init($url) ;</div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">FALSE</span>);</div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</div><div class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>) ; <span class="comment">// 获取数据返回</span></div><div class="line">curl_setopt($ch, CURLOPT_BINARYTRANSFER, <span class="keyword">true</span>) ; <span class="comment">// 在启用 CURLOPT_RETURNTRANSFER 时候将获取数据返回</span></div><div class="line">$result = curl_exec($ch);</div><div class="line">curl_close($ch);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>eg: 有时候会遇到curl传递证书,大致方式则如下。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$url = <span class="string">'https://mch.tenpay.com/refundapi/gateway/refund.xml'</span>;</div><div class="line">$param = $signObj[<span class="string">"unsign"</span>] . <span class="string">"&amp;sign="</span> . $signObj[<span class="string">"sign"</span>];</div><div class="line"><span class="comment">// 		Log::write($url);</span></div><div class="line">$ch = curl_init($url) ;</div><div class="line"><span class="comment">// CURLOPT_POST启用时会发送一个常规的POST请求，类型为：application/x-www-form-urlencoded，就像表单提交的一样。</span></div><div class="line">curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);</div><div class="line"><span class="comment">//CURLOPT_HEADER	启用时会将头文件的信息作为数据流输出</span></div><div class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</div><div class="line"><span class="comment">//CURLOPT_URL 需要获取的URL地址</span></div><div class="line">curl_setopt($ch, CURLOPT_URL,$url);</div><div class="line"><span class="comment">//CURLOPT_SSL_VERIFYHOST 检查服务器SSL证书中是否存在一个公用名(common name)。译者注：公用名(Common Name)一般来讲就是填写你将要申请SSL证书的域名 (domain)或子域名(sub domain)。2 检查公用名是否存在，并且是否与提供的主机名匹配。</span></div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</div><div class="line"><span class="comment">//全部数据使用HTTP协议中的"POST"操作来发送。要发送文件，在文件名前面加上@前缀并使用完整路径。这个参数可以通过urlencoded后的字符串类似'para1=val1&amp;para2=val2&amp;...'或使用一个以字段名为键值，字段数据为值的数组。如果value是一个数组，Content-Type头将会被设置成multipart/form-data</span></div><div class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $param);</div><div class="line"><span class="comment">//CURLOPT_RETURNTRANSFER 把获取到的内容输入到文件</span></div><div class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="comment">// cert</span></div><div class="line"><span class="comment">//CURLOPT_SSLCERT 一个包含PEM格式证书的文件名</span></div><div class="line">curl_setopt($ch, CURLOPT_SSLCERT, $filePem);</div><div class="line"><span class="comment">//CURLOPT_SSLCERTPASSWD 使用CURLOPT_SSLCERT证书需要的密码</span></div><div class="line">curl_setopt($ch, CURLOPT_SSLCERTPASSWD, $partnerId);</div><div class="line"><span class="comment">//CURLOPT_SSLCERTTYPE 证书的类型。支持的格式有"PEM" (默认值), "DER"和"ENG"</span></div><div class="line">curl_setopt($ch, CURLOPT_SSLCERTTYPE, <span class="string">"PEM"</span>);</div><div class="line"></div><div class="line"><span class="comment">// ca</span></div><div class="line"></div><div class="line"><span class="comment">//禁用后cURL将终止从服务端进行验证。使用CURLOPT_CAINFO选项设置证书使用CURLOPT_CAPATH选项设置证书目录 如果CURLOPT_SSL_VERIFYPEER(默认值为2)被启用，CURLOPT_SSL_VERIFYHOST需要被设置成TRUE否则设置为FALSE。	自cURL 7.10开始默认为TRUE。从cURL 7.10开始默认绑定安装</span></div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">TRUE</span>);</div><div class="line"><span class="comment">//CURLOPT_CAINFO 一个保存着1个或多个用来让服务端验证的证书的文件名。这个参数仅仅在和CURLOPT_SSL_VERIFYPEER一起使用时才有意义。 .</span></div><div class="line">curl_setopt($ch, CURLOPT_CAINFO, $filePemCert);</div><div class="line"></div><div class="line">$result = curl_exec($ch);</div><div class="line">curl_close($ch);</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>这边带上一个curl的方法函数：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/**</span></div><div class="line">	 * 	作用：使用证书，以post方式提交xml到对应的接口url</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">postXmlSSLCurl</span><span class="params">($xml,$url, $filePem, $filePemCert, $second=<span class="number">30</span>)</span></span></div><div class="line">	&#123;</div><div class="line">		$ch = curl_init();</div><div class="line">		<span class="comment">//超时时间</span></div><div class="line">		curl_setopt($ch,CURLOPT_TIMEOUT,$second);</div><div class="line">		<span class="comment">//这里设置代理，如果有的话</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXY, '8.8.8.8');</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXYPORT, 8080);</span></div><div class="line">        curl_setopt($ch,CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//设置header</span></div><div class="line">		curl_setopt($ch,CURLOPT_HEADER,<span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//要求结果为字符串且输出到屏幕上</span></div><div class="line">		curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="keyword">TRUE</span>);</div><div class="line">		<span class="comment">//设置证书</span></div><div class="line">		<span class="comment">//使用证书：cert 与 key 分别属于两个.pem文件</span></div><div class="line">		<span class="comment">//默认格式为PEM，可以注释</span></div><div class="line">		curl_setopt($ch,CURLOPT_SSLCERTTYPE,<span class="string">'PEM'</span>);</div><div class="line">		curl_setopt($ch,CURLOPT_SSLCERT, $filePemCert);</div><div class="line">		<span class="comment">//默认格式为PEM，可以注释</span></div><div class="line">		curl_setopt($ch,CURLOPT_SSLKEYTYPE,<span class="string">'PEM'</span>);</div><div class="line">		curl_setopt($ch,CURLOPT_SSLKEY, $filePem);</div><div class="line">		<span class="comment">//post提交方式</span></div><div class="line">		curl_setopt($ch,CURLOPT_POST, <span class="keyword">true</span>);</div><div class="line">		curl_setopt($ch,CURLOPT_POSTFIELDS,$xml);</div><div class="line">		$data = curl_exec($ch);</div><div class="line">		<span class="comment">//返回结果</span></div><div class="line">		<span class="keyword">if</span>($data)&#123;</div><div class="line">			Log::write($data);</div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> $data;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123; </div><div class="line">			$error = curl_errno($ch);</div><div class="line">			Log::write(<span class="string">"curl出错，错误码:"</span> . $error);</div><div class="line"><span class="comment">// 			echo "&lt;a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html'&gt;错误原因查询&lt;/a&gt;&lt;/br&gt;";</span></div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 	作用：以post方式提交xml到对应的接口url</div><div class="line">	 */</div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">postXmlCurl</span><span class="params">($xml,$url,$second=<span class="number">30</span>)</span></span></div><div class="line">	&#123;		</div><div class="line">        <span class="comment">//初始化curl        </span></div><div class="line">       	$ch = curl_init();</div><div class="line">		<span class="comment">//设置超时</span></div><div class="line">		curl_setopt($ch, CURLOP_TIMEOUT, $second);</div><div class="line">        <span class="comment">//这里设置代理，如果有的话</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXY, '8.8.8.8');</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXYPORT, 8080);</span></div><div class="line">        curl_setopt($ch,CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//设置header</span></div><div class="line">		curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//要求结果为字符串且输出到屏幕上</span></div><div class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</div><div class="line">		<span class="comment">//post提交方式</span></div><div class="line">		curl_setopt($ch, CURLOPT_POST, <span class="keyword">TRUE</span>);</div><div class="line">		curl_setopt($ch, CURLOPT_POSTFIELDS, $xml);</div><div class="line">		<span class="comment">//运行curl</span></div><div class="line">        $data = curl_exec($ch);</div><div class="line">		curl_close($ch);</div><div class="line">		<span class="comment">//返回结果</span></div><div class="line">		<span class="keyword">if</span>($data)</div><div class="line">		&#123;</div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> $data;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> </div><div class="line">		&#123; </div><div class="line">			$error = curl_errno($ch);</div><div class="line">			Log::write(<span class="string">"curl出错，错误码:"</span> . $error); </div><div class="line"><span class="comment">// 			echo "&lt;a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html'&gt;错误原因查询&lt;/a&gt;&lt;/br&gt;";</span></div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p><a href="http://www.jb51.net/article/39331.htm?timer=tc" target="_blank" rel="external">http://www.jb51.net/article/39331.htm?timer=tc</a><br>curl的一些option高级选项可参照互联网链接。</p>
<p>create By<br>liecol-晓斌<br>2016-11-20</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先介绍一下curl，php支持扩展库&lt;code&gt;libcurl&lt;/code&gt;，curl模拟浏览器来传输数据。&lt;br&gt;因为是模拟浏览器，所以支持很多传输协议：&lt;br&gt;FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE 以及 LDAP&lt;br&gt;HTTP基于表单的上传，代理，cookies，和用户名+密码的认证&lt;br&gt;用处很多，也可以用来做python爬虫类似的功能，比什么file和file_get_contents要强很多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单点说curl分四步：&lt;/strong&gt;&lt;br&gt;初始化，新建curl资源&lt;br&gt;设置url选项 //curl_setopt()  最重要，最有意思的一步。&lt;br&gt;抓取url，传递到浏览器&lt;br&gt;关闭curl，释放资源&lt;br&gt;curl_setopt($ch, option, value)函数将为一个CURL会话设置选项。option参数是你想要的设置，value是这个选项给定的值。&lt;br&gt;eg:&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ch = curl_init() &lt;span class=&quot;comment&quot;&gt;//url可以这里写，也可以在后面写。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//CURLOPT_URL 需要获取的URL地址&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_setopt($ch, CURLOPT_URL, $url); &lt;span class=&quot;comment&quot;&gt;//url可以这里写，也可以在init写。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_setopt($ch, CURLOPT_RETURNTRANSFER, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_setopt($ch, CURLOPT_HEADER, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//执行并获取HTML文档内容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$output = curl_exec($ch);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//释放资源&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_close($ch);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="curl" scheme="http://bin.bloggao.cn/categories/curl/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
      <category term="curl" scheme="http://bin.bloggao.cn//tags/curl/"/>
    
  </entry>
  
  <entry>
    <title>php常用函数总结</title>
    <link href="http://bin.bloggao.cn/2016/11/19/php_summary/"/>
    <id>http://bin.bloggao.cn/2016/11/19/php_summary/</id>
    <published>2016-11-19T04:22:00.000Z</published>
    <updated>2017-01-04T03:31:23.066Z</updated>
    
    <content type="html"><![CDATA[<p>数据类型转换：<br>第一种转换方式： (int)  (bool)  (float)  (string)  (array) (object)<br>eg:<br><code>(int)$num1</code><br>第二种转换方式：  intval()  floatval()  strval()<br>eg:<br><code>intval($str)</code><br>第三种转换方式：  settype();//强制转换类型<br><code>settype($num,&quot;int&quot;);</code><br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">unset</span>(<span class="keyword">var</span>) <span class="comment">//删除指定变量</span></div><div class="line">sleep() <span class="comment">//函数延迟代码执行若干秒。</span></div><div class="line"><span class="keyword">eval</span>() <span class="comment">//函数把字符串按照 PHP 代码来计算。</span></div><div class="line">defined() <span class="comment">//函数检查某常量是否存在。</span></div><div class="line">define() <span class="comment">//函数定义一个常量。</span></div><div class="line">trim() <span class="comment">//函数从字符串的两端删除空白字符和其他预定义字符。</span></div><div class="line">substr_replace() <span class="comment">//函数把字符串的一部分替换为另一个字符串。</span></div><div class="line">substr_count() <span class="comment">//函数计算子串在字符串中出现的次数。</span></div><div class="line">strrev() <span class="comment">//函数反转字符串。</span></div><div class="line">strlen() <span class="comment">//函数返回字符串的长度。</span></div><div class="line">stristr() <span class="comment">//函数查找字符串在另一个字符串中第一次出现的位置。</span></div><div class="line">stripos() <span class="comment">//函数返回字符串在另一个字符串中第一次出现的位置。</span></div><div class="line">str_split() <span class="comment">//函数把字符串分割到数组中。</span></div><div class="line">str_replace() <span class="comment">//函数使用一个字符串替换字符串中的另一些字符。</span></div><div class="line">md5() <span class="comment">//函数计算字符串的 MD5 散列。</span></div><div class="line">ltrim() <span class="comment">//函数从字符串左侧删除空格或其他预定义字符。</span></div><div class="line">join(<span class="string">","</span>,$arr) <span class="comment">//函数把数组元素组合为一个字符串。</span></div><div class="line">htmlspecialchars(str) <span class="comment">//函数把一些预定义的字符转换为 HTML 实体。</span></div><div class="line">htmlspecialchars_decode(string,flags)</div><div class="line">htmlentities(str) <span class="comment">//函数把字符转换为 HTML 实体。</span></div><div class="line">html_entity_decode(str) <span class="comment">//函数把 HTML 实体转换为字符。</span></div><div class="line">explode(<span class="keyword">array</span>) <span class="comment">//函数把字符串分割为数组。</span></div><div class="line">addslashes(string) <span class="comment">//函数在指定的预定义字符前添加反斜杠。</span></div><div class="line">stripslashes(string) <span class="comment">//addslashes反函数。</span></div><div class="line">round() <span class="comment">//函数对浮点数进行四舍五入。</span></div><div class="line">rand() <span class="comment">//函数返回随机整数。</span></div><div class="line">min() <span class="comment">//返回最小值。</span></div><div class="line">max() <span class="comment">//返回最大值。</span></div><div class="line">ceil() <span class="comment">//函数向上舍入为最接近的整数。</span></div><div class="line"></div><div class="line">array_change_key_case($input_array, CASE_UPPER); <span class="comment">//CASE_LOWER 返回字符串键名全为大写或者小写的数组</span></div><div class="line">array_chunk(<span class="keyword">array</span>, int, <span class="keyword">true</span>/<span class="keyword">false</span>) <span class="comment">//将一个数组分割成多个 （true/false是否保持键名）</span></div><div class="line">array_combine(<span class="keyword">array</span>, <span class="keyword">array</span>)<span class="comment">// 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值</span></div><div class="line">array_filter($array1, <span class="string">"filter"</span>) <span class="comment">//用回调函数过滤数组中的单元</span></div><div class="line">array_intersect(<span class="keyword">array</span>,<span class="keyword">array</span>) <span class="comment">//返回两个数组的交集，键值不变</span></div><div class="line">array_key_exists (key, <span class="keyword">array</span>)<span class="comment">//检查给定的键名或索引是否存在于数组中</span></div><div class="line">array_keys(<span class="keyword">array</span>)<span class="comment">//返回数组的所有键值</span></div><div class="line">array_map(<span class="string">"cube"</span>, <span class="keyword">array</span>)<span class="comment">//返回一个数组，该数组包含了 arr1 中的所有单元经过 callback 作用过之后的单元</span></div><div class="line">array_merge_recursive(<span class="keyword">array</span>,<span class="keyword">array</span>) <span class="comment">//将两个或多个数组的单元合并起来,一个数组中的值附加在前一个数组的后面,返回作为结果的数组。</span></div><div class="line">array_merge() <span class="comment">//将两个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。</span></div><div class="line">array_pad(<span class="keyword">array</span>,<span class="number">-7</span>,<span class="number">1</span>)<span class="comment">//用值将数组填补到指定长度(数组，位置，值)</span></div><div class="line">array_pop (<span class="keyword">array</span>) <span class="comment">//弹出数组最后一个单元</span></div><div class="line">array_push(<span class="keyword">array</span>, str) <span class="comment">//往数组追加内容</span></div><div class="line">array_reverse(<span class="keyword">array</span>,<span class="keyword">true</span>) <span class="comment">//翻转数组，如果 preserve_keys 为 TRUE 则保留原来的键名。</span></div><div class="line">array_search(str,<span class="keyword">array</span>) <span class="comment">//在数组中搜索给定的值，如果成功则返回相应的键名</span></div><div class="line">array_shift(<span class="keyword">array</span>) <span class="comment">//去除数组第一个元素</span></div><div class="line">array_slice(<span class="keyword">array</span>, <span class="number">2</span>,<span class="number">-1</span>) <span class="comment">//返回根据 offset 和 length 参数所指定的 array 数组中的一段序列.类似python的list切片。</span></div><div class="line">array_sum(<span class="keyword">array</span>) <span class="comment">//将数组中的所有值的和以整数或浮点数的结果返回</span></div><div class="line">array_unshift(<span class="keyword">array</span>,str) <span class="comment">//将传入的单元插入到 array 数组的开头</span></div><div class="line">array_values(<span class="keyword">array</span>) <span class="comment">//返回数组中所有的值</span></div><div class="line">arsort(<span class="keyword">array</span>, sort_flags) <span class="comment">//对数组进行逆向排序并保持索引关系</span></div><div class="line">asort(<span class="keyword">array</span>, sort_flags) <span class="comment">//对数组进行顺向排序并保持索引关系</span></div><div class="line">sort_flags:</div><div class="line">SORT_REGULAR - 正常比较单元</div><div class="line">SORT_NUMERIC - 单元被作为数字来比较</div><div class="line">SORT_STRING - 单元被作为字符串来比较</div><div class="line">count(<span class="keyword">array</span>) <span class="comment">//统计变量中的单元数目</span></div><div class="line">current(<span class="keyword">array</span>) <span class="comment">//返回数组中的当前单元</span></div><div class="line">end (<span class="keyword">array</span>) <span class="comment">//将 array 的内部指针移动到最后一个单元，并返回该单元的值。</span></div><div class="line">in_array(str,<span class="keyword">array</span>) <span class="comment">//检查数组中是否存在某个值</span></div><div class="line">krsort() <span class="comment">//对数组按照键名逆向排序，保留键名到数据的关联</span></div><div class="line">ksort() <span class="comment">//对数组按照键名顺序排序，保留键名到数据的关联。本函数主要用于结合数组</span></div><div class="line">rsort() <span class="comment">//本函数对数组进行逆向排序（最高到最低）。</span></div><div class="line">uksort(<span class="keyword">array</span>, <span class="string">'str'</span>) <span class="comment">//键名进行排序, 采用用户自定义函数</span></div><div class="line">uasort(<span class="keyword">array</span>, <span class="string">'str'</span>) <span class="comment">//键值进行排序，采用用户自定义函数</span></div><div class="line">usort(<span class="keyword">array</span>, <span class="string">'str'</span>) <span class="comment">//使用用户自定义的比较函数对数组中的值进行排序</span></div></pre></td></tr></table></figure></p>
<p>create By<br>liecol-晓斌<br>2016-11-19</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据类型转换：&lt;br&gt;第一种转换方式： (int)  (bool)  (float)  (string)  (array) (object)&lt;br&gt;eg:&lt;br&gt;&lt;code&gt;(int)$num1&lt;/code&gt;&lt;br&gt;第二种转换方式：  intval()  floatval()  strval()&lt;br&gt;eg:&lt;br&gt;&lt;code&gt;intval($str)&lt;/code&gt;&lt;br&gt;第三种转换方式：  settype();//强制转换类型&lt;br&gt;&lt;code&gt;settype($num,&amp;quot;int&amp;quot;);&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="php" scheme="http://bin.bloggao.cn/categories/php/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
  </entry>
  
  <entry>
    <title>关于Hexo搭建Blog托管至Coding并显示</title>
    <link href="http://bin.bloggao.cn/2016/11/14/Hexo_Blog_Coding/"/>
    <id>http://bin.bloggao.cn/2016/11/14/Hexo_Blog_Coding/</id>
    <published>2016-11-14T09:08:37.000Z</published>
    <updated>2017-01-04T03:32:29.273Z</updated>
    
    <content type="html"><![CDATA[<p>用hexo搭建了一个Blog，之前托管到github上，<br>但是因为github把百度的爬虫给禁掉了，又想让百度搜索能搜索到Blog,所以找了国内代码托管网站coding。<br>研究了一下hexo对于一些代码托管网站的支持。<br>这边记录一下coding。<br>coding因为改版的原因和以前的不一样，所以地址和对应的分支也不一样。</p>
<p>命名一个项目管理名，可以为自己的名字。<br>所在分支为: coding-pages(page服务可以开启也可以关闭)</p>
<p>通过与github同样的方式托管代码，这边不做太多解释(hexo下面贴代码)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">   type: git</div><div class="line">   repo:</div><div class="line">      github: https://github.com/liecol-gao/liecol-gao.github.io.git,master</div><div class="line">      coding: https://git.coding.net/liecol/liecol.git,coding-pages</div></pre></td></tr></table></figure></p>
<p>关于域名定向：coding里，将自己的域名解析到pages.coding.me，然后这边再填入对应域名即可访问。</p>
<p>Create By<br>liecol-晓斌<br>2016/11/14</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用hexo搭建了一个Blog，之前托管到github上，&lt;br&gt;但是因为github把百度的爬虫给禁掉了，又想让百度搜索能搜索到Blog,所以找了国内代码托管网站coding。&lt;br&gt;研究了一下hexo对于一些代码托管网站的支持。&lt;br&gt;这边记录一下coding。&lt;br&gt;c
    
    </summary>
    
      <category term="hexo" scheme="http://bin.bloggao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bin.bloggao.cn//tags/hexo/"/>
    
      <category term="coding" scheme="http://bin.bloggao.cn//tags/coding/"/>
    
      <category term="Blog" scheme="http://bin.bloggao.cn//tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>如何在linux上使用hexo搭建git博客</title>
    <link href="http://bin.bloggao.cn/2016/09/30/linux_hexo_blog_git/"/>
    <id>http://bin.bloggao.cn/2016/09/30/linux_hexo_blog_git/</id>
    <published>2016-09-30T09:48:37.000Z</published>
    <updated>2017-01-04T03:33:10.761Z</updated>
    
    <content type="html"><![CDATA[<p>之前在windows上安装了hexo推送github，但是由于经常不在一个电脑上操作，修改比较麻烦<br>所以为了偷懒，在linux服务器上也装了一个，方便使用。<br>中间遇到一些和windows上不同的问题，在这做一些相应的记录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure></p>
<p>由于我的是Ubuntu,所以最初我采用了apt-get的方式。<br>当时我可能由于长时间没有安装一些软件，导致报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">failed to fetch from registry: hexo</div></pre></td></tr></table></figure></p>
<p>如果有朋友同样遇到，解决办法为：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">先update一下：sudo apt-get update</div></pre></td></tr></table></figure></p>
<p>安装nodejs：<br>我当时也采用的是apt-get方式，不过后面就报npm的问题，之后我便卸载，采用curl的模式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sL https://deb.nodesource.com/setup | sudo bash -</div></pre></td></tr></table></figure></p>
<p>之后再<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y nodejs</div></pre></td></tr></table></figure></p>
<p>则没有再出现npm的问题<br>安装hexo<br>最初我以为和windows上显示一样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>采用这种方式，但是却显示此包不再维护：This package is no longer maintained<br>我就搜了一下，发现需要：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install hexo-cli -g</div></pre></td></tr></table></figure></p>
<p>hexo 成功安装<br>然后再mkdir到需要放置的路径下<br>初始化hexo：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p>在这我不做hexo内容描述，以后有时间会写hexo的一些细节。<br>生成静态页：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate(hexo g)</div><div class="line">开启服务：</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>如果发现进程被占用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server -p 进程号</div></pre></td></tr></table></figure></p>
<p>如果发现服务ok，则hexo基本没啥问题了，都是根据需要处理细节<br>安装git：<br>最初我同样采用apt-get发现也并不好用,可能因为版本太老了，hexo deploy显示没有找到git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure></p>
<p>于是我又开始卸载<br>继续采用第二种方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://soft.itbulu.com/git/git-2.4.6.tar.gz</div></pre></td></tr></table></figure></p>
<p>下载包后开始解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf git-2.4.6.tar.gz</div></pre></td></tr></table></figure></p>
<p>进入目录开始安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd git-2.4.6/</div><div class="line">make prefix=/usr/local/git all(我将其安装在/usr/local/git目录下)</div><div class="line">sudo make prefix=/usr/local/git install</div></pre></td></tr></table></figure></p>
<p>git –version查看一下版本，发现并不是2.4.6,它默认使用了”/usr/bin”下的git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ whereis git</div><div class="line">git: /usr/bin/git /usr/local/git /usr/share/man/man1/git.1.gz</div></pre></td></tr></table></figure></p>
<p>只能修改环境变量，替换”/usr/bin”下的git，可以修改“/etc/profile”文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/profile</div></pre></td></tr></table></figure></p>
<p>找到PATH，追加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PATH=/usr/local/git/bin</div></pre></td></tr></table></figure></p>
<p>source命令应用修改。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure></p>
<p>版本搞定，再次去hexo d发现换了个错，其实是忘了执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>友情提醒:hexo里git的地址不能写错了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repo: https://github.com/git-name/git-name.github.io.git</div></pre></td></tr></table></figure></p>
<p>再次提交终于搞定，一波三折。<br>create by<br>liecol-晓斌<br>2016-09-30</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在windows上安装了hexo推送github，但是由于经常不在一个电脑上操作，修改比较麻烦&lt;br&gt;所以为了偷懒，在linux服务器上也装了一个，方便使用。&lt;br&gt;中间遇到一些和windows上不同的问题，在这做一些相应的记录。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于我的是Ubuntu,所以最初我采用了apt-get的方式。&lt;br&gt;当时我可能由于长时间没有安装一些软件，导致报错：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;failed to fetch from registry: hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果有朋友同样遇到，解决办法为：&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://bin.bloggao.cn/categories/hexo/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="hexo" scheme="http://bin.bloggao.cn//tags/hexo/"/>
    
      <category term="nodejs" scheme="http://bin.bloggao.cn//tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>python导入excel表数据</title>
    <link href="http://bin.bloggao.cn/2016/07/07/python_excel/"/>
    <id>http://bin.bloggao.cn/2016/07/07/python_excel/</id>
    <published>2016-07-07T08:58:00.000Z</published>
    <updated>2017-01-04T03:31:10.858Z</updated>
    
    <content type="html"><![CDATA[<p>1:安装第三方包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> xlrd</div></pre></td></tr></table></figure></p>
<p>2:读取文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">file_content = xlrd.open_workbook(<span class="string">'excelFile.xls'</span>)</div></pre></td></tr></table></figure></p>
<p>这边看了一下源码，它和csv不一样，是在内部打开文件，所以传输路径就可以，如果想传内容，可以稍微改一下。<br><a id="more"></a><br>3:获取工作表<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>)table = file_content.sheets()[<span class="number">0</span>]//索引</div><div class="line"><span class="number">2</span>)table = file_content.sheet_by_index(<span class="number">0</span>)//索引 </div><div class="line"><span class="number">3</span>)table = data.sheet_by_name(<span class="string">u'Sheet1'</span>)//通过名称</div></pre></td></tr></table></figure></p>
<p>4:获取行数和列数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nrows = table.nrows //获取行数</div><div class="line">ncols = table.ncols 获取列数</div></pre></td></tr></table></figure></p>
<p>5:获取数据<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">table.row_values(数字)</div><div class="line">table.col_values(数字)</div></pre></td></tr></table></figure></p>
<p>6:循环获取数据<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</div><div class="line">    <span class="keyword">print</span> table.row_values(i)</div></pre></td></tr></table></figure></p>
<p>7:获取某单元格<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cell_A1 = table.cell(<span class="number">0</span>,<span class="number">0</span>).value  //列行，索引从<span class="number">0</span>开始</div><div class="line">cell_C4 = table.cell(<span class="number">2</span>,<span class="number">3</span>).value  //列行，索引从<span class="number">0</span>开始</div></pre></td></tr></table></figure></p>
<p>只是简单的读取了数据，其他的没做练习，在这就不再copy网上的了。有需要的，大家自己去研究， 比php的简单多了。<br>注：后来因为业务，导致长度不够，后改为openpyxl使用了。<br>create By<br>liecol-晓斌<br>2016/07/07</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1:安装第三方包&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xlrd&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2:读取文件&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;file_content = xlrd.open_workbook(&lt;span class=&quot;string&quot;&gt;&#39;excelFile.xls&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这边看了一下源码，它和csv不一样，是在内部打开文件，所以传输路径就可以，如果想传内容，可以稍微改一下。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://bin.bloggao.cn/categories/python/"/>
    
    
      <category term="python" scheme="http://bin.bloggao.cn//tags/python/"/>
    
      <category term="xlrd" scheme="http://bin.bloggao.cn//tags/xlrd/"/>
    
      <category term="excel" scheme="http://bin.bloggao.cn//tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>关于vpn的搭建</title>
    <link href="http://bin.bloggao.cn/2016/06/12/vpn_install/"/>
    <id>http://bin.bloggao.cn/2016/06/12/vpn_install/</id>
    <published>2016-06-12T06:22:00.000Z</published>
    <updated>2017-01-04T03:30:34.785Z</updated>
    
    <content type="html"><![CDATA[<p>前提是得有一台可供用的服务器，不然搭建了和没搭建一样。 1:安装pptp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install pptpd</div></pre></td></tr></table></figure></p>
<p>2:配置ip<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/pptpd.conf</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>打开或者配置以下内容： option /etc/ppp/pptpd-options localip 192.168.0.1(pptp服务器的ip地址设置为192.168.0.1) remoteip 192.168.0.1-255(pptp客户端的ip地址设置为192.168.0.1到192.168.0.255之间，这个可以根据自己需要的情况来设定)</p>
<p>3:配置客户端 DNS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/ppp/pptpd-options</div></pre></td></tr></table></figure></p>
<p>比如选择谷歌的开放ip ms-dns 8.8.8.8 ms-dns 8.8.4.4</p>
<p>4:添加用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vi /etc/ppp/chap-secrets</div><div class="line">client    server  secret          IP addresses</div><div class="line">liecol    pptpd   liecol            *</div></pre></td></tr></table></figure></p>
<p>用户名 (没有字符数限制) 服务器 (默认pptpd，如果更改，需要修改options.pptpd文件) 密码(上面pptpd文件的name行的内容用双引号的话，密码就不能包含双引号) ip(* 表示有pptpd随机分配ip,也可自行设定)</p>
<p>5:设置ip转发 打开IPv4转发,并重新载入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo sed -i &apos;s/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g&apos; /etc/sysctl.conf</div><div class="line">sudo sysctl -p</div></pre></td></tr></table></figure></p>
<p>sysctl配置与显示在/proc/sys目录中的内核参数．可以用sysctl来设置或重新设置联网功能 -p 从指定的文件加载系统参数，如不指定即从/etc/sysctl.conf中加载</p>
<p>6:为 pptp连接设置nat，不然不能访问其他网站。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</div></pre></td></tr></table></figure></p>
<p>也可以直接编辑 /etc/rc.local，在 exit 0 之前添加以上内容。</p>
<p>7:重启pptp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service pptpd restart</div></pre></td></tr></table></figure></p>
<p>8:通过手机或者电脑连接测试是否等连上vpn。</p>
<p>create By<br>liecol-晓斌<br>2016-06-12</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前提是得有一台可供用的服务器，不然搭建了和没搭建一样。 1:安装pptp&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install pptpd&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2:配置ip&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vi /etc/pptpd.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="vpn" scheme="http://bin.bloggao.cn//tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>linux系统里svn的搭建</title>
    <link href="http://bin.bloggao.cn/2016/05/10/linux_svn/"/>
    <id>http://bin.bloggao.cn/2016/05/10/linux_svn/</id>
    <published>2016-05-10T11:02:25.000Z</published>
    <updated>2017-01-04T03:33:20.482Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 安装/卸载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install svnserve</div><div class="line">apt-get remove subversion</div></pre></td></tr></table></figure></p>
<p>centos 安装/卸载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install subversion</div><div class="line">yum remove subversion</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>查看进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps aux | grep svnserve</div></pre></td></tr></table></figure></p>
<p>创建目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /svn/test</div></pre></td></tr></table></figure></p>
<p>创建版本库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svnadmin create svn/test/</div></pre></td></tr></table></figure></p>
<p>svn/svn/ 文件夹包含conf, db,format,hooks, locks, README.txt等文件，说明一个SVN库已经建立。</p>
<p>配置文件：<br>conf：(前置空格svn checkout会报错)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">passwd</div><div class="line">[users]</div><div class="line"># harry = harryssecret (用户名 = 密码)</div><div class="line"># sally = sallyssecret</div><div class="line">Eg:</div><div class="line">root = passwd</div></pre></td></tr></table></figure></p>
<p>authz</p>
<p>[groups] 用户组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># harry_and_sally = harry,sally (组名 = 用户,用户)</div><div class="line">Eg:</div><div class="line">admin = root,liecol</div></pre></td></tr></table></figure></p>
<p>对一个目录的认证规则:<br>[/foo/bar] 比如对根目录的认证规则的section为[/],如果将上面的test作为svn的起始目录的话，则是[test:/]<br>[test:/]这种适合于多仓库情况，[/]适合于单仓库情况。</p>
<p>设置单用户的认证规则时一个用户一行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># root = rw (对该目录，root有读写权限)</div><div class="line"># liecol = r (对该目录，liecol有读权限)</div></pre></td></tr></table></figure></p>
<p>如果使用group，需要在group名字前加@,如<br>@admin=rw　　(组admin中的用户均为rw，等价于上边的两句话)</p>
<p>(<em> 表示除了上面的人，比如 </em> = r，就是除了上面的root和liecol，其他人的权限是对test拥有读的权限。* = 的意思是其他人对test都没有权限)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># * =</div><div class="line">vi svnserve.conf</div><div class="line"></div><div class="line">anon-access：匿名用户的权限，可以为read，write和none，默认值read。不允许匿名用户访问：anon-access = none</div><div class="line"></div><div class="line">auth-access：认证用户的权限，可以为read，write和none，默认值write。</div><div class="line"></div><div class="line">password-db：密码数据库的路径，去掉前边的# (可自行选填路径，即可多代码库共用同一用户名密码)</div><div class="line"></div><div class="line">authz-db：认证规则库的路径，去掉前边的#。(可自行选填路径，即可多代码库共用同一用户名密码)</div></pre></td></tr></table></figure></p>
<p>以上配置需要重启svn</p>
<p>重启svn：</p>
<p>(-d: 表示 svnserve 以“守护”进程模式运行)<br>(指定文件系统的根位置（版本库的根目录），这样客户端不用输入全路径，就可以访问版本库：如：svn://192.168.0.1/test)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svnserve -d -r svn/test/</div></pre></td></tr></table></figure></p>
<p>checkout访问形式<br>svn://192.168.0.1/ (svn://ip地址/)</p>
<p>如果是svn目录启动的<br>svn://192.168.0.1/test (svn://ip地址/test)</p>
<p>如果已启动<br>根据上面的查看进程:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Eg:</div><div class="line">ps -ef|grep svn</div><div class="line"></div><div class="line">kill -9 ****</div></pre></td></tr></table></figure></p>
<p>如果端口占用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svnserve --listen-port 9999 -d -r svn_test1/svn/</div></pre></td></tr></table></figure></p>
<p>最后需要导入文件：<br>Linux:<br>(–m：message,也就是查看svn log可以看到的注释。)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo  svn import -m &quot;test&quot;  /home/test  svn://192.168.0.1/test</div></pre></td></tr></table></figure></p>
<p>本地：svn</p>
<p>右键关于svn有个import<br>导入就可以</p>
<p>create By<br>liecol-晓斌<br>2016-05-10</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu 安装/卸载&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install svnserve&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apt-get remove subversion&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;centos 安装/卸载&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install subversion&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;yum remove subversion&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="svn" scheme="http://bin.bloggao.cn/categories/svn/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="svn" scheme="http://bin.bloggao.cn//tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>BINARY解决数据大小写敏感及部分查询问题</title>
    <link href="http://bin.bloggao.cn/2016/02/14/BINARY_mysql/"/>
    <id>http://bin.bloggao.cn/2016/02/14/BINARY_mysql/</id>
    <published>2016-02-14T09:09:27.000Z</published>
    <updated>2017-01-04T08:23:14.204Z</updated>
    
    <content type="html"><![CDATA[<p>BINARY不是函数，是类型转换运算符，它用来强制它后面的字符串为一个二进制字符串，可以理解为在字符串比较的时候区分大小写</p>
<p>代码如下:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select binary 'ABCD'='abcd' COM1, 'ABCD'='abcd' COM2;</div><div class="line">+--------+-----------+</div><div class="line">| COM1 | COM2 |</div><div class="line">+--------+-----------+</div><div class="line">|      0     |      1      |</div><div class="line">+---------+-----------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>(仅仅有些而已！4.<em>以前)<br>因为有的MySQL特别是4.</em>以前的对于中文检索会有不准确的问题，可以在检索的时候加上binary。<br>建表：</p>
<p>代码如下:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">TABLE</span> usertest (</div><div class="line"><span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">9</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</div><div class="line">username <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>,</div><div class="line">primary <span class="keyword">key</span> (<span class="keyword">id</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<p>插入数据：</p>
<p>代码如下:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'美文'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'美国项目'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'李文'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'老唐'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'梦漂'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'龙武'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'夏'</span>);</div></pre></td></tr></table></figure>
<p>例如：select <em> from usertest where username like ‘%夏%’ ，结果七条记录都出来了，比较郁闷。<br>如果使用=而不是like的时候，select </em> from usertest where username = ‘夏’ ，只出现一个结果。因为mysql 的LIKE操作是按照ASCII 操作的，所以LIKE的时候是可能有问题的。问题继续：如果再加上：</p>
<p>代码如下:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'文'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> usertest (username) <span class="keyword">VALUES</span>(<span class="string">'唐'</span>);</div></pre></td></tr></table></figure>
<p>还是使用select * from usertest where username = ‘夏’ ，结果还是出现3条记录，又郁闷了。解决办法如下：<br>1.在create的时候就使用binary，而不是在query的时候加。</p>
<p>代码如下:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">username varchar(30) BINARY NOT NULL default '', 如果表已经建好了，使用：</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> usertest <span class="keyword">modify</span> username <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="built_in">binary</span>; 来就该表的属性。</div></pre></td></tr></table></figure>
<p>2.在query的时候加上binary，select * from usertest where username like binary  ‘%夏%’ ，就可以准确的查询出一条记录来。</p>
<p>char使用固定长度的空间进行存储，char(4)存储4个字符，根据编码方式的不同占用不同的字节，gbk编码方式，不论是中文还是英文，每个字符占用2个字节的空间，utf8编码方式，每个字符占用3个字节的空间。<br>如果需要存储的字符串的长度跟所有值的平均长度相差不大，适合用char，如MD5。<br>对于经常改变的值，char优于varchar，原因是固定长度的行不容易产生碎片。<br>对于很短的列，char优于varchar，原因是varchar需要额外一个或两个字节存储字符串的长度。</p>
<p>varchar保存可变长度的字符串，使用额外的一个或两个字节存储字符串长度，varchar(10),除了需要存储10个字符，还需要1个字节存储长度信息(10),超过255的长度需要2个字节来存储<br>例外：Myisam引擎中使用ROW_FORMAT=FIXED时，每行使用相同的空间，造成浪费</p>
<p>char和varchar后面如果有空格，char会自动去掉空格后存储，varchar虽然不会去掉空格，但在进行字符串比较时，会去掉空格进行比较。 </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BINARY不是函数，是类型转换运算符，它用来强制它后面的字符串为一个二进制字符串，可以理解为在字符串比较的时候区分大小写&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mysql&amp;gt; select binary &#39;ABCD&#39;=&#39;abcd&#39; COM1, &#39;ABCD&#39;=&#39;abcd&#39; COM2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;+--------+-----------+&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;| COM1 | COM2 |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;+--------+-----------+&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|      0     |      1      |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;+---------+-----------+&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://bin.bloggao.cn/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://bin.bloggao.cn//tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>windows/python/virtualenv环境安装pyramid</title>
    <link href="http://bin.bloggao.cn/2016/01/11/windows_python_virtualenv_pyramid/"/>
    <id>http://bin.bloggao.cn/2016/01/11/windows_python_virtualenv_pyramid/</id>
    <published>2016-01-11T09:46:29.000Z</published>
    <updated>2017-01-04T03:28:39.945Z</updated>
    
    <content type="html"><![CDATA[<p>关于win-py-vir的环境安装技巧在之前就有记录(详情参考windows＋Python＋virtualenv环境配置)</p>
<p>这里主要讲在虚拟环境下如何安装python框架pyramid</p>
<p>pyramid采用<code>mako</code>模板引擎,<code>SQLAlchemy</code> ORM工具，可配置多样数据库,如<code>sqlite</code>，<code>mysql</code>等(如若有时间，以后也会整理出一份文档)</p>
<p>在安装python库<code>pip</code>或者<code>easy_install</code>后</p>
<p>采用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pip install pyramid ==<span class="number">1.4</span>或者</div><div class="line"></div><div class="line">easy_install pyramid == <span class="number">1.4</span></div></pre></td></tr></table></figure></p>
<p>后面的1.4是版本，如若不加则采用最新版</p>
<p>但是pyramid不支持高版本对低版本的兼容，所以谨慎处理<br><a id="more"></a><br>linux采用yum或者apt-get处理，这里不做详细介绍</p>
<p>安装之后，需要进入虚拟环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Scripts\activate</div></pre></td></tr></table></figure></p>
<p>执行在路径Script下activate</p>
<p>开启环境后可建立项目(建议项目和环境文件夹分开，因为如若环境版本不可控，可删除从新载入项目)</p>
<p>创建项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pcreate -s starter myproject(项目名称)</div><div class="line"></div><div class="line">pcreate -s alchemy C:\simpleCRUD（项目名称）</div></pre></td></tr></table></figure></p>
<p>如果要分离的话前面加上路径即可。</p>
<p>在创建项目后，还需要增加项目的内置包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python setup.py develop</div></pre></td></tr></table></figure></p>
<p>然后进入项目启动项目<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pserve development.ini</div></pre></td></tr></table></figure></p>
<p>目录安装完成，大体说一下文件作用，但不尽详细。</p>
<p>这里我们首先看一下Myroject这个项目根目录下的几个文件：</p>
<ol>
<li><p>CHANGES.txt</p>
<p> 本项目的变更文件，推荐采用ReST格式编写</p>
</li>
<li><p>RADME.txt</p>
<p> 项目描述文件，推荐采用ReST格式编写</p>
</li>
<li><p>development.ini</p>
<p> 开发时参数配置文件</p>
</li>
<li><p>production.ini</p>
<p> 运行时参数配置文件</p>
</li>
<li><p>setup.cfg</p>
<p> 这是setup.py使用的配置文件</p>
</li>
<li><p>MANIFEST.in</p>
<p> 打包清单，列出了打包时需要一起打到python程序包中的文件</p>
</li>
<li><p>setup.py</p>
<p> 标准的setuptools的setup.py文件，用于测试、分发该项目</p>
</li>
</ol>
<p>在MyProject项目目录中，还有一个叫myproject的包目录，这个目录下包含了如下内容</p>
<ol>
<li><p><strong>init</strong>.py</p>
<p> 初始化文件。包含了一些启动本项目的指令。</p>
</li>
<li><p>templates</p>
<p> 存放开发模板文件的目录</p>
</li>
<li><p>tests.py</p>
<p> 存放单元测试</p>
</li>
<li><p>views.py</p>
<p> 存放可调用视图</p>
</li>
</ol>
<p>各版本不一致，但主体文件差不多都是这样，也可以自行增加view文件夹开发。</p>
<p>create By<br>liecol-晓斌</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于win-py-vir的环境安装技巧在之前就有记录(详情参考windows＋Python＋virtualenv环境配置)&lt;/p&gt;
&lt;p&gt;这里主要讲在虚拟环境下如何安装python框架pyramid&lt;/p&gt;
&lt;p&gt;pyramid采用&lt;code&gt;mako&lt;/code&gt;模板引擎,&lt;code&gt;SQLAlchemy&lt;/code&gt; ORM工具，可配置多样数据库,如&lt;code&gt;sqlite&lt;/code&gt;，&lt;code&gt;mysql&lt;/code&gt;等(如若有时间，以后也会整理出一份文档)&lt;/p&gt;
&lt;p&gt;在安装python库&lt;code&gt;pip&lt;/code&gt;或者&lt;code&gt;easy_install&lt;/code&gt;后&lt;/p&gt;
&lt;p&gt;采用&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;pip install pyramid ==&lt;span class=&quot;number&quot;&gt;1.4&lt;/span&gt;或者&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;easy_install pyramid == &lt;span class=&quot;number&quot;&gt;1.4&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;后面的1.4是版本，如若不加则采用最新版&lt;/p&gt;
&lt;p&gt;但是pyramid不支持高版本对低版本的兼容，所以谨慎处理&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://bin.bloggao.cn/categories/python/"/>
    
    
      <category term="python" scheme="http://bin.bloggao.cn//tags/python/"/>
    
      <category term="virtualenv" scheme="http://bin.bloggao.cn//tags/virtualenv/"/>
    
      <category term="pyramid" scheme="http://bin.bloggao.cn//tags/pyramid/"/>
    
  </entry>
  
  <entry>
    <title>windows＋Python＋virtualenv环境配置</title>
    <link href="http://bin.bloggao.cn/2016/01/10/windows_Python_virtualenv/"/>
    <id>http://bin.bloggao.cn/2016/01/10/windows_Python_virtualenv/</id>
    <published>2016-01-10T09:44:05.000Z</published>
    <updated>2017-01-06T07:53:35.391Z</updated>
    
    <content type="html"><![CDATA[<p>python安装</p>
<p>建议官网下载，因为可能会缺少<code>pip</code>和<code>easy_install</code>，没有这两个，需要耗时安装二者之一(由于2.7版本和3.X版本有一些区别，3.X有些库不支持,这里配置的是2.7.10)</p>
<p>python安装按提示进行，然后更改环境变量path即可</p>
<p>然后运行<code>cmd</code>输入<code>python</code>即能测试是否成功</p>
<p>官网文件会自动安装<code>pip</code>和<code>easy_install</code>，没有则需要手动安装其中之一，因为安装它们可以更加便捷的去安装更多的python第三方库。</p>
<p>这里也需要将script文件目录增至path环境变量<br><a id="more"></a><br>安装 virtualenv(虚拟环境)</p>
<p>为什么安装虚拟环境，1，避免版本冲突，2方便管理</p>
<p>安装pip之后安装virtualenv就很方便了</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install virtualenv</div></pre></td></tr></table></figure>
<p>由于python兼容性主要作用于linux上，切安装包以外网居多，有钱的老板可自行够买vpn，笔者耗了半天，连cmd都超时了，最后还是买了个vpn，感受到了人民币和非人民币玩家的区别。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">You are using pip version <span class="number">7.0</span><span class="number">.1</span>, however version <span class="number">7.1</span><span class="number">.0</span> <span class="keyword">is</span> available.</div><div class="line"></div><div class="line">You should consider upgrading via the <span class="string">'pip install --upgrade pip'</span> command.</div><div class="line"></div><div class="line">Collecting virtualenv</div><div class="line"></div><div class="line">  Downloading virtualenv<span class="number">-13.1</span><span class="number">.0</span>-py2.py3-none-any.whl (<span class="number">1.7</span>MB)</div><div class="line"></div><div class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">1.7</span>MB <span class="number">100</span>kB/s</div><div class="line"></div><div class="line">Installing collected packages: virtualenv</div><div class="line"></div><div class="line">Successfully installed virtualenv<span class="number">-13.1</span><span class="number">.0</span></div></pre></td></tr></table></figure></p>
<p>如上为安装完成</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">virtualenv test</div><div class="line"></div><div class="line">virtualenv C:\test（如果要分离主环境，前面加路径即可）</div><div class="line"></div><div class="line">New python executable <span class="keyword">in</span> test\Scripts\python.exe</div><div class="line"></div><div class="line">Installing setuptools, pip, wheel...done.</div></pre></td></tr></table></figure>
<p>test即创建的工程文件，这个文件夹就是保存 Python 虚拟环境。</p>
<p>开启虚拟环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Scripts\activate</div><div class="line"></div><div class="line">Scripts 文件内部，在命令行下直接执行文件 activate</div><div class="line"></div><div class="line"><span class="number">2015</span>/<span class="number">08</span>/<span class="number">07</span>  <span class="number">15</span>:<span class="number">42</span>    &lt;DIR&gt;          .</div><div class="line"></div><div class="line"><span class="number">2015</span>/<span class="number">08</span>/<span class="number">07</span>  <span class="number">15</span>:<span class="number">42</span>    &lt;DIR&gt;          ..</div><div class="line"></div><div class="line"><span class="number">2015</span>/<span class="number">08</span>/<span class="number">07</span>  <span class="number">15</span>:<span class="number">42</span>             <span class="number">2</span>,<span class="number">305</span> activate</div><div class="line"></div><div class="line">(省略...)</div></pre></td></tr></table></figure></p>
<p>如下即进入虚拟环境文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(test) C:\python27\Scripts\test\Scripts&gt;</div></pre></td></tr></table></figure></p>
<p>在这里面 可使用 python，pip等命令，均是 virtualenv 配置好的，自己也可以自行下载其他库。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deactivate</div></pre></td></tr></table></figure></p>
<p>退出虚拟环境</p>
<p>virtualenv 创建的虚拟环境与主机的 Python 环境无关，主机配置的库不能在 virtualenv 中使用。你需要在虚拟环境中利用 pip install 再次安装配置后才能使用。</p>
<p>关于pyramid 如若有时间下次也会写出一段记录。</p>
<p><strong>最后，涉及到数据库等环境变量，需要增加 <code>--system-site-packages</code>用来调用系统数据库用作虚拟环境内部调用。否则程序跑不起来。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python安装&lt;/p&gt;
&lt;p&gt;建议官网下载，因为可能会缺少&lt;code&gt;pip&lt;/code&gt;和&lt;code&gt;easy_install&lt;/code&gt;，没有这两个，需要耗时安装二者之一(由于2.7版本和3.X版本有一些区别，3.X有些库不支持,这里配置的是2.7.10)&lt;/p&gt;
&lt;p&gt;python安装按提示进行，然后更改环境变量path即可&lt;/p&gt;
&lt;p&gt;然后运行&lt;code&gt;cmd&lt;/code&gt;输入&lt;code&gt;python&lt;/code&gt;即能测试是否成功&lt;/p&gt;
&lt;p&gt;官网文件会自动安装&lt;code&gt;pip&lt;/code&gt;和&lt;code&gt;easy_install&lt;/code&gt;，没有则需要手动安装其中之一，因为安装它们可以更加便捷的去安装更多的python第三方库。&lt;/p&gt;
&lt;p&gt;这里也需要将script文件目录增至path环境变量&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://bin.bloggao.cn/categories/python/"/>
    
    
      <category term="python" scheme="http://bin.bloggao.cn//tags/python/"/>
    
      <category term="virtualenv" scheme="http://bin.bloggao.cn//tags/virtualenv/"/>
    
  </entry>
  
  <entry>
    <title>关于flexigrid的初识</title>
    <link href="http://bin.bloggao.cn/2015/11/23/jquery_flexigrid/"/>
    <id>http://bin.bloggao.cn/2015/11/23/jquery_flexigrid/</id>
    <published>2015-11-23T10:02:15.000Z</published>
    <updated>2017-01-04T03:32:48.457Z</updated>
    
    <content type="html"><![CDATA[<p>对比了一下jquery表格框架<code>flexigrid</code>和<code>jqgrid</code>，个人认为flexigrid表格框架其实要比jqgrid用着要舒坦<br>样式也比jqgrid的好看，二者有很大相似也有很大不同。<br>在这里笔者说一下flexigrid，因为国内demo比较少<br>希望能对大家有点帮助。<br>引用：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">".jquery.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">".styleII.css"</span> /&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"./flexigrid.css"</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./flexigrid.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>接受的json格式：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">"total"</span>:<span class="number">111</span>, <span class="string">"page"</span>:<span class="number">4</span>, <span class="string">"rows"</span>:[&#123;<span class="string">"id"</span>:<span class="string">"1"</span>,<span class="string">"cell"</span>:[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>]&#125;,&#123;<span class="string">"id"</span>:<span class="string">"2"</span>,<span class="string">"cell"</span>:[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>]&#125;]&#125;</div></pre></td></tr></table></figure></p>
<p>表格构造:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"> $(<span class="string">"#flex"</span>).flexigrid(&#123;  </div><div class="line">                    <span class="attr">url</span> : <span class="string">'list.php'</span>,  <span class="comment">//ajax方式对应的url地址</span></div><div class="line">                    dataType : <span class="string">'json'</span>,  <span class="comment">//数据加载的类型</span></div><div class="line">                    colModel : [&#123;  </div><div class="line">                            <span class="attr">display</span> : <span class="string">'文章名称'</span>, <span class="comment">//表格标题  </span></div><div class="line">                            name : <span class="string">'name'</span>,  <span class="comment">//sort名称</span></div><div class="line">                            width : <span class="number">320</span>,  <span class="comment">//宽度</span></div><div class="line">                            sortable : <span class="literal">true</span>,  <span class="comment">//是否排序</span></div><div class="line">                            align : <span class="string">'center'</span>  <span class="comment">//对齐样式</span></div><div class="line">                        &#125;, &#123;  </div><div class="line">                            <span class="attr">display</span> : <span class="string">'发布时间'</span>,  </div><div class="line">                            <span class="attr">name</span> : <span class="string">'stand'</span>,  </div><div class="line">                            <span class="attr">width</span> : <span class="number">240</span>,  </div><div class="line">                            <span class="attr">sortable</span> : <span class="literal">true</span>,  </div><div class="line">                            <span class="attr">align</span> : <span class="string">'center'</span>  </div><div class="line">                        &#125;, &#123;  </div><div class="line">                            <span class="attr">display</span> : <span class="string">'操作'</span>,  </div><div class="line">                            <span class="attr">name</span> : <span class="string">'money'</span>,  </div><div class="line">                            <span class="attr">width</span> : <span class="number">240</span>,  </div><div class="line">                            <span class="attr">sortable</span> : <span class="literal">true</span>,  </div><div class="line">                            <span class="attr">align</span> : <span class="string">'center'</span></div><div class="line">                            </div><div class="line">                        &#125;],  </div><div class="line">                    <span class="attr">sortname</span> : <span class="string">"id"</span>,  <span class="comment">//初始排序名称</span></div><div class="line">                    sortorder : <span class="string">"asc"</span>,  <span class="comment">//初始排序规则</span></div><div class="line">                    usepager : <span class="literal">true</span>,   <span class="comment">//是否分页</span></div><div class="line">                    title : <span class="string">'商品信息'</span>,  <span class="comment">//标题</span></div><div class="line">                    useRp : <span class="literal">true</span>,          <span class="comment">//是否可以动态设置每页显示的结果数 </span></div><div class="line">                    checkbox : <span class="literal">true</span>,<span class="comment">// 是否要多选框  </span></div><div class="line">                    rowId : <span class="string">'id'</span>,<span class="comment">// 多选框绑定行的id  </span></div><div class="line">                    rp : <span class="number">10</span>,  <span class="comment">//每页默认的结果数 </span></div><div class="line">                    showTableToggleBtn : <span class="literal">true</span>,  <span class="comment">// 是否允许显示隐藏列</span></div><div class="line">                    width : <span class="number">960</span>,  <span class="comment">// 总宽度</span></div><div class="line">                    height : <span class="number">400</span>,    <span class="comment">// 总高度</span></div><div class="line">                    page: <span class="number">1</span>,    <span class="comment">// 默认当前页 </span></div><div class="line">                    total: <span class="number">1</span>, <span class="comment">// 总页面数 </span></div><div class="line">                &#125;); </div><div class="line"><span class="string">``</span><span class="string">``</span> </div><div class="line"></div><div class="line">其他的一些参数:</div><div class="line">    striped : <span class="literal">true</span>, <span class="comment">// 是否显示斑纹效果，默认是奇偶交互的形式 </span></div><div class="line">    minwidth : <span class="number">30</span>, <span class="comment">// 列的最小宽度</span></div><div class="line">    minheight : <span class="number">80</span>, <span class="comment">// 列的最小高度</span></div><div class="line">    resizable : <span class="literal">true</span>, <span class="comment">// 是否可伸缩</span></div><div class="line">    method : <span class="string">'POST'</span>, <span class="comment">// 数据发送方式</span></div><div class="line">    dataType : <span class="string">'xml'</span>, <span class="comment">// 数据加载的类型</span></div><div class="line">    errormsg : <span class="string">'连接错误!'</span>,<span class="comment">// 错误提示信息</span></div><div class="line">    rpOptions : [<span class="number">5</span>,<span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">40</span>],<span class="comment">// 可选择设定的每页结果数</span></div><div class="line">    title : <span class="literal">false</span>,<span class="comment">// 是否包含标题</span></div><div class="line">    pagestat : <span class="string">'显示第 &#123;from&#125; 条到 &#123;to&#125; 条,共 &#123;total&#125; 条数据'</span>,<span class="comment">// 显示当前页和总页面的样式</span></div><div class="line">    procmsg : <span class="string">'正在处理,请稍候 ...'</span>,<span class="comment">// 正在处理的提示信息</span></div><div class="line">    query : <span class="string">''</span>,<span class="comment">// 搜索查询的条件(没用过，但是好像蛮流弊蛮实用的样子)</span></div><div class="line">    qtype : <span class="string">''</span>,<span class="comment">// 搜索查询的类别 </span></div><div class="line">    nomsg : <span class="string">'没有数据存在!'</span>,<span class="comment">// 无结果的提示信息 </span></div><div class="line">    minColToggle : <span class="number">1</span>, <span class="comment">// 允许显示的最小列数</span></div><div class="line">    showToggleBtn : <span class="literal">true</span>, <span class="comment">// 是否允许显示隐藏列</span></div><div class="line">    hideOnSubmit : <span class="literal">true</span>,<span class="comment">// 隐藏提交</span></div><div class="line">    autoload : <span class="literal">true</span>,<span class="comment">// 自动加载 </span></div><div class="line">    blockOpacity : <span class="number">0.5</span>,<span class="comment">// 透明度设置 </span></div><div class="line">    onToggleCol : <span class="literal">false</span>,<span class="comment">// 当在行之间转换时，可在此方法中重写默认实现，基本无用 </span></div><div class="line">    onChangeSort : <span class="literal">false</span>,<span class="comment">// 当改变排序时，可在此方法中重写默认实现，自行实现客户端排序</span></div><div class="line">    onSuccess : <span class="literal">false</span>,<span class="comment">// 成功后执行 </span></div><div class="line">    onSubmit : <span class="literal">false</span> <span class="comment">//提交时执行的函数</span></div><div class="line">    idProperty: <span class="string">'id'</span>,<span class="comment">//绑定主键ID，列格式化时用到。 pagetext: '第',//当前页</span></div><div class="line">    outof: <span class="string">'页，总页数'</span>,<span class="comment">//总页数</span></div><div class="line">    findtext: <span class="string">'Find'</span>,<span class="comment">//查询按钮的文本</span></div><div class="line">    params: [],允许可选被传递到的参数</div><div class="line">    preProcess: <span class="literal">false</span>,(没用过,可能是是否绑定事件的意思)</div><div class="line">    dblClickResize: <span class="literal">false</span>, 双击自动调整列</div><div class="line">    onDragCol: <span class="literal">false</span>,<span class="comment">//拖拽列的触发的事件</span></div><div class="line">    onDoubleClick: <span class="literal">false</span>,<span class="comment">//当在双击行时触发的事件</span></div><div class="line">    totalRender: <span class="literal">null</span>, <span class="comment">//统计面板(全部数据)</span></div><div class="line"></div><div class="line">表格传递参数：</div><div class="line">    实例化flexigrid时，传参数用params属性，类型是数组，格式是[&#123;<span class="attr">name</span>:<span class="string">"参数名"</span>,<span class="attr">value</span>:<span class="string">"参数值"</span>&#125;]</div><div class="line"><span class="string">``</span><span class="string">`javascript</span></div><div class="line">$("#query").flexigrid(&#123;</div><div class="line">params : [ &#123;</div><div class="line">            name : "参数名1",</div><div class="line">            value : "参数值1"</div><div class="line">            &#125;, &#123;</div><div class="line">            name : "参数名2",</div><div class="line">            value : "参数值2"</div><div class="line">         &#125; ]</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>刷新：<br>newp //自定义翻页事件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#tabQuery'</span>).flexOptions(&#123;<span class="attr">newp</span>: <span class="number">1</span>&#125;).flexReload();</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">flexReload</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> str = jq(<span class="string">"#form1"</span>).serialize();</div><div class="line">    jq(<span class="string">"#flex"</span>).flexOptions(&#123;<span class="attr">url</span>:<span class="string">"List?"</span>+str&#125;).flexReload(); </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>自定义列名和内容<br>process 函数名<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#query"</span>).flexigrid(&#123;</div><div class="line">    <span class="attr">idProperty</span> : <span class="string">"id"</span>,</div><div class="line">    <span class="attr">colModel</span> : [ &#123;</div><div class="line">        <span class="attr">display</span> : <span class="string">'操作'</span>,</div><div class="line">        <span class="attr">width</span> : <span class="number">120</span>,</div><div class="line">        <span class="attr">align</span> : <span class="string">'center'</span>,</div><div class="line">        <span class="attr">process</span> : operate</div><div class="line">    &#125; ]</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>process 自己定义的函数名中带有两个参数例如:function operate(thDiv,id)){},<br>其中thDiv是当前单元格的div，id则是这行数据的主键列。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">operate</span>(<span class="params">tdDiv,id</span>)</span>&#123;</div><div class="line">    $(tdDiv).html(<span class="string">"&lt;a hre='index.jsp?id="</span>+id+<span class="string">"'&gt;"</span>+$(tdDiv).html()+<span class="string">"&lt;/a&gt;"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>create By liecol-晓斌</p>
<p>2015.11.23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对比了一下jquery表格框架&lt;code&gt;flexigrid&lt;/code&gt;和&lt;code&gt;jqgrid&lt;/code&gt;，个人认为flexigrid表格框架其实要比jqgrid用着要舒坦&lt;br&gt;样式也比jqgrid的好看，二者有很大相似也有很大不同。&lt;br&gt;在这里笔者说一下flexigrid，因为国内demo比较少&lt;br&gt;希望能对大家有点帮助。&lt;br&gt;引用：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;.jquery.js&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;link rel=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; href=&lt;span class=&quot;string&quot;&gt;&quot;.styleII.css&quot;&lt;/span&gt; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./flexigrid.css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./flexigrid.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="javascript" scheme="http://bin.bloggao.cn/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://bin.bloggao.cn//tags/javascript/"/>
    
      <category term="flexigrid" scheme="http://bin.bloggao.cn//tags/flexigrid/"/>
    
  </entry>
  
</feed>
