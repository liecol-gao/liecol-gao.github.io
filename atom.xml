<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liecol&#39;s Blog</title>
  <subtitle>技术，源于对生活的分享，所谓迷茫，就是才华配不上梦想！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bin.bloggao.cn/"/>
  <updated>2017-12-14T10:47:54.203Z</updated>
  <id>http://bin.bloggao.cn/</id>
  
  <author>
    <name>Liecol Gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Requests 一款实用的python http库</title>
    <link href="http://bin.bloggao.cn/2017/12/13/python_requests/"/>
    <id>http://bin.bloggao.cn/2017/12/13/python_requests/</id>
    <published>2017-12-13T10:08:15.000Z</published>
    <updated>2017-12-14T10:47:54.203Z</updated>
    
    <content type="html"><![CDATA[<p>Requests 作为Python的一款实用型http库，一直深受好评。让人用完就不太想使用其他的http库。<br>对于http不太了解的开发，采用其他库，会经常出现安全隐患，性能差，不经意造轮子，代码冗余等病状，<br>所以，在笔者看来Requests还是比较友好和谐的一款http库。<br>接下来，我们来看一下Requests和非Requests的对比。</p>
<h5 id="非Requests："><a href="#非Requests：" class="headerlink" title="非Requests："></a>非Requests：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"></div><div class="line">gh_url = <span class="string">'https://api.github.com'</span></div><div class="line"></div><div class="line">req = urllib2.Request(gh_url)</div><div class="line"></div><div class="line">password_manager = urllib2.HTTPPasswordMgrWithDefaultRealm()</div><div class="line">password_manager.add_password(<span class="keyword">None</span>, gh_url, <span class="string">'user'</span>, <span class="string">'pass'</span>)</div><div class="line"></div><div class="line">auth_manager = urllib2.HTTPBasicAuthHandler(password_manager)</div><div class="line">opener = urllib2.build_opener(auth_manager)</div><div class="line"></div><div class="line">urllib2.install_opener(opener)</div><div class="line"></div><div class="line">handler = urllib2.urlopen(req)</div><div class="line"></div><div class="line"><span class="keyword">print</span> handler.getcode()</div><div class="line"><span class="keyword">print</span> handler.headers.getheader(<span class="string">'content-type'</span>)</div><div class="line"></div><div class="line"><span class="comment"># ------</span></div><div class="line"><span class="comment"># 200</span></div><div class="line"><span class="comment"># 'application/json'</span></div></pre></td></tr></table></figure>
<h5 id="Requests："><a href="#Requests：" class="headerlink" title="Requests："></a>Requests：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">r = requests.get(<span class="string">'https://api.github.com/users'</span>, auth=(<span class="string">'user'</span>, <span class="string">'pass'</span>))</div><div class="line"><span class="keyword">print</span> r.status_code</div><div class="line"><span class="comment"># ------</span></div><div class="line"><span class="comment"># 200</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>Requests 完全满足目前的web需求。</p>
<ul>
<li>Keep-Alive &amp; 连接池</li>
<li>国际化域名和 URL</li>
<li>带持久 Cookie 的会话</li>
<li>浏览器式的 SSL 认证</li>
<li>自动内容解码</li>
<li>基本/摘要式的身份认证</li>
<li>优雅的 key/value Cookie</li>
<li>自动解压</li>
<li>Unicode 响应体</li>
<li>HTTP(S) 代理支持</li>
<li>文件分块上传</li>
<li>流下载</li>
<li>连接超时</li>
<li>分块请求</li>
<li>支持 .netrc</li>
</ul>
<p>在这里，笔者不做安装介绍。主要介绍一下如何快速上手。</p>
<h5 id="发送请求："><a href="#发送请求：" class="headerlink" title="发送请求："></a>发送请求：</h5><p>GET, POST , PUT, DELETE, HEAD, OPTIONS 发送方式一应俱全。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">r = requests.get(<span class="string">'https://github.com/timeline.json'</span>)</div><div class="line">r = requests.post(<span class="string">"https://github.com/timeline.json"</span>)</div><div class="line">r = requests.put(<span class="string">"https://github.com/timeline.json"</span>)</div><div class="line">r = requests.delete(<span class="string">"https://github.com/timeline.json"</span>)</div><div class="line">r = requests.head(<span class="string">"https://github.com/timeline.json"</span>)</div><div class="line">r = requests.options(<span class="string">"https://github.com/timeline.json"</span>)</div></pre></td></tr></table></figure></p>
<h5 id="传递URL参数"><a href="#传递URL参数" class="headerlink" title="传递URL参数"></a>传递URL参数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">payload = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125; <span class="comment">#可以采用dict的方式。</span></div><div class="line">r = requests.get(<span class="string">"http://httpbin.org/get"</span>, params=payload)</div></pre></td></tr></table></figure>
<p>解析出URL，我们就会发现URL已被正确编码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print r.url</div><div class="line">http://httpbin.org/get?key2=value2&amp;key1=value1</div></pre></td></tr></table></figure></p>
<h5 id="响应内容"><a href="#响应内容" class="headerlink" title="响应内容"></a>响应内容</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">r = requests.get(<span class="string">'https://github.com/timeline.json'</span>)</div><div class="line"><span class="keyword">print</span> r.text</div><div class="line"><span class="string">u'[&#123;"repository":&#123;"open_issues":0,"url":"https://github.com/...</span></div></pre></td></tr></table></figure>
<p>Requests会自动解码来自服务器的内容,大多数unicode字符集都能被它无缝解码。</p>
<h5 id="JSON-响应内容"><a href="#JSON-响应内容" class="headerlink" title="JSON 响应内容"></a>JSON 响应内容</h5><p>Requests中也有一个内置的JSON解码器，可以帮助处理JSON数据：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">r = requests.get(<span class="string">'https://github.com/timeline.json'</span>)</div><div class="line">r.json() <span class="comment">#如果JSON解码失败,r.json()就会抛出一个异常。</span></div></pre></td></tr></table></figure></p>
<h5 id="定制请求头"><a href="#定制请求头" class="headerlink" title="定制请求头"></a>定制请求头</h5><p>和参数一样，可以采用dict的方式加入请求头数据。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">url = <span class="string">'https://github.com/timeline.json'</span></div><div class="line">headers = &#123;<span class="string">'user-agent'</span>: <span class="string">'my-app/0.0.1'</span>&#125;</div><div class="line">r = requests.get(url, headers=headers)</div></pre></td></tr></table></figure></p>
<p>注意：</p>
<ul>
<li>如果被重定向，定制的请求头就没啥用，会被删掉。</li>
<li>如果采用代理，同上。</li>
<li>Content-Length 会存在被改写的情况。</li>
</ul>
<h5 id="响应状态码"><a href="#响应状态码" class="headerlink" title="响应状态码"></a>响应状态码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">r = requests.get(<span class="string">'https://github.com/timeline.json'</span>)</div><div class="line">r.status_code</div><div class="line"><span class="number">200</span></div></pre></td></tr></table></figure>
<h5 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">r.headers</div><div class="line">&#123;</div><div class="line">    <span class="string">'content-encoding'</span>: <span class="string">'gzip'</span>,</div><div class="line">    <span class="string">'transfer-encoding'</span>: <span class="string">'chunked'</span>,</div><div class="line">    <span class="string">'connection'</span>: <span class="string">'close'</span>,</div><div class="line">    <span class="string">'server'</span>: <span class="string">'nginx/1.0.4'</span>,</div><div class="line">    <span class="string">'x-runtime'</span>: <span class="string">'148ms'</span>,</div><div class="line">    <span class="string">'etag'</span>: <span class="string">'"e1ca502697e5c9317743dc078f67693f"'</span>,</div><div class="line">    <span class="string">'content-type'</span>: <span class="string">'application/json'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="获取Cookie"><a href="#获取Cookie" class="headerlink" title="获取Cookie"></a>获取Cookie</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">url = <span class="string">'https://github.com/timeline.json'</span></div><div class="line">r = requests.get(url)</div><div class="line">r.cookies[<span class="string">'example_cookie_name'</span>]</div><div class="line"><span class="string">'example_cookie_value'</span></div></pre></td></tr></table></figure>
<h5 id="发送Cookie"><a href="#发送Cookie" class="headerlink" title="发送Cookie"></a>发送Cookie</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">url = <span class="string">'https://github.com/timeline.json'</span></div><div class="line">cookies = dict(cookies_are=<span class="string">'working'</span>)</div><div class="line">r = requests.get(url, cookies=cookies)</div><div class="line">r.text</div></pre></td></tr></table></figure>
<h5 id="超时"><a href="#超时" class="headerlink" title="超时"></a>超时</h5><p>我们可以告诉requests在经过以timeout参数设定的秒数时间之后停止等待响应。<br>timeout 仅对连接过程有效，与响应体的下载无关。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">requests.get(<span class="string">'http://github.com'</span>, timeout=<span class="number">0.001</span>)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Requests 作为Python的一款实用型http库，一直深受好评。让人用完就不太想使用其他的http库。&lt;br&gt;对于http不太了解的开发，采用其他库，会经常出现安全隐患，性能差，不经意造轮子，代码冗余等病状，&lt;br&gt;所以，在笔者看来Requests还是比较友好和谐的一款http库。&lt;br&gt;接下来，我们来看一下Requests和非Requests的对比。&lt;/p&gt;
&lt;h5 id=&quot;非Requests：&quot;&gt;&lt;a href=&quot;#非Requests：&quot; class=&quot;headerlink&quot; title=&quot;非Requests：&quot;&gt;&lt;/a&gt;非Requests：&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urllib2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gh_url = &lt;span class=&quot;string&quot;&gt;&#39;https://api.github.com&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;req = urllib2.Request(gh_url)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;password_manager = urllib2.HTTPPasswordMgrWithDefaultRealm()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;password_manager.add_password(&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;, gh_url, &lt;span class=&quot;string&quot;&gt;&#39;user&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pass&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;auth_manager = urllib2.HTTPBasicAuthHandler(password_manager)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;opener = urllib2.build_opener(auth_manager)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;urllib2.install_opener(opener)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;handler = urllib2.urlopen(req)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; handler.getcode()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; handler.headers.getheader(&lt;span class=&quot;string&quot;&gt;&#39;content-type&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ------&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 200&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# &#39;application/json&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;Requests：&quot;&gt;&lt;a href=&quot;#Requests：&quot; class=&quot;headerlink&quot; title=&quot;Requests：&quot;&gt;&lt;/a&gt;Requests：&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;r = requests.get(&lt;span class=&quot;string&quot;&gt;&#39;https://api.github.com/users&#39;&lt;/span&gt;, auth=(&lt;span class=&quot;string&quot;&gt;&#39;user&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pass&#39;&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; r.status_code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ------&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 200&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="http://bin.bloggao.cn/categories/python/"/>
    
    
      <category term="python" scheme="http://bin.bloggao.cn//tags/python/"/>
    
      <category term="http" scheme="http://bin.bloggao.cn//tags/http/"/>
    
  </entry>
  
  <entry>
    <title>locale修改linux语言环境</title>
    <link href="http://bin.bloggao.cn/2017/10/09/linux_locale/"/>
    <id>http://bin.bloggao.cn/2017/10/09/linux_locale/</id>
    <published>2017-10-09T08:39:15.000Z</published>
    <updated>2017-10-09T08:55:30.908Z</updated>
    
    <content type="html"><![CDATA[<p>最近用python脚本做文件写入，进vim看是乱码，以为是自己编码没处理好，处理后，发现打开还是不对。<br>然后用tail，cat发现又没毛病，而且vim打开所有文件写中文都是如此。<br>用locale查看了一下当前的语言环境。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">locale: Cannot set LC_CTYPE to default locale: No such file or directory</div><div class="line">locale: Cannot set LC_MESSAGES to default locale: No such file or directory</div><div class="line">locale: Cannot set LC_ALL to default locale: No such file or directory</div><div class="line">LANG=zh_CN.UTF-8</div><div class="line">LANGUAGE=zh_CN:zh</div><div class="line">LC_CTYPE=&quot;zh_CN.UTF-8&quot;</div><div class="line">LC_NUMERIC=zh_CN</div><div class="line">LC_TIME=zh_CN</div><div class="line">LC_COLLATE=&quot;zh_CN.UTF-8&quot;</div><div class="line">LC_MONETARY=zh_CN</div><div class="line">LC_MESSAGES=&quot;zh_CN.UTF-8&quot;</div><div class="line">LC_PAPER=zh_CN</div><div class="line">LC_NAME=zh_CN</div><div class="line">LC_ADDRESS=zh_CN</div><div class="line">LC_TELEPHONE=zh_CN</div><div class="line">LC_MEASUREMENT=zh_CN</div><div class="line">LC_IDENTIFICATION=zh_CN</div><div class="line">LC_ALL=</div></pre></td></tr></table></figure></p>
<h3 id="出现如下错误"><a href="#出现如下错误" class="headerlink" title="出现如下错误"></a>出现如下错误</h3><ul>
<li>locale: Cannot set LC_CTYPE to default locale: No such file or directory</li>
<li>locale: Cannot set LC_MESSAGES to default locale: No such file or directory</li>
<li>locale: Cannot set LC_ALL to default locale: No such file or directory<a id="more"></a>
</li>
</ul>
<p>再查看一下，系统安装的locale<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">locale -a</div><div class="line">locale: Cannot set LC_CTYPE to default locale: No such file or directory</div><div class="line">locale: Cannot set LC_MESSAGES to default locale: No such file or directory</div><div class="line">locale: Cannot set LC_COLLATE to default locale: No such file or directory</div><div class="line">C</div><div class="line">C.UTF-8</div><div class="line">POSIX</div><div class="line">en_US.utf8</div><div class="line">zh_CN</div><div class="line">zh_CN.gb2312</div></pre></td></tr></table></figure></p>
<p>果然，没有对应的zh_CN.UTF-8</p>
<p>安装zh_CN.UTF-8<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo locale-gen zh_CN.UTF-8</div></pre></td></tr></table></figure></p>
<p>locale再次查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">LANG=zh_CN.UTF-8</div><div class="line">LANGUAGE=zh_CN:zh</div><div class="line">LC_CTYPE=&quot;zh_CN.UTF-8&quot;</div><div class="line">LC_NUMERIC=zh_CN</div><div class="line">LC_TIME=zh_CN</div><div class="line">LC_COLLATE=&quot;zh_CN.UTF-8&quot;</div><div class="line">LC_MONETARY=zh_CN</div><div class="line">LC_MESSAGES=&quot;zh_CN.UTF-8&quot;</div><div class="line">LC_PAPER=zh_CN</div><div class="line">LC_NAME=zh_CN</div><div class="line">LC_ADDRESS=zh_CN</div><div class="line">LC_TELEPHONE=zh_CN</div><div class="line">LC_MEASUREMENT=zh_CN</div><div class="line">LC_IDENTIFICATION=zh_CN</div><div class="line">LC_ALL=</div></pre></td></tr></table></figure></p>
<p>最后vim进脚本一看，不再继续乱码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近用python脚本做文件写入，进vim看是乱码，以为是自己编码没处理好，处理后，发现打开还是不对。&lt;br&gt;然后用tail，cat发现又没毛病，而且vim打开所有文件写中文都是如此。&lt;br&gt;用locale查看了一下当前的语言环境。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;locale: Cannot set LC_CTYPE to default locale: No such file or directory&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;locale: Cannot set LC_MESSAGES to default locale: No such file or directory&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;locale: Cannot set LC_ALL to default locale: No such file or directory&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LANG=zh_CN.UTF-8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LANGUAGE=zh_CN:zh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_CTYPE=&amp;quot;zh_CN.UTF-8&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_NUMERIC=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_TIME=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_COLLATE=&amp;quot;zh_CN.UTF-8&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_MONETARY=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_MESSAGES=&amp;quot;zh_CN.UTF-8&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_PAPER=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_NAME=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_ADDRESS=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_TELEPHONE=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_MEASUREMENT=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_IDENTIFICATION=zh_CN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LC_ALL=&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;出现如下错误&quot;&gt;&lt;a href=&quot;#出现如下错误&quot; class=&quot;headerlink&quot; title=&quot;出现如下错误&quot;&gt;&lt;/a&gt;出现如下错误&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;locale: Cannot set LC_CTYPE to default locale: No such file or directory&lt;/li&gt;
&lt;li&gt;locale: Cannot set LC_MESSAGES to default locale: No such file or directory&lt;/li&gt;
&lt;li&gt;locale: Cannot set LC_ALL to default locale: No such file or directory
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux修改ip设置</title>
    <link href="http://bin.bloggao.cn/2017/09/27/linux_ipset/"/>
    <id>http://bin.bloggao.cn/2017/09/27/linux_ipset/</id>
    <published>2017-09-27T08:54:52.000Z</published>
    <updated>2017-09-27T09:26:01.785Z</updated>
    
    <content type="html"><![CDATA[<p>有时候需要修改linux的ip,怕记不住，做个笔记，解决办法如下：</p>
<h2 id="step1-进入修改文件"><a href="#step1-进入修改文件" class="headerlink" title="step1(进入修改文件):"></a>step1(进入修改文件):</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/config/networking/interfaces</div><div class="line">or</div><div class="line">sudo vim /etc/network/interfaces</div></pre></td></tr></table></figure>
<h2 id="step2-修改文件"><a href="#step2-修改文件" class="headerlink" title="step2(修改文件):"></a>step2(修改文件):</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">auto lo</div><div class="line"><span class="comment">#本地回环接口</span></div><div class="line">iface lo inet loopback</div><div class="line">auto eth0</div><div class="line"><span class="comment">#以太网接口</span></div><div class="line"><span class="comment">#iface eth0 inet dhcp </span></div><div class="line">iface eth0 inet static</div><div class="line"><span class="comment">#连接方式dhcp和固定ip</span></div><div class="line">address <span class="number">192.168</span><span class="number">.2</span><span class="number">.135</span></div><div class="line"><span class="comment">#ip地址</span></div><div class="line">gateway <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span></div><div class="line"><span class="comment">#ip网关</span></div><div class="line">netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></div><div class="line"><span class="comment">#子掩码</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="step3-重启"><a href="#step3-重启" class="headerlink" title="step3(重启):"></a>step3(重启):</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/networking  restart</div></pre></td></tr></table></figure>
<h2 id="step4-ping"><a href="#step4-ping" class="headerlink" title="step4(ping):"></a>step4(ping):</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ping www.baidu.com</div><div class="line"></div><div class="line">if not:</div><div class="line">cat /etc/resolv.conf</div><div class="line">修改网关至192.168.2.1</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候需要修改linux的ip,怕记不住，做个笔记，解决办法如下：&lt;/p&gt;
&lt;h2 id=&quot;step1-进入修改文件&quot;&gt;&lt;a href=&quot;#step1-进入修改文件&quot; class=&quot;headerlink&quot; title=&quot;step1(进入修改文件):&quot;&gt;&lt;/a&gt;step1(进入修改文件):&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo vim /etc/config/networking/interfaces&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;or&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo vim /etc/network/interfaces&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;step2-修改文件&quot;&gt;&lt;a href=&quot;#step2-修改文件&quot; class=&quot;headerlink&quot; title=&quot;step2(修改文件):&quot;&gt;&lt;/a&gt;step2(修改文件):&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;auto lo&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#本地回环接口&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iface lo inet loopback&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;auto eth0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#以太网接口&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#iface eth0 inet dhcp &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iface eth0 inet static&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#连接方式dhcp和固定ip&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;address &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.135&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#ip地址&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gateway &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#ip网关&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;netmask &lt;span class=&quot;number&quot;&gt;255.255&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.255&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#子掩码&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>在vmware上安装ubuntu16.04无法进入桌面或者桌面空白解决办法</title>
    <link href="http://bin.bloggao.cn/2017/09/21/linux_ubutu_gdm/"/>
    <id>http://bin.bloggao.cn/2017/09/21/linux_ubutu_gdm/</id>
    <published>2017-09-21T03:27:00.000Z</published>
    <updated>2017-09-21T03:44:47.757Z</updated>
    
    <content type="html"><![CDATA[<p>在虚拟机上安装ubuntu出现了这样的情况，开机后不能进入图形桌面，只能按crl+alt+f1~f6，在文本界面下登陆。<br><strong> 解决办法 </strong>：<br>step1:<br>按<code>crl+alt+f1</code>写换到文本模式下，键入用户名和密码登陆，然后切换到超级用户状态下:</p>
<p>step2：<br>输入<code>startx</code>命令切换到图形界面，会发图形界面什么都没有。</p>
<p>step3：<br>按<code>crl+alt+t</code>进入超级终端，安装<code>gdm</code></p>
<p>step4:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install gdm </div><div class="line"># 登录显示器</div><div class="line"></div><div class="line">sudo apt-get install ubuntu-desktop</div><div class="line"># ubuntu桌面</div><div class="line"></div><div class="line">sudo apt-get install gnome-core </div><div class="line"># 图形桌面环境</div></pre></td></tr></table></figure></p>
<p>step5:<br>重启ubuntu。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在虚拟机上安装ubuntu出现了这样的情况，开机后不能进入图形桌面，只能按crl+alt+f1~f6，在文本界面下登陆。&lt;br&gt;&lt;strong&gt; 解决办法 &lt;/strong&gt;：&lt;br&gt;step1:&lt;br&gt;按&lt;code&gt;crl+alt+f1&lt;/code&gt;写换到文本模式下，键入
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="Ubuntu" scheme="http://bin.bloggao.cn//tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>图的基本算法bfs浅析</title>
    <link href="http://bin.bloggao.cn/2017/07/28/python_bfs/"/>
    <id>http://bin.bloggao.cn/2017/07/28/python_bfs/</id>
    <published>2017-07-28T09:10:45.000Z</published>
    <updated>2017-07-28T09:28:16.223Z</updated>
    
    <content type="html"><![CDATA[<p>关于图的搜索有两种：广度优先（bfs）深度优先 （dfs）。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th>A</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>B</td>
<td></td>
<td></td>
<td></td>
<td>C</td>
<td></td>
</tr>
<tr>
<td>D</td>
<td>E</td>
<td>F</td>
<td></td>
<td>G</td>
<td></td>
<td>H</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td>I</td>
<td></td>
</tr>
</tbody>
</table>
<p>dfs:顺序应该为：ABDEF CGH I</p>
<p>bfs:顺序应该为：ABC DEF GH I</p>
<p>笔者总结：深度优先的过程也就是递归的过程, 而bfs是层级的过程，所以广度优先不可避免的需要用到队列。</p>
<a id="more"></a>
<p>以下是结合需求用Python写的bfs代码(为了解决一个涉行的最短选择)，因涉及需求，笔者有注释，仅供参考。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_rows</span><span class="params">(s_row, product_list, slot_p_count)</span>:</span></div><div class="line">    <span class="comment"># product_list eg:['p2', 'p3', 'p1', 'p1']</span></div><div class="line">    <span class="comment"># slot_p_count eg: &#123;'02': 1, '03': 2, '08': 3&#125;</span></div><div class="line">    end_rows_path = []</div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">0</span>, len(s_row)): </div><div class="line">    	status = <span class="number">0</span></div><div class="line">        row_order = []</div><div class="line">        temporary_order = []</div><div class="line">        copy_p_list = copy.deepcopy(product_list)</div><div class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> s_row:</div><div class="line">            <span class="keyword">if</span> num &gt; status:</div><div class="line">            	status += <span class="number">1</span></div><div class="line">                <span class="keyword">continue</span></div><div class="line">        	<span class="comment"># get list tree intersection (must for del)</span></div><div class="line">            pro_in_slot = <span class="keyword">False</span></div><div class="line">            <span class="keyword">for</span> pro <span class="keyword">in</span> s_row[row]:</div><div class="line">                <span class="keyword">try</span>:</div><div class="line">                    pro_ad = copy_p_list.index(pro)</div><div class="line">                    <span class="keyword">del</span> copy_p_list[pro_ad]</div><div class="line">                    pro_in_slot = <span class="keyword">True</span></div><div class="line">                <span class="keyword">except</span> Exception, e:</div><div class="line">                    <span class="keyword">pass</span></div><div class="line">            <span class="keyword">if</span> pro_in_slot:</div><div class="line">            	row_order.append([row, slot_p_count[row]])</div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> copy_p_list:</div><div class="line">            	temporary_order = copy.deepcopy(row_order)</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">if</span> temporary_order:</div><div class="line">            end_rows_path.append(temporary_order)</div><div class="line">    <span class="comment"># all end_rows_path eg: [['01', 5], ['05', 1], ...]  [row, all pro quantity]  Reason: less quantity priority</span></div><div class="line">    <span class="keyword">return</span> end_rows_path</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于图的搜索有两种：广度优先（bfs）深度优先 （dfs）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;dfs:顺序应该为：ABDEF CGH I&lt;/p&gt;
&lt;p&gt;bfs:顺序应该为：ABC DEF GH I&lt;/p&gt;
&lt;p&gt;笔者总结：深度优先的过程也就是递归的过程, 而bfs是层级的过程，所以广度优先不可避免的需要用到队列。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://bin.bloggao.cn/categories/python/"/>
    
    
      <category term="python" scheme="http://bin.bloggao.cn//tags/python/"/>
    
      <category term="bfs" scheme="http://bin.bloggao.cn//tags/bfs/"/>
    
  </entry>
  
  <entry>
    <title>python性能测量工具cProfile</title>
    <link href="http://bin.bloggao.cn/2017/07/27/python_cprofile/"/>
    <id>http://bin.bloggao.cn/2017/07/27/python_cprofile/</id>
    <published>2017-07-27T07:17:40.000Z</published>
    <updated>2017-07-27T07:38:42.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h2><p>Python是一种解释性的语言，执行速度相比C、C++等语言十分缓慢；因此我们需要在其它地方上下功夫来提高代码的执行速度。<br>首先需要对代码进行分析，这个时候则需要用一些工具。<br>这里介绍cProfile：<br>全代码分析：<br>命令行: cProfile -s tottime your_program.py<br>结果如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ncalls  tottime  percall  cumtime  percall filename:lineno(function)</div><div class="line">   <span class="number">66</span>    <span class="number">0.001</span>    <span class="number">0.000</span>   <span class="number">11.850</span>    <span class="number">0.180</span>  base.py:<span class="number">228</span>(micro_service)</div><div class="line">   <span class="number">66</span>    <span class="number">0.003</span>    <span class="number">0.000</span>   <span class="number">11.849</span>    <span class="number">0.180</span>  tools.py:<span class="number">557</span>(micro_service)</div><div class="line"> <span class="number">1056</span>    <span class="number">0.001</span>    <span class="number">0.000</span>   <span class="number">11.073</span>    <span class="number">0.010</span>  connection.py:<span class="number">463</span>(drain_events)</div><div class="line"> <span class="number">1056</span>    <span class="number">0.015</span>    <span class="number">0.000</span>   <span class="number">11.072</span>    <span class="number">0.010</span>  connection.py:<span class="number">466</span>(blocking_read)</div><div class="line"> <span class="number">1056</span>    <span class="number">0.008</span>    <span class="number">0.000</span>   <span class="number">10.920</span>    <span class="number">0.010</span>  transport.py:<span class="number">233</span>(read_frame)</div><div class="line"> <span class="number">3168</span>    <span class="number">0.014</span>    <span class="number">0.000</span>   <span class="number">10.908</span>    <span class="number">0.003</span>  transport.py:<span class="number">370</span>(_read)</div><div class="line"> <span class="number">3168</span>   <span class="number">10.892</span>    <span class="number">0.003</span>   <span class="number">10.892</span>    <span class="number">0.003</span>  &#123;method <span class="string">'recv'</span> of <span class="string">'_socket.socket'</span> objects&#125;</div><div class="line">   <span class="number">66</span>    <span class="number">0.001</span>    <span class="number">0.000</span>    <span class="number">9.814</span>    <span class="number">0.149</span>  rpc.py:<span class="number">350</span>(__call__)</div><div class="line">   <span class="number">66</span>    <span class="number">0.001</span>    <span class="number">0.000</span>    <span class="number">8.395</span>    <span class="number">0.127</span>  rpc.py:<span class="number">329</span>(result)</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="块分析"><a href="#块分析" class="headerlink" title="块分析:"></a>块分析:</h2><p>上面属于文件分析,但是我们可能只对部分代码感兴趣，那么只需要在这部分代码的前后加上下面这两段代码即可：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cProfile</div><div class="line">cp = cProfile.Profile()</div><div class="line">cp.enable()</div><div class="line"></div><div class="line">YOUR CODE</div><div class="line"></div><div class="line">cp.disable()</div><div class="line">cp.print_stats()</div></pre></td></tr></table></figure></p>
<p>结果与全代码分析的类似，但是只包含你感兴趣的部分。</p>
<h2 id="行分析"><a href="#行分析" class="headerlink" title="行分析:"></a>行分析:</h2><p>行分析需要安装line_profiler：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install line_profiler</div></pre></td></tr></table></figure></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@profile</div><div class="line">def class_name()</div><div class="line">	pass</div></pre></td></tr></table></figure>
<p>然后在命令行输入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">kernprof -l -v your_code.py</div><div class="line">-l 逐行分析</div><div class="line">-v 立即查看结果</div></pre></td></tr></table></figure></p>
<h2 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> cProfile <span class="keyword">import</span> Profile <span class="keyword">as</span> profile </div><div class="line"><span class="keyword">from</span> pstats <span class="keyword">import</span> Stats </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">profile_module</span><span class="params">()</span>:</span> </div><div class="line">	p = profile() </div><div class="line">	p.snapshot_stats() </div><div class="line">	p.enable() </div><div class="line">	<span class="comment"># 需要调优的代码</span></div><div class="line">	p.disable() </div><div class="line">	p.print_stats(<span class="number">2</span>) <span class="comment"># 按照调用累加总耗时累加排序，即将最耗时的函数最优先</span></div><div class="line">	p.dump_stats(<span class="string">"call.log"</span>)</div></pre></td></tr></table></figure>
<p>关于profile和cProfile的更多链接，请点击：<br><a href="https://docs.python.org/3/library/profile.html?spm=5176.100239.0.0.qa5fU5" target="_blank" rel="external">https://docs.python.org/3/library/profile.html?spm=5176.100239.0.0.qa5fU5</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景：&quot;&gt;&lt;a href=&quot;#背景：&quot; class=&quot;headerlink&quot; title=&quot;背景：&quot;&gt;&lt;/a&gt;背景：&lt;/h2&gt;&lt;p&gt;Python是一种解释性的语言，执行速度相比C、C++等语言十分缓慢；因此我们需要在其它地方上下功夫来提高代码的执行速度。&lt;br&gt;首先需要对代码进行分析，这个时候则需要用一些工具。&lt;br&gt;这里介绍cProfile：&lt;br&gt;全代码分析：&lt;br&gt;命令行: cProfile -s tottime your_program.py&lt;br&gt;结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ncalls  tottime  percall  cumtime  percall filename:lineno(function)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;11.850&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.180&lt;/span&gt;  base.py:&lt;span class=&quot;number&quot;&gt;228&lt;/span&gt;(micro_service)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.003&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;11.849&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.180&lt;/span&gt;  tools.py:&lt;span class=&quot;number&quot;&gt;557&lt;/span&gt;(micro_service)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;1056&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;11.073&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.010&lt;/span&gt;  connection.py:&lt;span class=&quot;number&quot;&gt;463&lt;/span&gt;(drain_events)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;1056&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.015&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;11.072&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.010&lt;/span&gt;  connection.py:&lt;span class=&quot;number&quot;&gt;466&lt;/span&gt;(blocking_read)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;1056&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.008&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;10.920&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.010&lt;/span&gt;  transport.py:&lt;span class=&quot;number&quot;&gt;233&lt;/span&gt;(read_frame)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;3168&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.014&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;10.908&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.003&lt;/span&gt;  transport.py:&lt;span class=&quot;number&quot;&gt;370&lt;/span&gt;(_read)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;number&quot;&gt;3168&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;10.892&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.003&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;10.892&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.003&lt;/span&gt;  &amp;#123;method &lt;span class=&quot;string&quot;&gt;&#39;recv&#39;&lt;/span&gt; of &lt;span class=&quot;string&quot;&gt;&#39;_socket.socket&#39;&lt;/span&gt; objects&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;9.814&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.149&lt;/span&gt;  rpc.py:&lt;span class=&quot;number&quot;&gt;350&lt;/span&gt;(__call__)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;8.395&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.127&lt;/span&gt;  rpc.py:&lt;span class=&quot;number&quot;&gt;329&lt;/span&gt;(result)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="http://bin.bloggao.cn/categories/python/"/>
    
    
      <category term="python" scheme="http://bin.bloggao.cn//tags/python/"/>
    
      <category term="cProfile" scheme="http://bin.bloggao.cn//tags/cProfile/"/>
    
  </entry>
  
  <entry>
    <title>多窗口工具tmux快捷键速查表</title>
    <link href="http://bin.bloggao.cn/2017/07/10/tmux_linux/"/>
    <id>http://bin.bloggao.cn/2017/07/10/tmux_linux/</id>
    <published>2017-07-10T05:12:40.000Z</published>
    <updated>2017-07-10T06:29:34.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h2><p>tmux 是在一个终端进行多窗口回话的工具，可在后台运行，进入、断开会话。<br>如下图示例：</p>
<img src="/images/tmux_001.png" width="700" height="280" title="liecol-晓斌|tmux liecol-晓斌|tmux">
<h2 id="tmux的快捷键前缀："><a href="#tmux的快捷键前缀：" class="headerlink" title="tmux的快捷键前缀："></a>tmux的快捷键前缀：</h2><ul>
<li>按下组合键 Ctrl+b (Tmux 快捷键前缀)</li>
<li>放开组合键 Ctrl+b</li>
<li>按下 tmux内部指令<a id="more"></a>
</li>
</ul>
<h2 id="安装tmux"><a href="#安装tmux" class="headerlink" title="安装tmux"></a>安装tmux</h2><p>笔者以Ubuntu为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install tmux</div></pre></td></tr></table></figure></p>
<h2 id="修改tmux数据配置："><a href="#修改tmux数据配置：" class="headerlink" title="修改tmux数据配置："></a>修改tmux数据配置：</h2><p>–路径:~/.tmux.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">前缀绑定 (Ctrl+a)</div><div class="line">set -g prefix ^a</div><div class="line">unbind ^b</div><div class="line">bind a send-prefix</div><div class="line"></div><div class="line">居中窗口列表</div><div class="line">set -g status-justify centre</div><div class="line"></div><div class="line">最大化/恢复窗格</div><div class="line">unbind Up bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp</div><div class="line">unbind Down</div><div class="line">bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp</div></pre></td></tr></table></figure></p>
<h2 id="tmux会话快捷键"><a href="#tmux会话快捷键" class="headerlink" title="tmux会话快捷键:"></a>tmux会话快捷键:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">启动新会话</div><div class="line">tmux new -s session-name</div><div class="line">eg: tmux new -s liecol-0</div><div class="line"></div><div class="line">列出所有会话：</div><div class="line">tmux ls</div><div class="line">create By liecol-晓斌</div><div class="line"></div><div class="line">恢复会话：</div><div class="line">tmux at [-t 会话名]</div><div class="line">tmux a -t session-name</div><div class="line">eg: tmux at -t liecol</div><div class="line"></div><div class="line">强制独占恢复会话：</div><div class="line">tmux at [-dt 会话名]</div><div class="line">tmux at -dt liecol</div><div class="line"></div><div class="line">删除会话</div><div class="line">tmux kill-session -t session-name</div><div class="line">tmux kill-session -t liecol1</div></pre></td></tr></table></figure>
<h2 id="窗口-amp-窗格杂项："><a href="#窗口-amp-窗格杂项：" class="headerlink" title="窗口&amp;窗格杂项："></a>窗口&amp;窗格杂项：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">s 列出所有会话 可用上下键进入对应会话</div><div class="line">$ 重命名当前的会话</div><div class="line">d 断开当前的会话</div><div class="line"></div><div class="line">窗口 (标签页)</div><div class="line">c  创建新窗口</div><div class="line">w  列出所有窗口</div><div class="line">n  后一个窗口</div><div class="line">p  前一个窗口</div><div class="line">f  查找窗口</div><div class="line">,  重命名当前窗口</div><div class="line">&amp;  关闭当前窗口</div><div class="line"></div><div class="line">窗格</div><div class="line">% 水平分割窗口</div><div class="line">&quot; 竖直分割窗口</div><div class="line">&#125; 与下一个窗格交换位置</div><div class="line">&#123; 与上一个窗格交换位置</div><div class="line">将光标移入对应窗口 上下左右箭头</div><div class="line">t 钟表时间</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍：&quot;&gt;&lt;a href=&quot;#介绍：&quot; class=&quot;headerlink&quot; title=&quot;介绍：&quot;&gt;&lt;/a&gt;介绍：&lt;/h2&gt;&lt;p&gt;tmux 是在一个终端进行多窗口回话的工具，可在后台运行，进入、断开会话。&lt;br&gt;如下图示例：&lt;/p&gt;
&lt;img src=&quot;/images/tmux_001.png&quot; width=&quot;700&quot; height=&quot;280&quot; title=&quot;liecol-晓斌|tmux liecol-晓斌|tmux&quot;&gt;
&lt;h2 id=&quot;tmux的快捷键前缀：&quot;&gt;&lt;a href=&quot;#tmux的快捷键前缀：&quot; class=&quot;headerlink&quot; title=&quot;tmux的快捷键前缀：&quot;&gt;&lt;/a&gt;tmux的快捷键前缀：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;按下组合键 Ctrl+b (Tmux 快捷键前缀)&lt;/li&gt;
&lt;li&gt;放开组合键 Ctrl+b&lt;/li&gt;
&lt;li&gt;按下 tmux内部指令
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="tmux" scheme="http://bin.bloggao.cn//tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>Date.parse在IE里NaN问题的解决方式</title>
    <link href="http://bin.bloggao.cn/2017/04/23/date_parse/"/>
    <id>http://bin.bloggao.cn/2017/04/23/date_parse/</id>
    <published>2017-04-23T05:59:50.000Z</published>
    <updated>2017-05-15T06:03:01.111Z</updated>
    
    <content type="html"><![CDATA[<p>之前处理时间问题发现ie浏览器里，Date.parse不起效果，兼容解决方式如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> start_time = test_time.replace(<span class="regexp">/-/g</span>,<span class="string">'/'</span>);</div><div class="line">start_time = <span class="keyword">new</span> <span class="built_in">Date</span>(start_time);</div><div class="line"><span class="keyword">var</span> result = start_time.getTime();</div></pre></td></tr></table></figure></p>
<p>create By liecol-晓斌</p>
<p>2017.04.23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前处理时间问题发现ie浏览器里，Date.parse不起效果，兼容解决方式如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;
    
    </summary>
    
      <category term="javascript" scheme="http://bin.bloggao.cn/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://bin.bloggao.cn//tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>chrome通过SwitchyOmega配置代理</title>
    <link href="http://bin.bloggao.cn/2017/01/11/chrome_SwitchyOmega/"/>
    <id>http://bin.bloggao.cn/2017/01/11/chrome_SwitchyOmega/</id>
    <published>2017-01-11T09:56:30.000Z</published>
    <updated>2017-12-14T10:48:26.891Z</updated>
    
    <content type="html"><![CDATA[<p>之前公司搭建的vpn丢包80%以上，搞的我很郁闷，玩不了。<br>然后就找了一种新的PAC脚本方式，在这做个记录。</p>
<ul>
<li>安装 SwitchyOmega.</li>
</ul>
<p>这个是google的一个扩展程序。<br>SwitchyOmega可以在谷歌应用商店安装。</p>
<p>如果没法连接，也可以在<a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="external">github下载安装最新版</a>安装。<br>安装直接拖动到 google-&gt;更多工具-&gt;扩展程序即可，上面的链接也有显示如何安装。<br><a id="more"></a></p>
<img src="/images/chrom_extensions.png" width="700" height="280" title="liecol-晓斌|谷歌扩展图 liecol-晓斌|谷歌扩展图">
<ul>
<li>新建情景模式</li>
<li><p>选择PAC情景模式</p>
<img src="/images/add_extension_switch.png" width="700" height="280" title="liecol-晓斌|新建情景模式 liecol-晓斌|新建情景模式">
</li>
<li><p>PAC网址选为<br><a href="https://raw.githubusercontent.com/kgfw/fg/master/pac/cfu.pac" target="_blank" rel="external">https://raw.githubusercontent.com/kgfw/fg/master/pac/cfu.pac</a></p>
</li>
</ul>
<img src="/images/pac_address.png" width="700" height="280" title="liecol-晓斌|PAC地址 liecol-晓斌|PAC地址">
<ul>
<li>auto switch 设置<br>有些网站可以不用走代理，就可以在此设置。</li>
</ul>
<img src="/images/auto_switch.png" width="700" height="280" title="liecol-晓斌|auto switch liecol-晓斌|auto switch">
<p>然后google选择对应的模式即可访问了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前公司搭建的vpn丢包80%以上，搞的我很郁闷，玩不了。&lt;br&gt;然后就找了一种新的PAC脚本方式，在这做个记录。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装 SwitchyOmega.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个是google的一个扩展程序。&lt;br&gt;SwitchyOmega可以在谷歌应用商店安装。&lt;/p&gt;
&lt;p&gt;如果没法连接，也可以在&lt;a href=&quot;https://github.com/FelisCatus/SwitchyOmega/releases&quot;&gt;github下载安装最新版&lt;/a&gt;安装。&lt;br&gt;安装直接拖动到 google-&amp;gt;更多工具-&amp;gt;扩展程序即可，上面的链接也有显示如何安装。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="chrome" scheme="http://bin.bloggao.cn//tags/chrome/"/>
    
      <category term="google" scheme="http://bin.bloggao.cn//tags/google/"/>
    
  </entry>
  
  <entry>
    <title>hexo 添加百度谷歌收录sitemap</title>
    <link href="http://bin.bloggao.cn/2017/01/10/hexo_sitemap/"/>
    <id>http://bin.bloggao.cn/2017/01/10/hexo_sitemap/</id>
    <published>2017-01-10T08:51:52.000Z</published>
    <updated>2017-09-27T09:01:28.018Z</updated>
    
    <content type="html"><![CDATA[<p><strong>自动推送:</strong><br>最近发现百度没收录blog子页，然后就研究了一番。<br>之前在theme里添加了一段百度自动推送的js：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</div><div class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</div><div class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</div><div class="line">    s.parentNode.insertBefore(bp, s);</div><div class="line">&#125;)();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p><strong>sitemap提交:</strong><br>感觉没啥人点，自己也懒得点，算了，再补一个sitemap。<br>hexo 站点地图的插件安装方式如下：<br>google：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure></p>
<p>百度：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure></p>
<p>之后编译Blog<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure></p>
<p><a href="http://bin.bloggao.cn/sitemap.xml">http://bin.bloggao.cn/sitemap.xml</a><br><a href="http://bin.bloggao.cn/baidusitemap.xml">http://bin.bloggao.cn/baidusitemap.xml</a></p>
<p><strong>主动推送(这个效率最高):</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-baidu-url-submit --save</div></pre></td></tr></table></figure></p>
<p>根目录_config.yml配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">baidu_url_submit:</div><div class="line">  count: 3 ## 提交最新的链接数量</div><div class="line">  host: bin.bloggao.cn ## 域名</div><div class="line">  token: your_token ## 百度主动推送的token，私钥</div><div class="line">  path: baidu_urls.txt ## 主动推送的文件地址</div></pre></td></tr></table></figure></p>
<p>追加deploy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">- type: baidu_url_submitter</div></pre></td></tr></table></figure></p>
<p>比如博主的是同时到coding和github的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">- type: git</div><div class="line">  repo: </div><div class="line">    github: https://github.com/liecol-gao/liecol-gao.github.io.git,master</div><div class="line">    coding: https://git.coding.net/liecol/liecol.git,coding-pages</div><div class="line">- type: baidu_url_submitter</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;自动推送:&lt;/strong&gt;&lt;br&gt;最近发现百度没收录blog子页，然后就研究了一番。&lt;br&gt;之前在theme里添加了一段百度自动推送的js：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bp = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; curProtocol = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.protocol.split(&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (curProtocol === &lt;span class=&quot;string&quot;&gt;&#39;https&#39;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bp.src = &lt;span class=&quot;string&quot;&gt;&#39;https://zz.bdstatic.com/linksubmit/push.js&#39;&lt;/span&gt;;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        bp.src = &lt;span class=&quot;string&quot;&gt;&#39;http://push.zhanzhang.baidu.com/push.js&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;script&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    s.parentNode.insertBefore(bp, s);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://bin.bloggao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bin.bloggao.cn//tags/hexo/"/>
    
      <category term="Blog" scheme="http://bin.bloggao.cn//tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>hexo LF will be replaced by CRLF 错误</title>
    <link href="http://bin.bloggao.cn/2017/01/10/hexo_lf_will_be_replaced_by_crlf/"/>
    <id>http://bin.bloggao.cn/2017/01/10/hexo_lf_will_be_replaced_by_crlf/</id>
    <published>2017-01-10T08:32:52.000Z</published>
    <updated>2017-01-10T08:39:41.112Z</updated>
    
    <content type="html"><![CDATA[<p>今天用hexo deploy 到github和coding，发现如下错误。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">warning: LF will be replaced by CRLF in tags/wechat/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div></pre></td></tr></table></figure></p>
<p>看到网上资源很少，这边做个记录。<br>解决方式为：</p>
<ul>
<li>删除.deploy_git 目录</li>
<li>git config –global core.autocrlf false</li>
<li>hexo clean</li>
<li>hexo g</li>
<li>hexo d</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天用hexo deploy 到github和coding，发现如下错误。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div
    
    </summary>
    
      <category term="hexo" scheme="http://bin.bloggao.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bin.bloggao.cn//tags/hexo/"/>
    
      <category term="Blog" scheme="http://bin.bloggao.cn//tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>关于开发wechat小程序</title>
    <link href="http://bin.bloggao.cn/2017/01/09/wechat_min_app/"/>
    <id>http://bin.bloggao.cn/2017/01/09/wechat_min_app/</id>
    <published>2017-01-09T15:54:50.000Z</published>
    <updated>2017-01-10T02:54:32.480Z</updated>
    
    <content type="html"><![CDATA[<p>小程序今日上线致敬乔布斯，朋友圈一堆言论刷屏以及一片卧槽声起伏不定。<br>博主也不能免俗的研究了一番，注册了一个小程序，写了个demo。<br>首先发表点个人对该产品的观点：</p>
<ul>
<li>用完即走，目前看来第一批试用者倒是实实在在的没有玩坏，不过根据文档来看，玩坏是早晚的事儿。</li>
<li>与其他应用共用UnionID，这种事儿就能看出腾讯心很大。</li>
<li>优势在于开发上速度会更快，用户量以及用户推广也会方便不少。<br><strong>说说技术坑点：</strong></li>
<li>https,博主不想说脏话。</li>
<li>rpx,博主再次不想说脏话。</li>
<li>自己杜撰程序脚本，博主还是不想说脏话。<a id="more"></a>
</li>
</ul>
<p><strong>说一下它的技术优势:</strong></p>
<ul>
<li>微信api调用方便。</li>
<li>h5处理方便。</li>
<li>少了公众号授权步骤，加载上有微提升。</li>
</ul>
<p>接下来说说对开发文档的理解，个人觉得其有仿js框架的嫌疑，属于野路子里杜撰的一个脚本规则：<br>其实小程序的文档写的还是蛮清楚的：</p>
<ul>
<li>app.json 配置</li>
<li>app.js 脚本</li>
<li>app.wxss 样式</li>
<li>test.wxml 类似html的标签脚本</li>
</ul>
<p><em>小程序页面由以上4部分组成，当然这4个需要放置在同一个目录以及配置同一个文件名称。</em></p>
<hr>
<ul>
<li>wx.api 微信原生API</li>
</ul>
<p>app.json<br>结构与json一致：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">"a"</span>:a, <span class="string">"b"</span>:b, <span class="string">"c"</span>:c&#125;</div></pre></td></tr></table></figure></p>
<p>从他们官方的demo里我摘出了一部分初始配置：</p>
<ul>
<li>pages指显示需要用到的一些page路径;</li>
<li>window指对该窗口的一些配置;</li>
<li>tabBar指的是tab菜单;</li>
<li>networkTimeout指窗口超时配置。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"pages"</span>: [</div><div class="line">    <span class="string">"page/component/index"</span>,</div><div class="line">    <span class="string">"page/API/storage/storage"</span></div><div class="line">  ],</div><div class="line">  <span class="string">"window"</span>: &#123;</div><div class="line">    <span class="string">"navigationBarTextStyle"</span>: <span class="string">"black"</span>,</div><div class="line">    <span class="string">"navigationBarTitleText"</span>: <span class="string">"演示"</span>,</div><div class="line">    <span class="string">"navigationBarBackgroundColor"</span>: <span class="string">"#fbf9fe"</span>,</div><div class="line">    <span class="string">"backgroundColor"</span>: <span class="string">"#fbf9fe"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"tabBar"</span>: &#123;</div><div class="line">    <span class="string">"color"</span>: <span class="string">"#dddddd"</span>,</div><div class="line">    <span class="string">"selectedColor"</span>: <span class="string">"#3cc51f"</span>,</div><div class="line">    <span class="string">"borderStyle"</span>: <span class="string">"black"</span>,</div><div class="line">    <span class="string">"backgroundColor"</span>: <span class="string">"#ffffff"</span>,</div><div class="line">    <span class="string">"list"</span>: [&#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/component/index"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_component.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_component_HL.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"组件"</span></div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/API/index/index"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_API.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_API_HL.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"接口"</span></div><div class="line">    &#125;]</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"networkTimeout"</span>: &#123;</div><div class="line">    <span class="string">"request"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"connectSocket"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"uploadFile"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"downloadFile"</span>: <span class="number">10000</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"debug"</span>: <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>app.js<br>结构(obj参数)：<br>注册程序：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">App(&#123;</div><div class="line">  <span class="attr">onLaunch</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'App Launch'</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">myfunction</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>注册页面：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Page(&#123;</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">texts</span>: [</div><div class="line">      <span class="string">'第1个'</span>,</div><div class="line">      <span class="string">'第2个'</span>,</div><div class="line">      <span class="string">'第3个'</span></div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">tabchange</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'第 '</span> + e.detail.current + <span class="string">' 个t'</span>)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>结构基本如上显示，后面可根据自己的需要来增加对应代码，当然在脚本app.js也依然可以申明js变量。</p>
<p>app.wxss<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>rpx = <span class="number">0.5</span>px</div></pre></td></tr></table></figure></p>
<p>这里面除了rpx比较搞，其他的都还好。</p>
<p>test.wxml<br>这里test是我自己写的。<br>类似于html的标签脚本<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">view</span>/&gt;</span>、<span class="tag">&lt;<span class="name">image</span>/&gt;</span>、<span class="tag">&lt;<span class="name">text</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"liecol_input_自动对焦"</span> <span class="attr">auto-focus</span>/&gt;</span></div></pre></td></tr></table></figure></p>
<p>这玩意儿刚开始不对应对应，还真有可能会乱掉。</p>
<p>标签数据绑定<br>这就是绝对的js框架搬过来了<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; message &#125;&#125;</div><div class="line">Page(&#123;</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">message</span>: <span class="string">'Hello LIECOL!'</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>这里的事件还是蛮有意思的，写起来也很轻松。<br>例如：</p>
<ul>
<li>longtap 手指触摸后，超过350ms再离开</li>
<li>touchcancel 手指触摸动作被打断，如来电提醒，弹窗<br>等等…<br>这个官方文档写的很清楚，我在这里就不再赘述。</li>
</ul>
<p>wx.api<br>微信原生api.<br>如果大家都开发过公众号的话，相信很清楚，根据对应的微信原生api调用方式调用即可。<br>在小程序这边都是以wx.作为前缀。<br>这些原生的微信api接口还是非常实用的，文档也很清楚，在这仅举一例即可：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">App(&#123;</div><div class="line">  <span class="attr">onLaunch</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    wx.login(&#123;</div><div class="line">      <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (res.code) &#123;</div><div class="line">          <span class="comment">//发起网络请求</span></div><div class="line">          wx.request(&#123;</div><div class="line">            <span class="attr">url</span>: <span class="string">'https://test.com/onLogin'</span>,</div><div class="line">            <span class="attr">data</span>: &#123;</div><div class="line">              <span class="attr">code</span>: res.code</div><div class="line">            &#125;</div><div class="line">          &#125;)</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">          <span class="built_in">console</span>.log(<span class="string">'获取用户登录态失败！'</span> + res.errMsg)</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<ul>
<li>APP:界面程序里</li>
<li>onLaunch为：生命周期函数–监听小程序初始化</li>
<li>wx.login 为微信的原生api接口</li>
<li>wx.request 为发起的 HTTPS 请求。</li>
<li>url为地址</li>
<li>data为参数</li>
</ul>
<p>关于小程序基本的结构介绍差不多就是这些.<br>还有一些关于继承A-继承-&gt;B-继承-&gt;C 但是A-/继承-&gt;C<br>一类的就让大家在开发过程中自己去探索吧。<br>Create By<br>liecol-晓斌<br>2017-01-09</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小程序今日上线致敬乔布斯，朋友圈一堆言论刷屏以及一片卧槽声起伏不定。&lt;br&gt;博主也不能免俗的研究了一番，注册了一个小程序，写了个demo。&lt;br&gt;首先发表点个人对该产品的观点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用完即走，目前看来第一批试用者倒是实实在在的没有玩坏，不过根据文档来看，玩坏是早晚的事儿。&lt;/li&gt;
&lt;li&gt;与其他应用共用UnionID，这种事儿就能看出腾讯心很大。&lt;/li&gt;
&lt;li&gt;优势在于开发上速度会更快，用户量以及用户推广也会方便不少。&lt;br&gt;&lt;strong&gt;说说技术坑点：&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;https,博主不想说脏话。&lt;/li&gt;
&lt;li&gt;rpx,博主再次不想说脏话。&lt;/li&gt;
&lt;li&gt;自己杜撰程序脚本，博主还是不想说脏话。
    
    </summary>
    
      <category term="wechat" scheme="http://bin.bloggao.cn/categories/wechat/"/>
    
    
      <category term="wechat" scheme="http://bin.bloggao.cn//tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>Apache2.4与2.2版本访问配置对比</title>
    <link href="http://bin.bloggao.cn/2016/12/25/Apache_Directory/"/>
    <id>http://bin.bloggao.cn/2016/12/25/Apache_Directory/</id>
    <published>2016-12-25T11:02:25.000Z</published>
    <updated>2017-01-03T07:27:23.704Z</updated>
    
    <content type="html"><![CDATA[<p>之前折腾服务器，从<code>Apache2.2</code>-&gt;<code>Nginx1.10</code>-&gt;<code>Apache2.4</code><br>在指定挂载目录的时候出现这么一个问题,log显示为：<br>403错误<br><strong>You don’t have permission to access / on this server.</strong><br><a id="more"></a><br>当时想着Directory更改为如下方式：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;Directory /&gt;</span></div><div class="line"><span class="attribute"><span class="nomarkup">Options</span></span> FollowSymLinks</div><div class="line"><span class="attribute">AllowOverride</span> None</div><div class="line"><span class="attribute"><span class="nomarkup">Order</span></span> deny,allow</div><div class="line"><span class="attribute"><span class="nomarkup">Deny</span></span> from <span class="literal">all</span></div><div class="line"><span class="section">&lt;/Directory&gt;</span></div></pre></td></tr></table></figure></p>
<p>发现依然不好使，后来发现2.2版本与2.4版本配置是不一致的。<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;Directory /&gt;</span></div><div class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> Indexes FollowSymLinks</div><div class="line">    <span class="attribute">AllowOverride</span> None </div><div class="line">    <span class="attribute">Require</span> <span class="literal">all</span> granted</div><div class="line"><span class="section">&lt;/Directory&gt;</span></div></pre></td></tr></table></figure></p>
<p>Apache2.2 的配置:<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute"><span class="nomarkup">Order</span></span> deny,allow\ #排序，先拒绝后允许</div><div class="line"><span class="attribute"><span class="nomarkup">Deny</span></span> from <span class="literal">all</span> #拒绝所有</div></pre></td></tr></table></figure></p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute"><span class="nomarkup">Order</span></span> allow,deny #排序，先允许后拒绝</div><div class="line"><span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span> #允许所有</div></pre></td></tr></table></figure>
<p>Apache2.4 的配置:<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Require</span> <span class="literal">all</span> denied #拒绝所有</div></pre></td></tr></table></figure></p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Require</span> <span class="literal">all</span> granted #允许所有</div></pre></td></tr></table></figure>
<p>根据2.4版本修改后，Apache成功启动。</p>
<p>Ps:后来发现又报404错误，发现在程序中写的.htacess未生效：<br>便再次更改:<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">AllowOverride</span> <span class="literal">All</span>    //若不设置为<span class="literal">All</span>，则所有的.htacess文件的规则都不生效</div></pre></td></tr></table></figure></p>
<p>之后站点就成功跑通了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前折腾服务器，从&lt;code&gt;Apache2.2&lt;/code&gt;-&amp;gt;&lt;code&gt;Nginx1.10&lt;/code&gt;-&amp;gt;&lt;code&gt;Apache2.4&lt;/code&gt;&lt;br&gt;在指定挂载目录的时候出现这么一个问题,log显示为：&lt;br&gt;403错误&lt;br&gt;&lt;strong&gt;You don’t have permission to access / on this server.&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="Apache" scheme="http://bin.bloggao.cn//tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>挂载磁盘和永久挂载</title>
    <link href="http://bin.bloggao.cn/2016/12/23/linux_fdisk/"/>
    <id>http://bin.bloggao.cn/2016/12/23/linux_fdisk/</id>
    <published>2016-12-23T10:02:15.000Z</published>
    <updated>2017-01-04T03:32:54.281Z</updated>
    
    <content type="html"><![CDATA[<p>最近折腾，给磁盘扩容，阿里云得从新挂载，顺道儿这边做个记录。</p>
<p>df -hl(看看有没有挂载成功)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">root@iZ25xadwwi4Z:~# df -hl</div><div class="line">Filesystem      Size  Used Avail Use% Mounted on</div><div class="line">/dev/xvda1       20G  3.4G   16G  18% /</div><div class="line">udev            489M  4.0K  489M   1% /dev</div><div class="line">tmpfs           199M  268K  199M   1% /run</div><div class="line">none            5.0M     0  5.0M   0% /run/lock</div><div class="line">none            498M     0  498M   0% /run/shm</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>fdisk -l (看看挂载分区，下面是我的)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Disk /dev/xvdb: 42.9 GB, 42949672960 bytes</div><div class="line">255 heads, 63 sectors/track, 5221 cylinders, total 83886080 sectors</div><div class="line">Units = sectors of 1 * 512 = 512 bytes</div><div class="line">Sector size (logical/physical): 512 bytes / 512 bytes</div><div class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</div><div class="line">Disk identifier: 0xb5efb014</div><div class="line"></div><div class="line">Device Boot          Start         End      Blocks   Id  System</div><div class="line">/dev/xvdb1            2048    40000000    19998976+  83  Linux</div><div class="line">/dev/xvdb2        40000001    83886079    21943039+  83  Linux</div></pre></td></tr></table></figure></p>
<p>fdisk /dev/path(磁盘路径)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Command (m for help): m</div><div class="line">Command action</div><div class="line">   a   toggle a bootable flag</div><div class="line">   b   edit bsd disklabel</div><div class="line">   c   toggle the dos compatibility flag</div><div class="line">   d   delete a partition</div><div class="line">   l   list known partition types</div><div class="line">   m   print this menu</div><div class="line">   n   add a new partition</div><div class="line">   o   create a new empty DOS partition table</div><div class="line">   p   print the partition table</div><div class="line">   q   quit without saving changes</div><div class="line">   s   create a new empty Sun disklabel</div><div class="line">   t   change a partition&apos;s system id</div><div class="line">   u   change display/entry units</div><div class="line">   v   verify the partition table</div><div class="line">   w   write table to disk and exit</div><div class="line">   x   extra functionality (experts only)</div></pre></td></tr></table></figure></p>
<p>顺序：<br>m<br>|<br>n<br>|<br>p<br>分配和设置大小</p>
<p>分配完成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Command (m for help): wq</div><div class="line">The partition table has been altered!</div><div class="line"></div><div class="line">Calling ioctl() to re-read partition table.</div><div class="line">Syncing disks.</div></pre></td></tr></table></figure></p>
<p>mkfs.ext3 /dev/xvdb1 创建文件系统(需要为其指定一种文件系统才能用来存储数据，这边ext3，可以-t查看)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">root@iZ25xadwwi4Z:~# mkfs.ext3 /dev/xvdb1</div><div class="line">mke2fs 1.42 (29-Nov-2011)</div><div class="line">Filesystem label=</div><div class="line">OS type: Linux</div><div class="line">Block size=4096 (log=2)</div><div class="line">Fragment size=4096 (log=2)</div><div class="line">Stride=0 blocks, Stripe width=0 blocks</div><div class="line">1250928 inodes, 4999744 blocks</div><div class="line">249987 blocks (5.00%) reserved for the super user</div><div class="line">First data block=0</div><div class="line">Maximum filesystem blocks=4294967296</div><div class="line">153 block groups</div><div class="line">32768 blocks per group, 32768 fragments per group</div><div class="line">8176 inodes per group</div><div class="line">Superblock backups stored on blocks: </div><div class="line">	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </div><div class="line">	4096000</div><div class="line"></div><div class="line">Allocating group tables: done                            </div><div class="line">Writing inode tables: done                            </div><div class="line">Creating journal (32768 blocks): done</div><div class="line">Writing superblocks and filesystem accounting information: done</div></pre></td></tr></table></figure></p>
<p>挂载文件系统<br>这边不能选择已有文件，否则会被覆盖掉。<br>mount(临时挂载，好久没挂，我之前忘了重启就没了，到这就结束了。)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /liecol</div><div class="line">mount /dev/xvdb1 /liecol/</div></pre></td></tr></table></figure></p>
<p>查看一下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@iZ25xadwwi4Z:~# ls -l /liecol/</div><div class="line">total 16</div><div class="line">drwx------ 2 root root 16384 Dec 23 20:42 lost+found</div></pre></td></tr></table></figure></p>
<p>这一步，别忘了(永久挂载)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &quot;/dev/xvdb1 /liecol ext3 defaults 1 2&quot; &gt;&gt; /etc/fstab</div></pre></td></tr></table></figure></p>
<p>别和我一样糟糕了。</p>
<p>df -hl 查看一下，再重启试试看就差不多了。</p>
<p>create By liecol<br>2016/12/23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近折腾，给磁盘扩容，阿里云得从新挂载，顺道儿这边做个记录。&lt;/p&gt;
&lt;p&gt;df -hl(看看有没有挂载成功)&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;root@iZ25xadwwi4Z:~# df -hl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Filesystem      Size  Used Avail Use% Mounted on&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/dev/xvda1       20G  3.4G   16G  18% /&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;udev            489M  4.0K  489M   1% /dev&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tmpfs           199M  268K  199M   1% /run&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;none            5.0M     0  5.0M   0% /run/lock&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;none            498M     0  498M   0% /run/shm&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://bin.bloggao.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>PHPExcel的使用</title>
    <link href="http://bin.bloggao.cn/2016/12/20/PHPExcel/"/>
    <id>http://bin.bloggao.cn/2016/12/20/PHPExcel/</id>
    <published>2016-12-20T12:50:00.000Z</published>
    <updated>2017-01-04T03:31:15.905Z</updated>
    
    <content type="html"><![CDATA[<p>下载文件<br><strong>PHPExcel.php(file)</strong><br><strong>PHPExcel(dir)</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">include</span> <span class="string">'PHPExcel.php'</span>;</div><div class="line"><span class="keyword">include</span> <span class="string">'PHPExcel/Writer/Excel2007.php'</span>;</div></pre></td></tr></table></figure></p>
<p>以thinkphp为例贴上一个可抄作业的代码(非tp可删减对应代码即可)：<br>其他单元格细节请自行搜索，没什么太大难度。<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">//导出excel核心代码</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exportExcel</span><span class="params">($fileName,$expTitle,$expCellName,$expTableData)</span></span>&#123;</div><div class="line">        <span class="comment">// vendor('PHPExcel.PHPExcel'); /-----Start</span></div><div class="line">        vendor(<span class="string">"PHPExcel.PHPExcel"</span>);</div><div class="line">        vendor(<span class="string">"PHPExcel.PHPExcel.Writer.Excel5"</span>);</div><div class="line">        vendor(<span class="string">"PHPExcel.PHPExcel.IOFactory.php"</span>);</div><div class="line">        $PHPExcel = <span class="keyword">new</span> \PHPExcel();    <span class="comment">//-----End(这一块可以自行更改)</span></div><div class="line">        $xlsTitle = iconv(<span class="string">'utf-8'</span>, <span class="string">'gb2312'</span>, $expTitle);<span class="comment">//文件名称</span></div><div class="line"><span class="comment">//      $fileName = $_SESSION['loginAccount'].date('_YmdHis');//or $xlsTitle 文件名称可根据自己情况设定</span></div><div class="line"></div><div class="line">        $cellNum = count($expCellName);</div><div class="line">        $dataNum = count($expTableData);</div><div class="line">        </div><div class="line">        $objPHPExcel = $PHPExcel;</div><div class="line">        $cellName = <span class="keyword">array</span>(<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,<span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>,<span class="string">'AA'</span>,<span class="string">'AB'</span>,<span class="string">'AC'</span>,<span class="string">'AD'</span>,<span class="string">'AE'</span>,<span class="string">'AF'</span>,<span class="string">'AG'</span>,<span class="string">'AH'</span>,<span class="string">'AI'</span>,<span class="string">'AJ'</span>,<span class="string">'AK'</span>,<span class="string">'AL'</span>,<span class="string">'AM'</span>,<span class="string">'AN'</span>,<span class="string">'AO'</span>,<span class="string">'AP'</span>,<span class="string">'AQ'</span>,<span class="string">'AR'</span>,<span class="string">'AS'</span>,<span class="string">'AT'</span>,<span class="string">'AU'</span>,<span class="string">'AV'</span>,<span class="string">'AW'</span>,<span class="string">'AX'</span>,<span class="string">'AY'</span>,<span class="string">'AZ'</span>);</div><div class="line">    </div><div class="line">        <span class="keyword">if</span>($cellNum &gt;<span class="number">0</span>)&#123;</div><div class="line">            $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;mergeCells(<span class="string">'A1:'</span>.$cellName[$cellNum<span class="number">-1</span>].<span class="string">'1'</span>);<span class="comment">//合并单元格</span></div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;mergeCells(<span class="string">'A1:'</span>.$cellName[<span class="number">10</span>].<span class="string">'1'</span>);<span class="comment">//合并单元格</span></div><div class="line">        &#125;</div><div class="line">        $objPHPExcel-&gt;setActiveSheetIndex(<span class="number">0</span>)-&gt;setCellValue(<span class="string">'A1'</span>, $expTitle.<span class="string">'  Export time:'</span>.date(<span class="string">'Y-m-d H:i:s'</span>));</div><div class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$cellNum;$i++)&#123;</div><div class="line">            $objPHPExcel-&gt;setActiveSheetIndex(<span class="number">0</span>)-&gt;setCellValue($cellName[$i].<span class="string">'2'</span>, $expCellName[$i][<span class="number">1</span>]);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// Miscellaneous glyphs, UTF-8</span></div><div class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$dataNum;$i++)&#123;</div><div class="line">            <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;$cellNum;$j++)&#123;</div><div class="line">                $XS_SJ = $expTableData[$i][$expCellName[$j][<span class="number">0</span>]];</div><div class="line">                $bar_code = (string)$expTableData[$i][$expCellName[<span class="number">0</span>][<span class="number">0</span>]];</div><div class="line">                <span class="keyword">if</span>((int)($cellNum<span class="number">-1</span>)==$j &amp;&amp; $bar_code)&#123;</div><div class="line">                    $objDrawing = <span class="keyword">new</span> \PHPExcel_Worksheet_Drawing();</div><div class="line">                    $bar_path = <span class="string">"./Public/Bar_code/"</span>.$bar_code.<span class="string">".png"</span>;</div><div class="line">                    $objDrawing-&gt;setPath($bar_path);</div><div class="line">                    $objDrawing-&gt;setHeight(<span class="number">30</span>);</div><div class="line">                    $objDrawing-&gt;setCoordinates($cellName[$j].($i+<span class="number">3</span>), <span class="string">' '</span>.$XS_SJ);</div><div class="line">                    $objDrawing-&gt;setOffsetX(<span class="number">20</span>);</div><div class="line">                    $objDrawing-&gt;setRotation(<span class="number">12</span>);</div><div class="line">                    $objDrawing-&gt;getShadow()-&gt;setVisible(<span class="keyword">true</span>);</div><div class="line">                    $objDrawing-&gt;getShadow()-&gt;setDirection(<span class="number">45</span>);</div><div class="line">                    $objDrawing-&gt;setWorksheet($objPHPExcel-&gt;getActiveSheet());</div><div class="line">                &#125;</div><div class="line">                <span class="comment">//用' ' 处理数字为文本,以免excel中数字太大时科学计数法导致错误</span></div><div class="line">                $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;setCellValue($cellName[$j].($i+<span class="number">3</span>), <span class="string">' '</span>.$XS_SJ);<span class="comment">//控制不能显示科学计数数字。</span></div><div class="line">                $objPHPExcel-&gt;getActiveSheet(<span class="number">0</span>)-&gt;getColumnDimension($cellName[$j])-&gt;setWidth(<span class="number">20</span>);</div><div class="line">                $objPHPExcel-&gt;getActiveSheet()-&gt;getDefaultRowDimension($i)-&gt;setRowHeight(<span class="number">22</span>);</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    </div><div class="line">        header(<span class="string">'pragma:public'</span>);</div><div class="line">        header(<span class="string">"Expires: 0"</span>);</div><div class="line">        header(<span class="string">"Cache-Control:must-revalidate,post-check=0,pre-check=0"</span>);</div><div class="line">        header(<span class="string">"Content-Type:application/force-download"</span>);</div><div class="line">        header(<span class="string">"Content-Type:application/octet-stream"</span>);</div><div class="line">        header(<span class="string">"Content-Type:application/download"</span>);</div><div class="line">        header(<span class="string">'Content-type:application/vnd.ms-excel;charset=utf-8;name="'</span>.$xlsTitle.<span class="string">'.xls"'</span>);</div><div class="line">        header(<span class="string">"Content-Disposition:attachment;filename=$fileName.xls"</span>);<span class="comment">//attachment新窗口打印inline本窗口打印</span></div><div class="line">        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, <span class="string">'Excel5'</span>);</div><div class="line">        $objWriter-&gt;save(<span class="string">'php://output'</span>);</div><div class="line">        <span class="comment">// $objPHPExcel = PHPExcel_IOFactory::load($fileName);</span></div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>调用：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">export_to_excel</span><span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">       $expTitle = <span class="string">'liecol快递'</span> ; <span class="comment">//设置文件名</span></div><div class="line">       $fileName = <span class="string">'liecol快递'</span> . date(<span class="string">'Ymd'</span>); <span class="comment">//设置文件名</span></div><div class="line">       </div><div class="line">       $expCellName  = <span class="keyword">array</span>(</div><div class="line">               <span class="keyword">array</span>(<span class="string">'tracking_number'</span>,<span class="string">'分单号'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_name'</span>,<span class="string">'发件人'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_tel'</span>,<span class="string">'发件人电话'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_address'</span>,<span class="string">'发件人地址'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'sender_country'</span>,<span class="string">'发件人国家'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_name'</span>,<span class="string">'收件人姓名'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_address'</span>,<span class="string">'收件人地址'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_code'</span>,<span class="string">'收件人邮编'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_tel'</span>,<span class="string">'收件人电话'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'recipients_id'</span>,<span class="string">'证件号'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'update_time'</span>,<span class="string">'订单日期'</span>),</div><div class="line">               <span class="keyword">array</span>(<span class="string">'bar_code'</span>,<span class="string">'条形码'</span>)</div><div class="line">       );</div><div class="line">       </div><div class="line">       $expTableData = D(<span class="string">'Order'</span>)-&gt;field(<span class="string">'tracking_number,sender_name,sender_tel,sender_address,sender_country,recipients_name,recipients_address,recipients_code,recipients_tel,recipients_id,update_time'</span>)-&gt;select();</div><div class="line">       <span class="keyword">$this</span>-&gt;exportExcel($fileName,$expTitle,$expCellName,$expTableData);</div><div class="line"></div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>create By<br>liecol-晓斌<br>2016-12-20</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下载文件&lt;br&gt;&lt;strong&gt;PHPExcel.php(file)&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;PHPExcel(dir)&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;PHPExcel.php&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;PHPExcel/Writer/Excel2007.php&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以thinkphp为例贴上一个可抄作业的代码(非tp可删减对应代码即可)：&lt;br&gt;其他单元格细节请自行搜索，没什么太大难度。&lt;br&gt;
    
    </summary>
    
      <category term="php" scheme="http://bin.bloggao.cn/categories/php/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
      <category term="phpexcel" scheme="http://bin.bloggao.cn//tags/phpexcel/"/>
    
  </entry>
  
  <entry>
    <title>php中关于redis的使用</title>
    <link href="http://bin.bloggao.cn/2016/11/23/php_redis/"/>
    <id>http://bin.bloggao.cn/2016/11/23/php_redis/</id>
    <published>2016-11-23T14:22:00.000Z</published>
    <updated>2017-01-04T03:31:31.553Z</updated>
    
    <content type="html"><![CDATA[<p><em>安装扩展我这边不做过多说明，大家自行搜索一下。</em></p>
<p>php连接到redis服务<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="comment">//连接本地的 Redis 服务</span></div><div class="line">   $redis = <span class="keyword">new</span> Redis();</div><div class="line">   $redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="number">6379</span>);</div><div class="line">   <span class="keyword">echo</span> <span class="string">"Connection to liecol server."</span>;</div><div class="line">         <span class="comment">//查看服务是否运行</span></div><div class="line">   <span class="keyword">echo</span> <span class="string">"Running: "</span>+ $redis-&gt;ping();</div><div class="line"></div><div class="line">   <span class="comment">//Connection to liecol server.</span></div><div class="line">   <span class="comment">//Running: PONG</span></div><div class="line">   <span class="comment">//新建数据</span></div><div class="line">   $redis-&gt;set(<span class="string">"liecol"</span>, <span class="string">"name"</span>);</div><div class="line">   $arList = $redis-&gt;get(<span class="string">"liecol-list"</span>);</div><div class="line"></div><div class="line">   $redis-&gt;lpush(<span class="string">"liecol1"</span>, <span class="string">"Redis"</span>);</div><div class="line">   $redis-&gt;lpush(<span class="string">"liecol1"</span>, <span class="string">"Mongodb"</span>);</div><div class="line">   $redis-&gt;lpush(<span class="string">"liecol1"</span>, <span class="string">"Mysql"</span>);</div><div class="line">   $arList = $redis-&gt;lrange(<span class="string">"liecol1"</span>, <span class="number">0</span> ,<span class="number">5</span>);</div><div class="line"></div><div class="line">   $arList = $redis-&gt;keys(<span class="string">"*"</span>);</div><div class="line">   <span class="comment">//liecol</span></div><div class="line">   <span class="comment">//liecol1</span></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>几个常用的命令：<br>setex 带生存时间的写入值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;setex(<span class="string">'key'</span>, <span class="number">3600</span>, <span class="string">'value'</span>); <span class="comment">// sets key → value, with 1h TTL.</span></div></pre></td></tr></table></figure></p>
<p>setnx 判断是否重复的，写入值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;setnx(<span class="string">'key'</span>, <span class="string">'value'</span>);</div><div class="line">$redis-&gt;setnx(<span class="string">'key'</span>, <span class="string">'value'</span>);</div></pre></td></tr></table></figure></p>
<p>delete  删除指定key的值<br>返回已经删除key的个数（长整数）<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;delete(<span class="string">'key1'</span>, <span class="string">'key2'</span>);</div><div class="line">$redis-&gt;delete(<span class="keyword">array</span>(<span class="string">'key3'</span>, <span class="string">'key4'</span>, <span class="string">'key5'</span>));</div></pre></td></tr></table></figure></p>
<p>ttl<br>得到一个key的生存时间</p>
<p>exists<br>判断key是否存在。存在 true 不在 false</p>
<p>lSize<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$redis-&gt;lSize(<span class="string">'key'</span>);</div></pre></td></tr></table></figure></p>
<p>返回名称为key的list有多少个元素</p>
<p>以下为php-redis中文文档(内含命令介绍)<br><a href="http://bbs.redis.cn/forum.php?mod=viewthread&amp;tid=481" target="_blank" rel="external">http://bbs.redis.cn/forum.php?mod=viewthread&amp;tid=481</a></p>
<p>create By<br>liecol-晓斌<br>2016-11-23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;安装扩展我这边不做过多说明，大家自行搜索一下。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;php连接到redis服务&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//连接本地的 Redis 服务&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Redis();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;connect(&lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Connection to liecol server.&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//查看服务是否运行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Running: &quot;&lt;/span&gt;+ $redis-&amp;gt;ping();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Connection to liecol server.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Running: PONG&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//新建数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;set(&lt;span class=&quot;string&quot;&gt;&quot;liecol&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $arList = $redis-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&quot;liecol-list&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;lpush(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Redis&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;lpush(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Mongodb&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $redis-&amp;gt;lpush(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Mysql&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $arList = $redis-&amp;gt;lrange(&lt;span class=&quot;string&quot;&gt;&quot;liecol1&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   $arList = $redis-&amp;gt;keys(&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//liecol&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//liecol1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://bin.bloggao.cn/categories/nosql/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
      <category term="redis" scheme="http://bin.bloggao.cn//tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>jQuery上传插件FileUpload浅析</title>
    <link href="http://bin.bloggao.cn/2016/11/23/jQuery_FileUpload/"/>
    <id>http://bin.bloggao.cn/2016/11/23/jQuery_FileUpload/</id>
    <published>2016-11-23T12:22:00.000Z</published>
    <updated>2017-01-04T03:32:39.761Z</updated>
    
    <content type="html"><![CDATA[<p>对比了一下fileupload与其他的一些多图上传插件的对比<br>发现1fileupload1不需要对浏览器插件有支持，而且是一个神似<code>input file</code>的一个插件，因为业务需要，于是做了一下简单研究。<br>jQuery <code>File Upload</code>支持多文件上传、取消、删除，上传前缩略图预览、列表显示图片大小，支持上传进度条显示。</p>
<p>需要的文件：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">jquey<span class="number">-1.8</span><span class="number">.3</span>.min.js</div><div class="line">jquery-ui-widget.js</div><div class="line">jquery.iframe-transport.js</div><div class="line">jquery.fileupload.js</div></pre></td></tr></table></figure></p>
<p>如果跨站点的话，需要一个iframe的文件，也可支持bootstrap样式修改。</p>
<p>需要的表单样式：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"fileupload"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">data-url</span>=<span class="string">"action_url"</span> <span class="attr">name</span>=<span class="string">"file[]"</span> <span class="attr">multiple</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>action可直接放到input上也可自行添加url。<br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#fileupload_input"</span>).fileupload(&#123;</div><div class="line">    <span class="attr">url</span>:<span class="string">"upload"</span>,<span class="comment">//文件上传地址，当然也可以直接写在input的data-url属性内</span></div><div class="line">    autoUpload: <span class="literal">true</span>,<span class="comment">//是否自动上传  </span></div><div class="line">	dataType: <span class="string">'json'</span>,  </div><div class="line">    <span class="attr">formData</span>:&#123;<span class="attr">param1</span>:<span class="string">"p1"</span>,<span class="attr">param2</span>:<span class="string">"p2"</span>&#125;,<span class="comment">//如果需要额外添加参数可以在这里添加</span></div><div class="line">    done:<span class="function"><span class="keyword">function</span>(<span class="params">e,data</span>)</span>&#123;</div><div class="line">        <span class="comment">//返回的数据在result.result中，假设我们服务器返回了一个json对象</span></div><div class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(result.result));</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>回调函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">add: <span class="function"><span class="keyword">function</span> (<span class="params">e, data</span>) </span>&#123;</div><div class="line">            data.context = $(<span class="string">'&lt;p/&gt;'</span>).text(<span class="string">'Uploading...'</span>).appendTo(<span class="built_in">document</span>.body);</div><div class="line">            data.submit();</div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<p>进度条：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bar"</span> <span class="attr">style</span>=<span class="string">"width: 0%;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">progressall: <span class="function"><span class="keyword">function</span> (<span class="params">e, data</span>) </span>&#123;</div><div class="line">       <span class="keyword">var</span> progress = <span class="built_in">parseInt</span>(data.loaded / data.total * <span class="number">100</span>, <span class="number">10</span>);</div><div class="line">       $(<span class="string">'#progress .bar'</span>).css(</div><div class="line">           <span class="string">'width'</span>,</div><div class="line">           progress + <span class="string">'%'</span></div><div class="line">       );</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>获取回调数据:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">done:<span class="function"><span class="keyword">function</span>(<span class="params">e,data</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(result.result));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>create By<br>liecol-晓斌<br>2016-11-23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对比了一下fileupload与其他的一些多图上传插件的对比&lt;br&gt;发现1fileupload1不需要对浏览器插件有支持，而且是一个神似&lt;code&gt;input file&lt;/code&gt;的一个插件，因为业务需要，于是做了一下简单研究。&lt;br&gt;jQuery &lt;code&gt;File Upload&lt;/code&gt;支持多文件上传、取消、删除，上传前缩略图预览、列表显示图片大小，支持上传进度条显示。&lt;/p&gt;
&lt;p&gt;需要的文件：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;jquey&lt;span class=&quot;number&quot;&gt;-1.8&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;.min.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jquery-ui-widget.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jquery.iframe-transport.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jquery.fileupload.js&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果跨站点的话，需要一个iframe的文件，也可支持bootstrap样式修改。&lt;/p&gt;
&lt;p&gt;需要的表单样式：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fileupload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-url&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;action_url&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;file[]&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;multiple&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;action可直接放到input上也可自行添加url。&lt;br&gt;
    
    </summary>
    
      <category term="javascript" scheme="http://bin.bloggao.cn/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://bin.bloggao.cn//tags/javascript/"/>
    
      <category term="jquery" scheme="http://bin.bloggao.cn//tags/jquery/"/>
    
      <category term="fileupload" scheme="http://bin.bloggao.cn//tags/fileupload/"/>
    
  </entry>
  
  <entry>
    <title>redis操作浅谈</title>
    <link href="http://bin.bloggao.cn/2016/11/23/redis/"/>
    <id>http://bin.bloggao.cn/2016/11/23/redis/</id>
    <published>2016-11-23T11:30:00.000Z</published>
    <updated>2017-01-04T03:31:02.034Z</updated>
    
    <content type="html"><![CDATA[<p><strong>介绍：</strong><br>Redis 开源高性能的<code>key-value</code>数据库，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。<br>读的速度是110000次/s,写的速度是81000次/s。<br><code>redis</code>支持string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)<br>这里不做安装介绍，有需要的可自行搜索教程。<br>Redis 客户端语法：<code>redis-cli</code><br>启动 redis 客户端，打开终端并输入命令 redis-cli.<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$redis-cli</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; PING</div><div class="line">PONG</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>远程服务：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$redis-cli -h host -p port -a password</div><div class="line">eg: $redis-cli -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> -p <span class="number">6379</span> -a <span class="string">"mypass"</span></div></pre></td></tr></table></figure></p>
<p>redis key键<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SET liecol redis</div><div class="line">OK</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; DEL liecol</div><div class="line">(integer) <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>这里说几个常用的，其他的自行搜索redis键的一些命令<br>DEL key 该命令用于在 key 存在是删除 key。<br>DUMP key 序列化给定 key ，并返回被序列化的值。<br>EXISTS key 检查给定 key 是否存在。<br>EXPIRE key seconds 为给定 key 设置过期时间。<br>PERSIST key 移除 key 的过期时间，key 将持久保持。<br>RENAME key newkey 修改 key 的名称</p>
<p>value类型：<br>string（字符串）<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; GET liecol redis</div><div class="line"><span class="string">"redis"</span></div></pre></td></tr></table></figure></p>
<p>这里说几个常用的，其他的自行搜索redis字符串的一些命令<br>SET key value 设置指定 key 的值<br>GET key 获取指定 key 的值。<br>STRLEN key 返回 key 所储存的字符串值的长度。<br>MSET key value [key value …] 同时设置一个或多个 key-value 对。</p>
<p>Redis hash (hash特别适合用于存储对象)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; HMSET liecol name <span class="string">"redis tutorial"</span> description <span class="string">"redis basic commands for caching"</span> likes <span class="number">20</span> visitors <span class="number">23000</span></div><div class="line">OK</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; HGETALL liecol</div><div class="line"> </div><div class="line"><span class="number">1</span>) <span class="string">"name"</span></div><div class="line"><span class="number">2</span>) <span class="string">"redis tutorial"</span></div><div class="line"><span class="number">3</span>) <span class="string">"description"</span></div><div class="line"><span class="number">4</span>) <span class="string">"redis basic commands for caching"</span></div><div class="line"><span class="number">5</span>) <span class="string">"likes"</span></div><div class="line"><span class="number">6</span>) <span class="string">"20"</span></div><div class="line"><span class="number">7</span>) <span class="string">"visitors"</span></div><div class="line"><span class="number">8</span>) <span class="string">"23000"</span></div></pre></td></tr></table></figure></p>
<p>HDEL key field2 [field2] 删除一个或多个哈希表字段<br>HEXISTS key field 查看哈希表 key 中，指定的字段是否存在。<br>HGET key field 获取存储在哈希表中指定字段的值<br>HGETALL key 获取在哈希表中指定 key 的所有字段和值<br>HVALS key 获取哈希表中所有值</p>
<p>Redis列表<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LPUSH liecol name1</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LPUSH liecol name2</div><div class="line">(integer) <span class="number">2</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LPUSH liecol name3</div><div class="line">(integer) <span class="number">3</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; LRANGE liecol <span class="number">0</span> <span class="number">10</span></div><div class="line"><span class="number">1</span>) <span class="string">"name1"</span></div><div class="line"><span class="number">2</span>) <span class="string">"name2"</span></div><div class="line"><span class="number">3</span>) <span class="string">"name3"</span></div></pre></td></tr></table></figure></p>
<p>LINDEX key index 通过索引获取列表中的元素<br>LINSERT key BEFORE|AFTER pivot value 在列表的元素前或者后插入元素<br>LLEN key 获取列表长度<br>LPOP key 移出并获取列表的第一个元素<br>LPUSH key value1 [value2] 将一个或多个值插入到列表头部<br>LREM key count value 移除列表元素<br>LRANGE key start stop 获取列表指定范围内的元素</p>
<p>Redis的Set (集合中不能出现重复的数据)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name1</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name2</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name3</div><div class="line">(integer) <span class="number">1</span></div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SADD liecol name3</div><div class="line">(integer) <span class="number">0</span>-------------(集合中不能出现重复的数据)</div><div class="line">redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; SMEMBERS liecol</div><div class="line"><span class="number">1</span>) <span class="string">"name1"</span></div><div class="line"><span class="number">2</span>) <span class="string">"name2"</span></div><div class="line"><span class="number">3</span>) <span class="string">"name3"</span></div></pre></td></tr></table></figure></p>
<p>SADD key member1 [member2] 向集合添加一个或多个成员<br>SCARD key 获取集合的成员数<br>SDIFF key1 [key2] 返回给定所有集合的差集<br>SINTER key1 [key2] 返回给定所有集合的交集<br>SISMEMBER key member 判断 member 元素是否是集合 key 的成员<br>SMEMBERS key 返回集合中的所有成员<br>SREM key member1 [member2] 移除集合中一个或多个成员<br>SUNION key1 [key2] 返回所有给定集合的并集</p>
<p>事务：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">MULTI</div><div class="line">SET liecol <span class="string">"test"</span></div><div class="line">GET liecol</div><div class="line">SADD x x</div><div class="line">LPUSH y y</div><div class="line">HGETALL z z</div><div class="line">EXEC</div></pre></td></tr></table></figure></p>
<p>DISCARD 取消事务，放弃执行事务块内的所有命令。<br>EXEC 执行所有事务块内的命令。<br>MULTI 标记一个事务块的开始。</p>
<p>redis 性能测试：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">redis-benchmark [option] [option value]</div><div class="line">eg: redis-benchmark -n <span class="number">100000</span></div></pre></td></tr></table></figure></p>
<p>1    -h    指定服务器主机名    127.0.0.1<br>2    -p    指定服务器端口    6379<br>3    -s    指定服务器 socket<br>4    -c    指定并发连接数    50<br>5    -n    指定请求数    10000<br>6    -d    以字节的形式指定 SET/GET 值的数据大小    2<br>7    -k    1=keep alive 0=reconnect    1<br>8    -r    SET/GET/INCR 使用随机 key, SADD 使用随机值<br>9    -P    通过管道传输 <numreq> 请求    1<br>10    -q    强制退出 redis。仅显示 query/sec 值<br>11    –csv    以 CSV 格式输出<br>12    -l    生成循环，永久执行测试<br>13    -t    仅运行以逗号分隔的测试命令列表。<br>14    -I    Idle 模式。仅打开 N 个 idle 连接并等待。</numreq></p>
<p>Eg:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">redis-benchmark -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> -p <span class="number">6379</span> -t set,lpush -n <span class="number">100000</span> -q</div><div class="line">SET: <span class="number">146198.83</span> requests per second</div><div class="line">LPUSH: <span class="number">145560.41</span> requests per second</div></pre></td></tr></table></figure></p>
<p>以上实例中主机为 127.0.0.1，端口号为 6379，执行的命令为 set,lpush，请求数为 10000，通过 -q 参数让结果只显示每秒执行的请求数。</p>
<p>无序在这里就不做介绍了。大家自行搜索一下，以下为整理好的redis命令地址：<br><a href="http://doc.redisfans.com/" target="_blank" rel="external">http://doc.redisfans.com/</a><br><a href="http://www.redis.cn/commands.html" target="_blank" rel="external">http://www.redis.cn/commands.html</a></p>
<p>create By<br>liecol-晓斌<br>2016-11-23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;介绍：&lt;/strong&gt;&lt;br&gt;Redis 开源高性能的&lt;code&gt;key-value&lt;/code&gt;数据库，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。&lt;br&gt;读的速度是110000次/s,写的速度是81000次/s。&lt;br&gt;&lt;code&gt;redis&lt;/code&gt;支持string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)&lt;br&gt;这里不做安装介绍，有需要的可自行搜索教程。&lt;br&gt;Redis 客户端语法：&lt;code&gt;redis-cli&lt;/code&gt;&lt;br&gt;启动 redis 客户端，打开终端并输入命令 redis-cli.&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$redis-cli&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;redis &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;redis &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt;&amp;gt; PING&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PONG&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="nosql" scheme="http://bin.bloggao.cn/categories/nosql/"/>
    
    
      <category term="linux" scheme="http://bin.bloggao.cn//tags/linux/"/>
    
      <category term="nosql" scheme="http://bin.bloggao.cn//tags/nosql/"/>
    
      <category term="redis" scheme="http://bin.bloggao.cn//tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>php对libcurl库的支持cURL</title>
    <link href="http://bin.bloggao.cn/2016/11/20/php_libcurl_curl/"/>
    <id>http://bin.bloggao.cn/2016/11/20/php_libcurl_curl/</id>
    <published>2016-11-20T09:22:00.000Z</published>
    <updated>2017-01-04T03:31:49.290Z</updated>
    
    <content type="html"><![CDATA[<p>首先介绍一下curl，php支持扩展库<code>libcurl</code>，curl模拟浏览器来传输数据。<br>因为是模拟浏览器，所以支持很多传输协议：<br>FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE 以及 LDAP<br>HTTP基于表单的上传，代理，cookies，和用户名+密码的认证<br>用处很多，也可以用来做python爬虫类似的功能，比什么file和file_get_contents要强很多。</p>
<p><strong>简单点说curl分四步：</strong><br>初始化，新建curl资源<br>设置url选项 //curl_setopt()  最重要，最有意思的一步。<br>抓取url，传递到浏览器<br>关闭curl，释放资源<br>curl_setopt($ch, option, value)函数将为一个CURL会话设置选项。option参数是你想要的设置，value是这个选项给定的值。<br>eg:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$ch = curl_init() <span class="comment">//url可以这里写，也可以在后面写。</span></div><div class="line"><span class="comment">//CURLOPT_URL 需要获取的URL地址</span></div><div class="line">curl_setopt($ch, CURLOPT_URL, $url); <span class="comment">//url可以这里写，也可以在init写。</span></div><div class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</div><div class="line"><span class="comment">//执行并获取HTML文档内容</span></div><div class="line">$output = curl_exec($ch);</div><div class="line"><span class="comment">//释放资源</span></div><div class="line">curl_close($ch);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>eg: 如果我们只想把获取到的内容输入到文件，而不是直接输出给浏览器，我们就可以使用CURLOPT_RETURNTRANSFER选项！<br>这一点也是比较常用到的。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$ch = curl_init($url) ;</div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">FALSE</span>);</div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</div><div class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>) ; <span class="comment">// 获取数据返回</span></div><div class="line">curl_setopt($ch, CURLOPT_BINARYTRANSFER, <span class="keyword">true</span>) ; <span class="comment">// 在启用 CURLOPT_RETURNTRANSFER 时候将获取数据返回</span></div><div class="line">$result = curl_exec($ch);</div><div class="line">curl_close($ch);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>eg: 有时候会遇到curl传递证书,大致方式则如下。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$url = <span class="string">'https://mch.tenpay.com/refundapi/gateway/refund.xml'</span>;</div><div class="line">$param = $signObj[<span class="string">"unsign"</span>] . <span class="string">"&amp;sign="</span> . $signObj[<span class="string">"sign"</span>];</div><div class="line"><span class="comment">// 		Log::write($url);</span></div><div class="line">$ch = curl_init($url) ;</div><div class="line"><span class="comment">// CURLOPT_POST启用时会发送一个常规的POST请求，类型为：application/x-www-form-urlencoded，就像表单提交的一样。</span></div><div class="line">curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);</div><div class="line"><span class="comment">//CURLOPT_HEADER	启用时会将头文件的信息作为数据流输出</span></div><div class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</div><div class="line"><span class="comment">//CURLOPT_URL 需要获取的URL地址</span></div><div class="line">curl_setopt($ch, CURLOPT_URL,$url);</div><div class="line"><span class="comment">//CURLOPT_SSL_VERIFYHOST 检查服务器SSL证书中是否存在一个公用名(common name)。译者注：公用名(Common Name)一般来讲就是填写你将要申请SSL证书的域名 (domain)或子域名(sub domain)。2 检查公用名是否存在，并且是否与提供的主机名匹配。</span></div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</div><div class="line"><span class="comment">//全部数据使用HTTP协议中的"POST"操作来发送。要发送文件，在文件名前面加上@前缀并使用完整路径。这个参数可以通过urlencoded后的字符串类似'para1=val1&amp;para2=val2&amp;...'或使用一个以字段名为键值，字段数据为值的数组。如果value是一个数组，Content-Type头将会被设置成multipart/form-data</span></div><div class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $param);</div><div class="line"><span class="comment">//CURLOPT_RETURNTRANSFER 把获取到的内容输入到文件</span></div><div class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="comment">// cert</span></div><div class="line"><span class="comment">//CURLOPT_SSLCERT 一个包含PEM格式证书的文件名</span></div><div class="line">curl_setopt($ch, CURLOPT_SSLCERT, $filePem);</div><div class="line"><span class="comment">//CURLOPT_SSLCERTPASSWD 使用CURLOPT_SSLCERT证书需要的密码</span></div><div class="line">curl_setopt($ch, CURLOPT_SSLCERTPASSWD, $partnerId);</div><div class="line"><span class="comment">//CURLOPT_SSLCERTTYPE 证书的类型。支持的格式有"PEM" (默认值), "DER"和"ENG"</span></div><div class="line">curl_setopt($ch, CURLOPT_SSLCERTTYPE, <span class="string">"PEM"</span>);</div><div class="line"></div><div class="line"><span class="comment">// ca</span></div><div class="line"></div><div class="line"><span class="comment">//禁用后cURL将终止从服务端进行验证。使用CURLOPT_CAINFO选项设置证书使用CURLOPT_CAPATH选项设置证书目录 如果CURLOPT_SSL_VERIFYPEER(默认值为2)被启用，CURLOPT_SSL_VERIFYHOST需要被设置成TRUE否则设置为FALSE。	自cURL 7.10开始默认为TRUE。从cURL 7.10开始默认绑定安装</span></div><div class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">TRUE</span>);</div><div class="line"><span class="comment">//CURLOPT_CAINFO 一个保存着1个或多个用来让服务端验证的证书的文件名。这个参数仅仅在和CURLOPT_SSL_VERIFYPEER一起使用时才有意义。 .</span></div><div class="line">curl_setopt($ch, CURLOPT_CAINFO, $filePemCert);</div><div class="line"></div><div class="line">$result = curl_exec($ch);</div><div class="line">curl_close($ch);</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p>这边带上一个curl的方法函数：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/**</span></div><div class="line">	 * 	作用：使用证书，以post方式提交xml到对应的接口url</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">postXmlSSLCurl</span><span class="params">($xml,$url, $filePem, $filePemCert, $second=<span class="number">30</span>)</span></span></div><div class="line">	&#123;</div><div class="line">		$ch = curl_init();</div><div class="line">		<span class="comment">//超时时间</span></div><div class="line">		curl_setopt($ch,CURLOPT_TIMEOUT,$second);</div><div class="line">		<span class="comment">//这里设置代理，如果有的话</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXY, '8.8.8.8');</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXYPORT, 8080);</span></div><div class="line">        curl_setopt($ch,CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//设置header</span></div><div class="line">		curl_setopt($ch,CURLOPT_HEADER,<span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//要求结果为字符串且输出到屏幕上</span></div><div class="line">		curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="keyword">TRUE</span>);</div><div class="line">		<span class="comment">//设置证书</span></div><div class="line">		<span class="comment">//使用证书：cert 与 key 分别属于两个.pem文件</span></div><div class="line">		<span class="comment">//默认格式为PEM，可以注释</span></div><div class="line">		curl_setopt($ch,CURLOPT_SSLCERTTYPE,<span class="string">'PEM'</span>);</div><div class="line">		curl_setopt($ch,CURLOPT_SSLCERT, $filePemCert);</div><div class="line">		<span class="comment">//默认格式为PEM，可以注释</span></div><div class="line">		curl_setopt($ch,CURLOPT_SSLKEYTYPE,<span class="string">'PEM'</span>);</div><div class="line">		curl_setopt($ch,CURLOPT_SSLKEY, $filePem);</div><div class="line">		<span class="comment">//post提交方式</span></div><div class="line">		curl_setopt($ch,CURLOPT_POST, <span class="keyword">true</span>);</div><div class="line">		curl_setopt($ch,CURLOPT_POSTFIELDS,$xml);</div><div class="line">		$data = curl_exec($ch);</div><div class="line">		<span class="comment">//返回结果</span></div><div class="line">		<span class="keyword">if</span>($data)&#123;</div><div class="line">			Log::write($data);</div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> $data;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123; </div><div class="line">			$error = curl_errno($ch);</div><div class="line">			Log::write(<span class="string">"curl出错，错误码:"</span> . $error);</div><div class="line"><span class="comment">// 			echo "&lt;a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html'&gt;错误原因查询&lt;/a&gt;&lt;/br&gt;";</span></div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 	作用：以post方式提交xml到对应的接口url</div><div class="line">	 */</div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">postXmlCurl</span><span class="params">($xml,$url,$second=<span class="number">30</span>)</span></span></div><div class="line">	&#123;		</div><div class="line">        <span class="comment">//初始化curl        </span></div><div class="line">       	$ch = curl_init();</div><div class="line">		<span class="comment">//设置超时</span></div><div class="line">		curl_setopt($ch, CURLOP_TIMEOUT, $second);</div><div class="line">        <span class="comment">//这里设置代理，如果有的话</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXY, '8.8.8.8');</span></div><div class="line">        <span class="comment">//curl_setopt($ch,CURLOPT_PROXYPORT, 8080);</span></div><div class="line">        curl_setopt($ch,CURLOPT_URL, $url);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</div><div class="line">        curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//设置header</span></div><div class="line">		curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</div><div class="line">		<span class="comment">//要求结果为字符串且输出到屏幕上</span></div><div class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</div><div class="line">		<span class="comment">//post提交方式</span></div><div class="line">		curl_setopt($ch, CURLOPT_POST, <span class="keyword">TRUE</span>);</div><div class="line">		curl_setopt($ch, CURLOPT_POSTFIELDS, $xml);</div><div class="line">		<span class="comment">//运行curl</span></div><div class="line">        $data = curl_exec($ch);</div><div class="line">		curl_close($ch);</div><div class="line">		<span class="comment">//返回结果</span></div><div class="line">		<span class="keyword">if</span>($data)</div><div class="line">		&#123;</div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> $data;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> </div><div class="line">		&#123; </div><div class="line">			$error = curl_errno($ch);</div><div class="line">			Log::write(<span class="string">"curl出错，错误码:"</span> . $error); </div><div class="line"><span class="comment">// 			echo "&lt;a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html'&gt;错误原因查询&lt;/a&gt;&lt;/br&gt;";</span></div><div class="line">			curl_close($ch);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<p><a href="http://www.jb51.net/article/39331.htm?timer=tc" target="_blank" rel="external">http://www.jb51.net/article/39331.htm?timer=tc</a><br>curl的一些option高级选项可参照互联网链接。</p>
<p>create By<br>liecol-晓斌<br>2016-11-20</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先介绍一下curl，php支持扩展库&lt;code&gt;libcurl&lt;/code&gt;，curl模拟浏览器来传输数据。&lt;br&gt;因为是模拟浏览器，所以支持很多传输协议：&lt;br&gt;FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE 以及 LDAP&lt;br&gt;HTTP基于表单的上传，代理，cookies，和用户名+密码的认证&lt;br&gt;用处很多，也可以用来做python爬虫类似的功能，比什么file和file_get_contents要强很多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单点说curl分四步：&lt;/strong&gt;&lt;br&gt;初始化，新建curl资源&lt;br&gt;设置url选项 //curl_setopt()  最重要，最有意思的一步。&lt;br&gt;抓取url，传递到浏览器&lt;br&gt;关闭curl，释放资源&lt;br&gt;curl_setopt($ch, option, value)函数将为一个CURL会话设置选项。option参数是你想要的设置，value是这个选项给定的值。&lt;br&gt;eg:&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ch = curl_init() &lt;span class=&quot;comment&quot;&gt;//url可以这里写，也可以在后面写。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//CURLOPT_URL 需要获取的URL地址&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_setopt($ch, CURLOPT_URL, $url); &lt;span class=&quot;comment&quot;&gt;//url可以这里写，也可以在init写。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_setopt($ch, CURLOPT_RETURNTRANSFER, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_setopt($ch, CURLOPT_HEADER, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//执行并获取HTML文档内容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$output = curl_exec($ch);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//释放资源&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;curl_close($ch);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="curl" scheme="http://bin.bloggao.cn/categories/curl/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
      <category term="curl" scheme="http://bin.bloggao.cn//tags/curl/"/>
    
  </entry>
  
  <entry>
    <title>php常用函数总结</title>
    <link href="http://bin.bloggao.cn/2016/11/19/php_summary/"/>
    <id>http://bin.bloggao.cn/2016/11/19/php_summary/</id>
    <published>2016-11-19T04:22:00.000Z</published>
    <updated>2017-01-04T03:31:23.066Z</updated>
    
    <content type="html"><![CDATA[<p>数据类型转换：<br>第一种转换方式： (int)  (bool)  (float)  (string)  (array) (object)<br>eg:<br><code>(int)$num1</code><br>第二种转换方式：  intval()  floatval()  strval()<br>eg:<br><code>intval($str)</code><br>第三种转换方式：  settype();//强制转换类型<br><code>settype($num,&quot;int&quot;);</code><br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">unset</span>(<span class="keyword">var</span>) <span class="comment">//删除指定变量</span></div><div class="line">sleep() <span class="comment">//函数延迟代码执行若干秒。</span></div><div class="line"><span class="keyword">eval</span>() <span class="comment">//函数把字符串按照 PHP 代码来计算。</span></div><div class="line">defined() <span class="comment">//函数检查某常量是否存在。</span></div><div class="line">define() <span class="comment">//函数定义一个常量。</span></div><div class="line">trim() <span class="comment">//函数从字符串的两端删除空白字符和其他预定义字符。</span></div><div class="line">substr_replace() <span class="comment">//函数把字符串的一部分替换为另一个字符串。</span></div><div class="line">substr_count() <span class="comment">//函数计算子串在字符串中出现的次数。</span></div><div class="line">strrev() <span class="comment">//函数反转字符串。</span></div><div class="line">strlen() <span class="comment">//函数返回字符串的长度。</span></div><div class="line">stristr() <span class="comment">//函数查找字符串在另一个字符串中第一次出现的位置。</span></div><div class="line">stripos() <span class="comment">//函数返回字符串在另一个字符串中第一次出现的位置。</span></div><div class="line">str_split() <span class="comment">//函数把字符串分割到数组中。</span></div><div class="line">str_replace() <span class="comment">//函数使用一个字符串替换字符串中的另一些字符。</span></div><div class="line">md5() <span class="comment">//函数计算字符串的 MD5 散列。</span></div><div class="line">ltrim() <span class="comment">//函数从字符串左侧删除空格或其他预定义字符。</span></div><div class="line">join(<span class="string">","</span>,$arr) <span class="comment">//函数把数组元素组合为一个字符串。</span></div><div class="line">htmlspecialchars(str) <span class="comment">//函数把一些预定义的字符转换为 HTML 实体。</span></div><div class="line">htmlspecialchars_decode(string,flags)</div><div class="line">htmlentities(str) <span class="comment">//函数把字符转换为 HTML 实体。</span></div><div class="line">html_entity_decode(str) <span class="comment">//函数把 HTML 实体转换为字符。</span></div><div class="line">explode(<span class="keyword">array</span>) <span class="comment">//函数把字符串分割为数组。</span></div><div class="line">addslashes(string) <span class="comment">//函数在指定的预定义字符前添加反斜杠。</span></div><div class="line">stripslashes(string) <span class="comment">//addslashes反函数。</span></div><div class="line">round() <span class="comment">//函数对浮点数进行四舍五入。</span></div><div class="line">rand() <span class="comment">//函数返回随机整数。</span></div><div class="line">min() <span class="comment">//返回最小值。</span></div><div class="line">max() <span class="comment">//返回最大值。</span></div><div class="line">ceil() <span class="comment">//函数向上舍入为最接近的整数。</span></div><div class="line"></div><div class="line">array_change_key_case($input_array, CASE_UPPER); <span class="comment">//CASE_LOWER 返回字符串键名全为大写或者小写的数组</span></div><div class="line">array_chunk(<span class="keyword">array</span>, int, <span class="keyword">true</span>/<span class="keyword">false</span>) <span class="comment">//将一个数组分割成多个 （true/false是否保持键名）</span></div><div class="line">array_combine(<span class="keyword">array</span>, <span class="keyword">array</span>)<span class="comment">// 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值</span></div><div class="line">array_filter($array1, <span class="string">"filter"</span>) <span class="comment">//用回调函数过滤数组中的单元</span></div><div class="line">array_intersect(<span class="keyword">array</span>,<span class="keyword">array</span>) <span class="comment">//返回两个数组的交集，键值不变</span></div><div class="line">array_key_exists (key, <span class="keyword">array</span>)<span class="comment">//检查给定的键名或索引是否存在于数组中</span></div><div class="line">array_keys(<span class="keyword">array</span>)<span class="comment">//返回数组的所有键值</span></div><div class="line">array_map(<span class="string">"cube"</span>, <span class="keyword">array</span>)<span class="comment">//返回一个数组，该数组包含了 arr1 中的所有单元经过 callback 作用过之后的单元</span></div><div class="line">array_merge_recursive(<span class="keyword">array</span>,<span class="keyword">array</span>) <span class="comment">//将两个或多个数组的单元合并起来,一个数组中的值附加在前一个数组的后面,返回作为结果的数组。</span></div><div class="line">array_merge() <span class="comment">//将两个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。</span></div><div class="line">array_pad(<span class="keyword">array</span>,<span class="number">-7</span>,<span class="number">1</span>)<span class="comment">//用值将数组填补到指定长度(数组，位置，值)</span></div><div class="line">array_pop (<span class="keyword">array</span>) <span class="comment">//弹出数组最后一个单元</span></div><div class="line">array_push(<span class="keyword">array</span>, str) <span class="comment">//往数组追加内容</span></div><div class="line">array_reverse(<span class="keyword">array</span>,<span class="keyword">true</span>) <span class="comment">//翻转数组，如果 preserve_keys 为 TRUE 则保留原来的键名。</span></div><div class="line">array_search(str,<span class="keyword">array</span>) <span class="comment">//在数组中搜索给定的值，如果成功则返回相应的键名</span></div><div class="line">array_shift(<span class="keyword">array</span>) <span class="comment">//去除数组第一个元素</span></div><div class="line">array_slice(<span class="keyword">array</span>, <span class="number">2</span>,<span class="number">-1</span>) <span class="comment">//返回根据 offset 和 length 参数所指定的 array 数组中的一段序列.类似python的list切片。</span></div><div class="line">array_sum(<span class="keyword">array</span>) <span class="comment">//将数组中的所有值的和以整数或浮点数的结果返回</span></div><div class="line">array_unshift(<span class="keyword">array</span>,str) <span class="comment">//将传入的单元插入到 array 数组的开头</span></div><div class="line">array_values(<span class="keyword">array</span>) <span class="comment">//返回数组中所有的值</span></div><div class="line">arsort(<span class="keyword">array</span>, sort_flags) <span class="comment">//对数组进行逆向排序并保持索引关系</span></div><div class="line">asort(<span class="keyword">array</span>, sort_flags) <span class="comment">//对数组进行顺向排序并保持索引关系</span></div><div class="line">sort_flags:</div><div class="line">SORT_REGULAR - 正常比较单元</div><div class="line">SORT_NUMERIC - 单元被作为数字来比较</div><div class="line">SORT_STRING - 单元被作为字符串来比较</div><div class="line">count(<span class="keyword">array</span>) <span class="comment">//统计变量中的单元数目</span></div><div class="line">current(<span class="keyword">array</span>) <span class="comment">//返回数组中的当前单元</span></div><div class="line">end (<span class="keyword">array</span>) <span class="comment">//将 array 的内部指针移动到最后一个单元，并返回该单元的值。</span></div><div class="line">in_array(str,<span class="keyword">array</span>) <span class="comment">//检查数组中是否存在某个值</span></div><div class="line">krsort() <span class="comment">//对数组按照键名逆向排序，保留键名到数据的关联</span></div><div class="line">ksort() <span class="comment">//对数组按照键名顺序排序，保留键名到数据的关联。本函数主要用于结合数组</span></div><div class="line">rsort() <span class="comment">//本函数对数组进行逆向排序（最高到最低）。</span></div><div class="line">uksort(<span class="keyword">array</span>, <span class="string">'str'</span>) <span class="comment">//键名进行排序, 采用用户自定义函数</span></div><div class="line">uasort(<span class="keyword">array</span>, <span class="string">'str'</span>) <span class="comment">//键值进行排序，采用用户自定义函数</span></div><div class="line">usort(<span class="keyword">array</span>, <span class="string">'str'</span>) <span class="comment">//使用用户自定义的比较函数对数组中的值进行排序</span></div></pre></td></tr></table></figure></p>
<p>create By<br>liecol-晓斌<br>2016-11-19</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据类型转换：&lt;br&gt;第一种转换方式： (int)  (bool)  (float)  (string)  (array) (object)&lt;br&gt;eg:&lt;br&gt;&lt;code&gt;(int)$num1&lt;/code&gt;&lt;br&gt;第二种转换方式：  intval()  floatval()  strval()&lt;br&gt;eg:&lt;br&gt;&lt;code&gt;intval($str)&lt;/code&gt;&lt;br&gt;第三种转换方式：  settype();//强制转换类型&lt;br&gt;&lt;code&gt;settype($num,&amp;quot;int&amp;quot;);&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="php" scheme="http://bin.bloggao.cn/categories/php/"/>
    
    
      <category term="php" scheme="http://bin.bloggao.cn//tags/php/"/>
    
  </entry>
  
</feed>
